(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    573697,      13036]
NotebookOptionsPosition[    516633,      12020]
NotebookOutlinePosition[    562953,      12874]
CellTagsIndexPosition[    562910,      12871]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "SEIQRModel", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/palaciowagner/SystemModeling/master/\
Projects/Monkeypox/SEIQREpidemiologyModel.m\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/EpidemiologyModelModifications.m\
\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
Projects/Coronavirus-propagation-dynamics/WL/\
EpidemiologyModelingVisualizationFunctions.m\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Import", "[", 
   "\"\<https://raw.githubusercontent.com/antononcube/SystemModeling/master/\
WL/SystemDynamicsInteractiveInterfacesFunctions.m\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8772873910603952`*^9, 3.877287433094095*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"07916207-4e49-4eeb-b9e1-a3e103a11b85"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"Importing from GitHub:\"\>",
   "EchoLabel"], "  ", "\<\"EpidemiologyModels.m\"\>"}]], "Echo",
 CellChangeTimes->{
  3.8773444070272408`*^9},ExpressionUUID->"32f77566-70a7-4d98-8d92-\
f946e5491d7f"],

Cell[BoxData[
 TemplateBox[{
  "SEIQRModel", "shdw", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"SEIQRModel\\\\\\\"\\\"}]\\) appears \
in multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"SEIQREpidemiologyModel`\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Global`\\\\\\\"\\\"}], \\\"}\\\"}]\\); definitions in context \\!\
\\(\\*RowBox[{\\\"\\\\\\\"SEIQREpidemiologyModel`\\\\\\\"\\\"}]\\) may shadow \
or be shadowed by other definitions.\"", 2, 2, 1, 25422775249527722208, 
   "Local", "SEIQREpidemiologyModel`SEIQRModel"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8773444083799562`*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"b2d773a9-f39c-41db-8d79-76bb7b86956a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "modelSEIQR", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"modelSEIQR", " ", "=", " ", "\n", "  ", 
   RowBox[{"SEIQRModel", "[", 
    RowBox[{"t", ",", " ", 
     RowBox[{"\"\<InitialConditions\>\"", " ", "->", " ", "True"}], ",", " ", 
     
     RowBox[{"\"\<RateRules\>\"", " ", "->", " ", "True"}], ",", " ", "\n", 
     "   ", 
     RowBox[{
     "\"\<TotalPopulationRepresentation\>\"", " ", "->", " ", 
      "\"\<Constant\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ModelGridTableForm", "[", "modelSEIQR", "]"}]}], "Input",
 CellChangeTimes->{
  3.877208247578244*^9, {3.877208510219081*^9, 3.877208511315215*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"33328eae-4935-4828-88c5-da089a1871ec"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Stocks\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"NP", "[", "t", "]"}], "\<\"Total Population\"\>"},
       {"2", 
        RowBox[{"SP", "[", "t", "]"}], "\<\"Susceptible Population\"\>"},
       {"3", 
        RowBox[{"EP", "[", "t", "]"}], "\<\"Exposed Population\"\>"},
       {"4", 
        RowBox[{"IP", "[", "t", "]"}], "\<\"Infected Population\"\>"},
       {"5", 
        RowBox[{"QP", "[", "t", "]"}], "\<\"Quarantined Population\"\>"},
       {"6", 
        RowBox[{"RP", "[", "t", "]"}], "\<\"Recovered Population\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Rates\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Description\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", "\[Beta]", "\<\"Contact rate for the infected population\"\>"},
       {"2", 
        "\[Alpha]1", "\<\"Proportion of Exposed to Infected Rate \
(Confirmed)\"\>"},
       {"3", "\[Alpha]2", "\<\"Proportion Sent to Quarantine (Suspected)\"\>"},
       {"4", 
        "\[CurlyPhi]", "\<\"Proportion of not detected after medical \
diagnosis (Discarded)\"\>"},
       {"5", "\[Tau]", "\<\"Proportion from Suspected to Recovered class\"\>"},
       {"6", "\[Gamma]", "\<\"Recovery Rate\"\>"},
       {"7", "\[Zeta]", "\<\"Average Incubation Period\"\>"},
       {"8", "\[Lambda]", "\<\"Average Infection Period\"\>"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"Equations\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{
          SuperscriptBox["SP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["\[CurlyPhi]",
               
               "\"Proportion of not detected after medical diagnosis \
(Discarded)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Proportion of not detected after medical diagnosis \
(Discarded)", "Tooltip"]& ],
             
             "\"Proportion of not detected after medical diagnosis \
(Discarded)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Proportion of not detected after medical diagnosis (Discarded)",
              "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"QP", "[", "t", "]"}],
               "\"Quarantined Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Quarantined Population", "Tooltip"]& ],
             "\"Quarantined Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Quarantined Population", "Tooltip"]& ]}], "-", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["\[Beta]",
                "\"Contact rate for the infected population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Contact rate for the infected population", 
                "Tooltip"]& ],
              "\"Contact rate for the infected population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Contact rate for the infected population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"IP", "[", "t", "]"}],
                "\"Infected Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Infected Population", "Tooltip"]& ],
              "\"Infected Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Infected Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Susceptible Population", "Tooltip"]& ]}], 
           RowBox[{"NP", "[", "0", "]"}]]}]}]},
       {"2", 
        RowBox[{
         RowBox[{
          SuperscriptBox["EP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox["\[Alpha]1",
                   "\"Proportion of Exposed to Infected Rate (Confirmed)\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, 
                   "Proportion of Exposed to Infected Rate (Confirmed)", 
                   "Tooltip"]& ],
                 "\"Proportion of Exposed to Infected Rate (Confirmed)\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Proportion of Exposed to Infected Rate (Confirmed)", 
                 "Tooltip"]& ], "+", 
               TagBox[
                TooltipBox[
                 TagBox[
                  TooltipBox["\[Alpha]2",
                   "\"Proportion Sent to Quarantine (Suspected)\"",
                   TooltipStyle->"TextStyling"],
                  
                  Annotation[#, "Proportion Sent to Quarantine (Suspected)", 
                   "Tooltip"]& ],
                 "\"Proportion Sent to Quarantine (Suspected)\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, "Proportion Sent to Quarantine (Suspected)", 
                 "Tooltip"]& ]}], ")"}], " ", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox[
                 RowBox[{"EP", "[", "t", "]"}],
                 "\"Exposed Population\"",
                 TooltipStyle->"TextStyling"],
                Annotation[#, "Exposed Population", "Tooltip"]& ],
               "\"Exposed Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Exposed Population", "Tooltip"]& ]}], ")"}]}], 
          "+", 
          FractionBox[
           RowBox[{
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox["\[Beta]",
                "\"Contact rate for the infected population\"",
                TooltipStyle->"TextStyling"],
               
               Annotation[#, "Contact rate for the infected population", 
                "Tooltip"]& ],
              "\"Contact rate for the infected population\"",
              TooltipStyle->"TextStyling"],
             
             Annotation[#, "Contact rate for the infected population", 
              "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"IP", "[", "t", "]"}],
                "\"Infected Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Infected Population", "Tooltip"]& ],
              "\"Infected Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Infected Population", "Tooltip"]& ], " ", 
            TagBox[
             TooltipBox[
              TagBox[
               TooltipBox[
                RowBox[{"SP", "[", "t", "]"}],
                "\"Susceptible Population\"",
                TooltipStyle->"TextStyling"],
               Annotation[#, "Susceptible Population", "Tooltip"]& ],
              "\"Susceptible Population\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Susceptible Population", "Tooltip"]& ]}], 
           RowBox[{"NP", "[", "0", "]"}]]}]}]},
       {"3", 
        RowBox[{
         RowBox[{
          SuperscriptBox["IP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["\[Alpha]1",
               "\"Proportion of Exposed to Infected Rate (Confirmed)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Proportion of Exposed to Infected Rate (Confirmed)", 
               "Tooltip"]& ],
             "\"Proportion of Exposed to Infected Rate (Confirmed)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, 
             "Proportion of Exposed to Infected Rate (Confirmed)", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"EP", "[", "t", "]"}],
               "\"Exposed Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Exposed Population", "Tooltip"]& ],
             "\"Exposed Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Exposed Population", "Tooltip"]& ]}], "-", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["\[Gamma]",
               "\"Recovery Rate\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Recovery Rate", "Tooltip"]& ],
             "\"Recovery Rate\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Recovery Rate", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"IP", "[", "t", "]"}],
               "\"Infected Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Infected Population", "Tooltip"]& ],
             "\"Infected Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Infected Population", "Tooltip"]& ]}]}]}]},
       {"4", 
        RowBox[{
         RowBox[{
          SuperscriptBox["QP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["\[Alpha]2",
               "\"Proportion Sent to Quarantine (Suspected)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Proportion Sent to Quarantine (Suspected)", 
               "Tooltip"]& ],
             "\"Proportion Sent to Quarantine (Suspected)\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Proportion Sent to Quarantine (Suspected)", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"EP", "[", "t", "]"}],
               "\"Exposed Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Exposed Population", "Tooltip"]& ],
             "\"Exposed Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Exposed Population", "Tooltip"]& ]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox["\[Tau]",
                 "\"Proportion from Suspected to Recovered class\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, "Proportion from Suspected to Recovered class", 
                 "Tooltip"]& ],
               "\"Proportion from Suspected to Recovered class\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Proportion from Suspected to Recovered class", 
               "Tooltip"]& ], "+", 
             TagBox[
              TooltipBox[
               TagBox[
                TooltipBox["\[CurlyPhi]",
                 
                 "\"Proportion of not detected after medical diagnosis \
(Discarded)\"",
                 TooltipStyle->"TextStyling"],
                
                Annotation[#, 
                 "Proportion of not detected after medical diagnosis \
(Discarded)", "Tooltip"]& ],
               
               "\"Proportion of not detected after medical diagnosis \
(Discarded)\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, 
               "Proportion of not detected after medical diagnosis \
(Discarded)", "Tooltip"]& ]}], ")"}], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"QP", "[", "t", "]"}],
               "\"Quarantined Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Quarantined Population", "Tooltip"]& ],
             "\"Quarantined Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Quarantined Population", "Tooltip"]& ]}]}]}]},
       {"5", 
        RowBox[{
         RowBox[{
          SuperscriptBox["RP", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
         RowBox[{
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["\[Gamma]",
               "\"Recovery Rate\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Recovery Rate", "Tooltip"]& ],
             "\"Recovery Rate\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Recovery Rate", "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"IP", "[", "t", "]"}],
               "\"Infected Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Infected Population", "Tooltip"]& ],
             "\"Infected Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Infected Population", "Tooltip"]& ]}], "+", 
          RowBox[{
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox["\[Tau]",
               "\"Proportion from Suspected to Recovered class\"",
               TooltipStyle->"TextStyling"],
              
              Annotation[#, "Proportion from Suspected to Recovered class", 
               "Tooltip"]& ],
             "\"Proportion from Suspected to Recovered class\"",
             TooltipStyle->"TextStyling"],
            
            Annotation[#, "Proportion from Suspected to Recovered class", 
             "Tooltip"]& ], " ", 
           TagBox[
            TooltipBox[
             TagBox[
              TooltipBox[
               RowBox[{"QP", "[", "t", "]"}],
               "\"Quarantined Population\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Quarantined Population", "Tooltip"]& ],
             "\"Quarantined Population\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "Quarantined Population", "Tooltip"]& ]}]}]}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"RateRules\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Symbol\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Value\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{"NP", "[", "0", "]"}], "100000"},
       {"2", 
        TagBox[
         TooltipBox["\[Beta]",
          "\"Contact rate for the infected population\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Contact rate for the infected population", 
          "Tooltip"]& ], "6.`*^-6"},
       {"3", 
        TagBox[
         TooltipBox["\[Alpha]1",
          "\"Proportion of Exposed to Infected Rate (Confirmed)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Proportion of Exposed to Infected Rate (Confirmed)", 
          "Tooltip"]& ], 
        FractionBox["1", 
         TagBox[
          TooltipBox["\[Zeta]",
           "\"Average Incubation Period\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Average Incubation Period", "Tooltip"]& ]]},
       {"4", 
        TagBox[
         TooltipBox["\[Alpha]2",
          "\"Proportion Sent to Quarantine (Suspected)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Proportion Sent to Quarantine (Suspected)", 
          "Tooltip"]& ], 
        FractionBox["1", 
         TagBox[
          TooltipBox["\[Zeta]",
           "\"Average Incubation Period\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Average Incubation Period", "Tooltip"]& ]]},
       {"5", 
        TagBox[
         TooltipBox["\[CurlyPhi]",
          "\"Proportion of not detected after medical diagnosis (Discarded)\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "Proportion of not detected after medical diagnosis (Discarded)", 
          "Tooltip"]& ], "0.2`"},
       {"6", 
        TagBox[
         TooltipBox["\[Tau]",
          "\"Proportion from Suspected to Recovered class\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Proportion from Suspected to Recovered class", 
          "Tooltip"]& ], 
        TagBox[
         TooltipBox["\[Gamma]",
          "\"Recovery Rate\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Recovery Rate", "Tooltip"]& ]},
       {"7", 
        TagBox[
         TooltipBox["\[Gamma]",
          "\"Recovery Rate\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Recovery Rate", "Tooltip"]& ], 
        FractionBox["1", 
         TagBox[
          TooltipBox["\[Lambda]",
           "\"Average Infection Period\"",
           TooltipStyle->"TextStyling"],
          Annotation[#, "Average Infection Period", "Tooltip"]& ]]},
       {"8", 
        TagBox[
         TooltipBox["\[Zeta]",
          "\"Average Incubation Period\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Average Incubation Period", "Tooltip"]& ], "13"},
       {"9", 
        TagBox[
         TooltipBox["\[Lambda]",
          "\"Average Infection Period\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Average Infection Period", "Tooltip"]& ], 
        FractionBox["31", "4"]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
          GrayLevel[0.8], 4 -> GrayLevel[0]}, 
        "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}], ",", 
   RowBox[{"\<\"InitialConditions\"\>", "\[Rule]", 
    TagBox[GridBox[{
       {
        StyleBox["\<\"#\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["\<\"Equation\"\>",
         StripOnInput->False,
         LineColor->RGBColor[0, 0, 1],
         FrontFaceColor->RGBColor[0, 0, 1],
         BackFaceColor->RGBColor[0, 0, 1],
         GraphicsColor->RGBColor[0, 0, 1],
         FontFamily->"Times",
         FontColor->RGBColor[0, 0, 1]]},
       {"1", 
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "99999"}]},
       {"2", 
        RowBox[{
         RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"3", 
        RowBox[{
         RowBox[{"IP", "[", "0", "]"}], "\[Equal]", "1"}]},
       {"4", 
        RowBox[{
         RowBox[{"QP", "[", "0", "]"}], "\[Equal]", "0"}]},
       {"5", 
        RowBox[{
         RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96], 
          GrayLevel[1], 
          GrayLevel[0.96]}},
      GridBoxDividers->{
       "ColumnsIndexed" -> {
         1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
          GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     
     "Grid"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877344410162191*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"bc3dc7d0-483f-4a13-8463-2346a51c49be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Getting Data", "Section",ExpressionUUID->"e2a2a5d8-d287-4e59-ac76-6006567a8389"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cievsPEData", " ", ":=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://raw.githubusercontent.com/palaciowagner/SystemModeling/\
master/Projects/Monkeypox/data/Pernambuco/Monkeypox%20-%20Pernambuco.csv\>\"",
      ",", " ", "\n", "   ", "\"\<Dataset\>\"", ",", " ", 
     RowBox[{"\"\<HeaderLines\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"cievsRECData", " ", ":=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<https://raw.githubusercontent.com/palaciowagner/SystemModeling/\
master/Projects/Monkeypox/data/Recife/Monkeypox%20-%20Recife.csv\>\"", ",", 
     " ", "\"\<Dataset\>\"", ",", " ", "\n", "   ", 
     RowBox[{"\"\<HeaderLines\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"owdPEData", " ", ":=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://raw.githubusercontent.com/globaldothealth/monkeypox/main/\
latest_deprecated.csv\>\"", ",", " ", "\"\<Dataset\>\"", ",", " ", 
      RowBox[{"\"\<HeaderLines\>\"", " ", "\[Rule]", " ", "1"}]}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"dateFormat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Day\>\"", ",", " ", "\"\</\>\"", ",", " ", "\"\<Month\>\"", ",", 
     " ", "\"\</\>\"", ",", " ", "\"\<Year\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PEdataMap", " ", "=", " ", 
   RowBox[{"cievsPEData", " ", "//", " ", "Normal"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"RECdataMap", " ", "=", " ", 
   RowBox[{"cievsRECData", " ", "//", " ", "Normal"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"owdPEDataMap", " ", "=", " ", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringContainsQ", "[", " ", 
         RowBox[{"#Country", ",", " ", "\"\<Brazil\>\""}], "]"}], " ", "&&", 
        " ", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#Location", ",", " ", "\"\<Pernambuco\>\""}], "]"}], " ", "&&",
         " ", 
        RowBox[{"StringContainsQ", "[", 
         RowBox[{"#Status", ",", " ", "\"\<confirmed\>\""}], "]"}]}], "&"}], 
      "]"}], "]"}], " ", "@", " ", "owdPEData"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8771227366584253`*^9, 3.877122765250144*^9}, {
   3.877277351657699*^9, 3.8772773856002817`*^9}, 3.877278417991353*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"69e6325d-778c-4b8e-b387-eb5593eeccc2"],

Cell[CellGroupData[{

Cell["Popula\[CCedilla]\[OTilde]es", "Subsubsection",ExpressionUUID->"d08d26a5-2bdc-41be-aeaf-fcf936fac7f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pernambucoEntity", " ", "=", " ", 
     RowBox[{"Entity", "[", 
      RowBox[{"\"\<AdministrativeDivision\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Pernambuco\>\"", ",", " ", "\"\<Brazil\>\""}], "}"}]}], 
      "]"}]}], ";", "\n", 
    RowBox[{"recifeEntity", " ", "=", " ", 
     RowBox[{"Entity", "[", 
      RowBox[{"\"\<City\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Recife\>\"", ",", " ", "\"\<Pernambuco\>\"", ",", " ", 
         "\"\<Brazil\>\""}], "}"}]}], "]"}]}], ";", "\n", 
    RowBox[{"popProperty", " ", "=", " ", "\"\<Population\>\""}], ";"}], 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"pernambucoPopulation", " ", "=", " ", 
     RowBox[{"QuantityMagnitude", "[", "9674793", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"IBGE", " ", "2022"}], " ", "-", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"www", ".", "ibge", ".", "gov", ".", "br"}], "/", "cidades"}], 
      "-", "e", "-", 
      RowBox[{"estados", "/", 
       RowBox[{"pe", ".", "html"}]}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"recifePopulation", " ", "=", "  ", 
     RowBox[{"QuantityMagnitude", "[", "1661017", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"IBGE", " ", "2022"}], " ", "-", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"www", ".", "ibge", ".", "gov", ".", "br"}], "/", "cidades"}], 
      "-", "e", "-", 
      RowBox[{"estados", "/", 
       RowBox[{"pe", ".", "html"}]}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"maleInfected", " ", "=", " ", 
     RowBox[{"80.6", "/", "100"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Cievs", "/", 
       RowBox[{"PE", ".", " ", "Dados"}]}], " ", "atualizados", " ", "em", 
      " ", "03.11", ".2022"}], ",", " ", 
     RowBox[{"15", 
      RowBox[{"h", "."}]}]}], "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Clear", "[", "Smooth", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Smooth", "[", "data_", "]"}], " ", ":=", " ", 
     RowBox[{"MovingMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Ceiling", "[", 
         RowBox[{"Mean", "[", "#", "]"}], "]"}], "&"}], ",", " ", "data", ",",
        " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", " ", "\"\<Day\>\""}], "}"}], ",", " ", "Left", 
         ",", " ", "\"\<Week\>\""}], "}"}], ",", " ", "Automatic"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"3f0352b0-1549-4025-ac34-76f26a91d6c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"estimatedInitialSusceptiblePopulation", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"recifePopulation", "/", "pernambucoPopulation"}], ")"}], "*", 
     "maleInfected"}], ")"}], "*", "recifePopulation"}]}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"5904d9b7-cd79-451c-b72b-99c000b1dc9d"],

Cell[BoxData["229848.41580351474`"], "Output",
 CellChangeTimes->{3.8773444400060167`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"d04848ab-b3c3-4ace-aec5-0f3ac78c06bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Confirmados", "Subsubsection",ExpressionUUID->"e123596b-5e5e-4544-8431-58a6a8d76039"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"groupedByDateOWD", " ", "=", " ", 
   RowBox[{
    RowBox[{"GroupBy", "[", 
     RowBox[{
      RowBox[{"Normal", "[", "owdPEDataMap", "]"}], ",", " ", 
      RowBox[{
       RowBox[{"FromDateString", "[", 
        RowBox[{"#\"Date_confirmation\"", ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Year\>\"", ",", " ", "\"\<-\>\"", ",", " ", "\"\<Month\>\"", 
           ",", " ", "\"\<-\>\"", ",", " ", "\"\<Day\>\""}], "}"}]}], "]"}], 
       "&"}], ",", "Length"}], "]"}], " ", "//", " ", "Normal"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"groupedCievs", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FromDateString", "[", 
        RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], "\[Rule]", " ", 
       "#\"Confirmados\""}], " ", "&"}], ",", "PEdataMap"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"confirmadosJoined", " ", "=", " ", 
   RowBox[{"Union", "[", 
    RowBox[{"groupedByDateOWD", ",", " ", 
     RowBox[{"Take", "[", 
      RowBox[{"groupedCievs", ",", " ", 
       RowBox[{"{", 
        RowBox[{"15", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}]}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"totalJoinedSmoothed", " ", "=", " ", 
    RowBox[{"Smooth", "[", 
     RowBox[{"Accumulate", "[", 
      RowBox[{"TimeSeries", "[", 
       RowBox[{"confirmadosJoined", ",", " ", 
        RowBox[{"TemporalRegularity", "\[Rule]", "True"}]}], "]"}], "]"}], 
     "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"totalConfirmadosOWDPE", "=", 
     RowBox[{"Smooth", "[", 
      RowBox[{"Accumulate", "[", 
       RowBox[{"TimeSeries", "[", 
        RowBox[{"groupedByDateOWD", ",", " ", 
         RowBox[{"TemporalRegularity", "\[Rule]", "True"}]}], "]"}], "]"}], 
      "]"}]}], ";"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"totalConfirmadosPE", " ", "=", " ", "\n", "    ", 
   RowBox[{"Smooth", "[", 
    RowBox[{"Accumulate", "[", "\n", 
     RowBox[{"TimeSeries", "[", "\n", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FromDateString", "[", 
             RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], ",", " ", 
            "#\"Confirmados\""}], "}"}], " ", "&"}], ",", "PEdataMap"}], 
        "]"}], ",", " ", "\n", 
       RowBox[{"TemporalRegularity", " ", "\[Rule]", " ", "True"}]}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalConfirmadosREC", " ", "=", " ", "\n", " ", 
   RowBox[{"Smooth", "[", 
    RowBox[{"Accumulate", "[", "\n", 
     RowBox[{"TimeSeries", "[", "\n", "     ", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FromDateString", "[", 
             RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], ",", " ", 
            "#Confirmados"}], "}"}], " ", "&"}], ",", " ", "\n", "      ", 
         "RECdataMap"}], "]"}], ",", 
       RowBox[{"TemporalRegularity", " ", "\[Rule]", " ", "True"}]}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"DateListLogPlot", "[", 
  RowBox[{
   RowBox[{"Tooltip", "[", 
    RowBox[{"{", 
     RowBox[{"totalJoinedSmoothed", " ", ",", "totalConfirmadosREC"}], "}"}], 
    " ", "]"}], ",", " ", "\n", " ", 
   RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Pernambuco\>\"", ",", " ", "\"\<Recife\>\""}], "}"}]}], ",",
    " ", "\n", " ", 
   RowBox[{"PlotMarkers", " ", "\[Rule]", " ", "False"}], ",", " ", 
   RowBox[{"GridLines", " ", "\[Rule]", " ", 
    RowBox[{"Keys", "[", "confirmadosJoined", "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Semana Epidemiol\[OAcute]gica\>\"", ",", 
      "\"\<Casos Confirmados\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.87720868559627*^9, 3.877208704701535*^9}, 
   3.877277442977724*^9, {3.877277638490176*^9, 3.877277640669333*^9}, {
   3.877278117070966*^9, 3.8772781171311493`*^9}, {3.877278272997335*^9, 
   3.877278276637241*^9}, {3.8772783085407667`*^9, 3.877278347832488*^9}, {
   3.877278383508916*^9, 3.877278408823234*^9}, {3.877278590387547*^9, 
   3.877278601253113*^9}, {3.877278662492187*^9, 3.8772786826887217`*^9}, 
   3.87727875162724*^9, {3.8773449286264973`*^9, 
   3.877344932648016*^9}},ExpressionUUID->"1be0878b-8297-40db-911e-\
04cbfbe0c60e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Thu 21 Jul 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "7", ",", "21"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "2"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 29 Jul 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "7", ",", "29"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "4"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 5 Aug 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "8", ",", "5"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "3"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Sat 6 Aug 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "8", ",", "6"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "3"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 12 Aug 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "8", ",", "12"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "2"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 16 Aug 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "8", ",", "16"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "1"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Thu 18 Aug 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "8", ",", "18"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "3"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Wed 24 Aug 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "8", ",", "24"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "4"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 26 Aug 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "8", ",", "26"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "1"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Mon 29 Aug 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "8", ",", "29"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "1"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Wed 31 Aug 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "8", ",", "31"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "3"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Thu 1 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "1"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "14"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Sun 4 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "4"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "6"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 6 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "6"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "1"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Thu 8 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "8"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "8"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 9 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "9"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "4"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 13 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "13"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "7"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Wed 14 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "14"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "23"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Thu 15 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "15"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "5"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 16 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "16"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "12"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Sat 17 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "17"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "4"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 20 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "20"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "7"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 23 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "23"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "8"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 27 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "27"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "2"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 30 Sep 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "9", ",", "30"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "16"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 4 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "4"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "10"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 7 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "7"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "10"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 11 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "11"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "0"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 14 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "14"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "0"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 18 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "18"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "1"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 21 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "21"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "0"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 25 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "25"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "3"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 28 Oct 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "10", ",", "28"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "10"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Tue 1 Nov 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "11", ",", "1"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "8"}], ",", 
   RowBox[{
    TemplateBox[{
      RowBox[{"\"Fri 4 Nov 2022\""}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"2022", ",", "11", ",", "4"}], "}"}], ",", "\"Day\""}], 
        "]"}]},
     "DateObject",
     Editable->False], "\[Rule]", "24"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8773444404953117`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"e41e00b5-180d-4a8a-878d-73f4f2af2623"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8673504*^9, 0.6931471805599453}, {3.8679552*^9, 
         1.791759469228055}, {3.86856*^9, 2.3978952727983707`}, {3.8691648*^9,
          2.772588722239781}, {3.8697696*^9, 2.995732273553991}, {
         3.8703744*^9, 3.367295829986474}, {3.8709792*^9, 
         3.871201010907891}, {3.871584*^9, 4.30406509320417}, {3.8721888*^9, 
         4.68213122712422}, {3.8727936*^9, 4.844187086458591}, {3.8733984*^9, 
         5.003946305945459}, {3.8740032*^9, 5.099866427824199}, {3.874608*^9, 
         5.10594547390058}, {3.8752128*^9, 5.117993812416755}, {3.8758176*^9, 
         5.204006687076795}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8665728*^9, 1.0986122886681098`}, {3.8671776*^9, 
         2.0794415416798357`}, {3.8677824*^9, 2.1972245773362196`}, {
         3.8683872*^9, 2.6390573296152584`}, {3.868992*^9, 
         3.044522437723423}, {3.8695968*^9, 3.6109179126442243`}, {
         3.8702016*^9, 3.784189633918261}, {3.8708064*^9, 
         3.8918202981106265`}, {3.8714112*^9, 3.9318256327243257`}, {
         3.872016*^9, 3.970291913552122}, {3.8726208*^9, 4.060443010546419}, {
         3.8732256*^9, 4.219507705176107}, {3.8738304*^9, 4.31748811353631}, {
         3.8744352*^9, 4.31748811353631}}]}}, {
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8673504*^9, 0.6931471805599453}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8673504`*^9", ",", "2.`"}], "}"}]], 
        Annotation[#, {3.8673504*^9, 2.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8679552*^9, 1.791759469228055}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8679552`*^9", ",", "6.`"}], "}"}]], 
        Annotation[#, {3.8679552*^9, 6.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.86856*^9, 2.3978952727983707`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.86856`*^9", ",", "11.`"}], "}"}]], 
        Annotation[#, {3.86856*^9, 11.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8691648*^9, 2.772588722239781}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8691648`*^9", ",", "16.`"}], "}"}]], 
        Annotation[#, {3.8691648*^9, 16.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8697696*^9, 2.995732273553991}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8697696`*^9", ",", "20.`"}], "}"}]], 
        Annotation[#, {3.8697696*^9, 20.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8703744*^9, 3.367295829986474}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8703744`*^9", ",", "29.`"}], "}"}]], 
        Annotation[#, {3.8703744*^9, 29.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8709792*^9, 3.871201010907891}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8709792`*^9", ",", "48.`"}], "}"}]], 
        Annotation[#, {3.8709792*^9, 48.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.871584*^9, 4.30406509320417}}]}, 
         RowBox[{"{", 
           RowBox[{"3.871584`*^9", ",", "74.`"}], "}"}]], 
        Annotation[#, {3.871584*^9, 74.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8721888*^9, 4.68213122712422}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8721888`*^9", ",", "108.`"}], "}"}]], 
        Annotation[#, {3.8721888*^9, 108.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8727936*^9, 4.844187086458591}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8727936`*^9", ",", "127.`"}], "}"}]], 
        Annotation[#, {3.8727936*^9, 127.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8733984*^9, 5.003946305945459}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8733984`*^9", ",", "149.`"}], "}"}]], 
        Annotation[#, {3.8733984*^9, 149.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8740032*^9, 5.099866427824199}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8740032`*^9", ",", "164.`"}], "}"}]], 
        Annotation[#, {3.8740032*^9, 164.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.874608*^9, 5.10594547390058}}]}, 
         RowBox[{"{", 
           RowBox[{"3.874608`*^9", ",", "165.`"}], "}"}]], 
        Annotation[#, {3.874608*^9, 165.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8752128*^9, 5.117993812416755}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8752128`*^9", ",", "167.`"}], "}"}]], 
        Annotation[#, {3.8752128*^9, 167.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8758176*^9, 5.204006687076795}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8758176`*^9", ",", "182.`"}], "}"}]], 
        Annotation[#, {3.8758176*^9, 182.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8665728*^9, 1.0986122886681098`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8665728`*^9", ",", "3.`"}], "}"}]], 
        Annotation[#, {3.8665728*^9, 3.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8671776*^9, 2.0794415416798357`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8671776`*^9", ",", "8.`"}], "}"}]], 
        Annotation[#, {3.8671776*^9, 8.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8677824*^9, 2.1972245773362196`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8677824`*^9", ",", "9.`"}], "}"}]], 
        Annotation[#, {3.8677824*^9, 9.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8683872*^9, 2.6390573296152584`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8683872`*^9", ",", "14.`"}], "}"}]], 
        Annotation[#, {3.8683872*^9, 14.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.868992*^9, 3.044522437723423}}]}, 
         RowBox[{"{", 
           RowBox[{"3.868992`*^9", ",", "21.`"}], "}"}]], 
        Annotation[#, {3.868992*^9, 21.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8695968*^9, 3.6109179126442243`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8695968`*^9", ",", "37.`"}], "}"}]], 
        Annotation[#, {3.8695968*^9, 37.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8702016*^9, 3.784189633918261}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8702016`*^9", ",", "44.`"}], "}"}]], 
        Annotation[#, {3.8702016*^9, 44.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8708064*^9, 3.8918202981106265`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8708064`*^9", ",", "49.`"}], "}"}]], 
        Annotation[#, {3.8708064*^9, 49.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8714112*^9, 3.9318256327243257`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8714112`*^9", ",", "51.`"}], "}"}]], 
        Annotation[#, {3.8714112*^9, 51.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.872016*^9, 3.970291913552122}}]}, 
         RowBox[{"{", 
           RowBox[{"3.872016`*^9", ",", "53.`"}], "}"}]], 
        Annotation[#, {3.872016*^9, 53.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8726208*^9, 4.060443010546419}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8726208`*^9", ",", "58.`"}], "}"}]], 
        Annotation[#, {3.8726208*^9, 58.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8732256*^9, 4.219507705176107}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8732256`*^9", ",", "68.`"}], "}"}]], 
        Annotation[#, {3.8732256*^9, 68.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8738304*^9, 4.31748811353631}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8738304`*^9", ",", "75.`"}], "}"}]], 
        Annotation[#, {3.8738304*^9, 75.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8744352*^9, 4.31748811353631}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8744352`*^9", ",", "75.`"}], "}"}]], 
        Annotation[#, {3.8744352*^9, 75.}, "Tooltip"]& ]}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, GridLines -> 
     Visualization`Utilities`ScaleGridLines[{{Identity, Identity}, {
        Log, Exp}}, {
        DateObject[{2022, 7, 21}, "Day"], 
        DateObject[{2022, 7, 29}, "Day"], 
        DateObject[{2022, 8, 5}, "Day"], 
        DateObject[{2022, 8, 6}, "Day"], 
        DateObject[{2022, 8, 12}, "Day"], 
        DateObject[{2022, 8, 16}, "Day"], 
        DateObject[{2022, 8, 18}, "Day"], 
        DateObject[{2022, 8, 24}, "Day"], 
        DateObject[{2022, 8, 26}, "Day"], 
        DateObject[{2022, 8, 29}, "Day"], 
        DateObject[{2022, 8, 31}, "Day"], 
        DateObject[{2022, 9, 1}, "Day"], 
        DateObject[{2022, 9, 4}, "Day"], 
        DateObject[{2022, 9, 6}, "Day"], 
        DateObject[{2022, 9, 8}, "Day"], 
        DateObject[{2022, 9, 9}, "Day"], 
        DateObject[{2022, 9, 13}, "Day"], 
        DateObject[{2022, 9, 14}, "Day"], 
        DateObject[{2022, 9, 15}, "Day"], 
        DateObject[{2022, 9, 16}, "Day"], 
        DateObject[{2022, 9, 17}, "Day"], 
        DateObject[{2022, 9, 20}, "Day"], 
        DateObject[{2022, 9, 23}, "Day"], 
        DateObject[{2022, 9, 27}, "Day"], 
        DateObject[{2022, 9, 30}, "Day"], 
        DateObject[{2022, 10, 4}, "Day"], 
        DateObject[{2022, 10, 7}, "Day"], 
        DateObject[{2022, 10, 11}, "Day"], 
        DateObject[{2022, 10, 14}, "Day"], 
        DateObject[{2022, 10, 18}, "Day"], 
        DateObject[{2022, 10, 21}, "Day"], 
        DateObject[{2022, 10, 25}, "Day"], 
        DateObject[{2022, 10, 28}, "Day"], 
        DateObject[{2022, 11, 1}, "Day"], 
        DateObject[{2022, 11, 4}, "Day"]}], DisplayFunction -> Identity, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8665728*^9, 0.34014682491257014`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Casos Confirmados\"", HoldForm], TraditionalForm], None}, {
       
        FormBox[
         TagBox["\"Semana Epidemiol\[OAcute]gica\"", HoldForm], 
         TraditionalForm], None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {
       DateObject[{2022, 7, 21}, "Day"], Charting`ScaledTickValues[
        DateObject[{2022, 7, 29}, "Day"][
         SlotSequence[1]], {Log, Exp}]& }, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.8665728*^9, 3.8758176*^9}, {0.34014682491257014`, 
      5.204006687076795}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Pernambuco\"", "\"Recife\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8773444410269947`*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"b897491f-51a7-4c08-9e09-d3e06824007c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prov\[AAcute]veis", "Subsubsection",ExpressionUUID->"a99c18d3-9ca2-4d23-b801-1ce9fbfc019b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalProvaveisPE", " ", "=", " ", "\n", " ", 
   RowBox[{"Smooth", "[", 
    RowBox[{"Accumulate", "[", "\n", 
     RowBox[{"TimeSeries", "[", "\n", "     ", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FromDateString", "[", 
             RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], ",", " ", 
            "#\"Prov\[AAcute]veis\""}], "}"}], " ", "&"}], ",", " ", "\n", 
         "      ", "PEdataMap"}], "]"}], ",", " ", 
       RowBox[{"TemporalRegularity", " ", "\[Rule]", " ", "True"}]}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalProvaveisREC", " ", "=", " ", "\n", 
   RowBox[{"Smooth", "[", 
    RowBox[{"Accumulate", "[", "\n", 
     RowBox[{"TimeSeries", "[", "\n", "     ", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FromDateString", "[", 
             RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], ",", " ", 
            "#\"Prov\[AAcute]veis\""}], "}"}], " ", "&"}], ",", " ", 
         "RECdataMap"}], "]"}], ",", " ", 
       RowBox[{"TemporalRegularity", " ", "\[Rule]", " ", "True"}]}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DateListLogPlot", "[", 
   RowBox[{
    RowBox[{"Tooltip", "[", 
     RowBox[{"{", 
      RowBox[{"totalProvaveisPE", ",", " ", "totalProvaveisREC"}], "}"}], " ",
      "]"}], ",", " ", "\n", " ", 
    RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Pernambuco\>\"", ",", " ", "\"\<Recife\>\""}], "}"}]}], 
    ",", " ", "\n", " ", 
    RowBox[{"PlotMarkers", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
    RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}]}], "]"}], 
  ";"}]}], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"c22c65f0-7dd9-45ef-b78a-f317d4c13df5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Suspeitos", "Subsubsection",ExpressionUUID->"868d8111-8676-45c2-92a7-117d82b933e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalSuspeitosPE", " ", "=", " ", "\n", "  ", 
   RowBox[{"Smooth", "[", 
    RowBox[{"Accumulate", "[", "\n", 
     RowBox[{"TimeSeries", "[", "\n", "     ", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FromDateString", "[", 
             RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], ",", " ", 
            "#\"Suspeitos\""}], "}"}], " ", "&"}], ",", " ", "\n", "      ", 
         "PEdataMap"}], "]"}], ",", 
       RowBox[{"TemporalRegularity", " ", "\[Rule]", " ", "True"}]}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalSuspeitosREC", " ", "=", " ", "\n", 
   RowBox[{"Smooth", "[", 
    RowBox[{"Accumulate", "[", "\n", 
     RowBox[{"TimeSeries", "[", "\n", "     ", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FromDateString", "[", 
             RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], ",", " ", 
            "#\"Suspeitos\""}], "}"}], " ", "&"}], ",", " ", "RECdataMap"}], 
        "]"}], ",", " ", 
       RowBox[{"TemporalRegularity", " ", "\[Rule]", " ", "True"}]}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"DateListLogPlot", "[", 
  RowBox[{
   RowBox[{"Tooltip", "[", 
    RowBox[{"{", 
     RowBox[{"totalSuspeitosPE", ",", " ", "totalSuspeitosREC"}], "}"}], " ", 
    "]"}], ",", " ", "\n", " ", 
   RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Pernambuco\>\"", ",", " ", "\"\<Recife\>\""}], "}"}]}], ",",
    " ", "\n", " ", 
   RowBox[{"PlotMarkers", " ", "\[Rule]", " ", "False"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Semana Epidemiol\[OAcute]gica\>\"", ",", 
      "\"\<Casos Suspeitos\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"GridLines", " ", "\[Rule]", " ", "False"}]}], "]"}], "\n", 
 RowBox[{"\[NonBreakingSpace]"}]}], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"57c2e49d-ac79-4b05-9a00-a1620eb35449"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8665728*^9, 2.0794415416798357`}, {3.8671776*^9, 
         3.2188758248682006`}, {3.8677824*^9, 3.8501476017100584`}, {
         3.8683872*^9, 4.672828834461906}, {3.868992*^9, 4.990432586778736}, {
         3.8695968*^9, 5.342334251964811}, {3.8702016*^9, 
         5.6131281063880705`}, {3.8708064*^9, 5.8971538676367405`}, {
         3.8714112*^9, 6.056784013228625}, {3.872016*^9, 6.137727054086234}, {
         3.8726208*^9, 6.298949246855942}, {3.8732256*^9, 
         6.466144724237619}, {3.8738304*^9, 6.507277712385012}, {3.8744352*^9,
          6.579251212010101}, {3.87504*^9, 6.70073110954781}, {3.8756448*^9, 
         6.7650389767805414`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8665728*^9, 0.}, {3.8671776*^9, 0.6931471805599453}, {
         3.8677824*^9, 1.6094379124341003`}, {3.8683872*^9, 
         1.9459101490553132`}, {3.868992*^9, 2.5649493574615367`}, {
         3.8695968*^9, 3.1780538303479458`}, {3.8702016*^9, 
         3.58351893845611}, {3.8708064*^9, 4.127134385045092}, {3.8714112*^9, 
         4.584967478670572}, {3.872016*^9, 4.852030263919617}, {3.8726208*^9, 
         5.14166355650266}, {3.8732256*^9, 5.3612921657094255`}, {
         3.8738304*^9, 5.375278407684165}, {3.8744352*^9, 
         5.44673737166631}}]}}, {
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8665728*^9, 2.0794415416798357`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8665728`*^9", ",", "8.`"}], "}"}]], 
        Annotation[#, {3.8665728*^9, 8.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8671776*^9, 3.2188758248682006`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8671776`*^9", ",", "25.`"}], "}"}]], 
        Annotation[#, {3.8671776*^9, 25.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8677824*^9, 3.8501476017100584`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8677824`*^9", ",", "47.`"}], "}"}]], 
        Annotation[#, {3.8677824*^9, 47.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8683872*^9, 4.672828834461906}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8683872`*^9", ",", "107.`"}], "}"}]], 
        Annotation[#, {3.8683872*^9, 107.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.868992*^9, 4.990432586778736}}]}, 
         RowBox[{"{", 
           RowBox[{"3.868992`*^9", ",", "147.`"}], "}"}]], 
        Annotation[#, {3.868992*^9, 147.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8695968*^9, 5.342334251964811}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8695968`*^9", ",", "209.`"}], "}"}]], 
        Annotation[#, {3.8695968*^9, 209.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8702016*^9, 5.6131281063880705`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8702016`*^9", ",", "274.`"}], "}"}]], 
        Annotation[#, {3.8702016*^9, 274.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8708064*^9, 5.8971538676367405`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8708064`*^9", ",", "364.`"}], "}"}]], 
        Annotation[#, {3.8708064*^9, 364.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8714112*^9, 6.056784013228625}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8714112`*^9", ",", "427.`"}], "}"}]], 
        Annotation[#, {3.8714112*^9, 427.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.872016*^9, 6.137727054086234}}]}, 
         RowBox[{"{", 
           RowBox[{"3.872016`*^9", ",", "463.`"}], "}"}]], 
        Annotation[#, {3.872016*^9, 463.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8726208*^9, 6.298949246855942}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8726208`*^9", ",", "544.`"}], "}"}]], 
        Annotation[#, {3.8726208*^9, 544.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8732256*^9, 6.466144724237619}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8732256`*^9", ",", "643.`"}], "}"}]], 
        Annotation[#, {3.8732256*^9, 643.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8738304*^9, 6.507277712385012}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8738304`*^9", ",", "670.`"}], "}"}]], 
        Annotation[#, {3.8738304*^9, 670.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8744352*^9, 6.579251212010101}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8744352`*^9", ",", "720.`"}], "}"}]], 
        Annotation[#, {3.8744352*^9, 720.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.87504*^9, 6.70073110954781}}]}, 
         RowBox[{"{", 
           RowBox[{"3.87504`*^9", ",", "813.`"}], "}"}]], 
        Annotation[#, {3.87504*^9, 813.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8756448*^9, 6.7650389767805414`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8756448`*^9", ",", "867.`"}], "}"}]], 
        Annotation[#, {3.8756448*^9, 867.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8665728*^9, 0.}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8665728`*^9", ",", "1.`"}], "}"}]], 
        Annotation[#, {3.8665728*^9, 1.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8671776*^9, 0.6931471805599453}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8671776`*^9", ",", "2.`"}], "}"}]], 
        Annotation[#, {3.8671776*^9, 2.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8677824*^9, 1.6094379124341003`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8677824`*^9", ",", "5.`"}], "}"}]], 
        Annotation[#, {3.8677824*^9, 5.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8683872*^9, 1.9459101490553132`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8683872`*^9", ",", "7.`"}], "}"}]], 
        Annotation[#, {3.8683872*^9, 7.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.868992*^9, 2.5649493574615367`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.868992`*^9", ",", "13.`"}], "}"}]], 
        Annotation[#, {3.868992*^9, 13.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8695968*^9, 3.1780538303479458`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8695968`*^9", ",", "24.`"}], "}"}]], 
        Annotation[#, {3.8695968*^9, 24.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8702016*^9, 3.58351893845611}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8702016`*^9", ",", "36.`"}], "}"}]], 
        Annotation[#, {3.8702016*^9, 36.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8708064*^9, 4.127134385045092}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8708064`*^9", ",", "62.`"}], "}"}]], 
        Annotation[#, {3.8708064*^9, 62.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8714112*^9, 4.584967478670572}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8714112`*^9", ",", "98.`"}], "}"}]], 
        Annotation[#, {3.8714112*^9, 98.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.872016*^9, 4.852030263919617}}]}, 
         RowBox[{"{", 
           RowBox[{"3.872016`*^9", ",", "128.`"}], "}"}]], 
        Annotation[#, {3.872016*^9, 128.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8726208*^9, 5.14166355650266}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8726208`*^9", ",", "171.`"}], "}"}]], 
        Annotation[#, {3.8726208*^9, 171.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8732256*^9, 5.3612921657094255`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8732256`*^9", ",", "213.`"}], "}"}]], 
        Annotation[#, {3.8732256*^9, 213.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8738304*^9, 5.375278407684165}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8738304`*^9", ",", "216.`"}], "}"}]], 
        Annotation[#, {3.8738304*^9, 216.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8744352*^9, 5.44673737166631}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8744352`*^9", ",", "232.`"}], "}"}]], 
        Annotation[#, {3.8744352*^9, 232.}, "Tooltip"]& ]}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     GridLines -> {None, None}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8665728*^9, -0.5294026917313317}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Casos Suspeitos\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"Semana Epidemiol\[OAcute]gica\"", HoldForm], 
         TraditionalForm], None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.8665728*^9, 3.8756448*^9}, {-0.5294026917313317, 
      6.7650389767805414`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Pernambuco\"", "\"Recife\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8773444421600027`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"eba9fa4f-8c9d-461c-b15e-f0a6a07f7208"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notificados", "Subsubsection",
 CellChangeTimes->{{3.8772087219275312`*^9, 
  3.877208722084175*^9}},ExpressionUUID->"4ccda2fe-aaf0-437c-ab86-\
fd46ff76219f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalNotificadosPE", " ", "=", " ", "\n", 
   RowBox[{"Smooth", "[", 
    RowBox[{"Accumulate", "[", "\n", 
     RowBox[{"TimeSeries", "[", "\n", "     ", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FromDateString", "[", 
             RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], ",", " ", 
            "#\"Notificados\""}], "}"}], " ", "&"}], ",", " ", "\n", "      ",
          "PEdataMap"}], "]"}], ",", 
       RowBox[{"TemporalRegularity", " ", "\[Rule]", " ", "True"}]}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"totalNotificadosREC", " ", "=", " ", "\n", 
   RowBox[{"Smooth", "[", 
    RowBox[{"Accumulate", "[", 
     RowBox[{"TimeSeries", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FromDateString", "[", 
             RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], ",", " ", 
            "#\"Notificados\""}], "}"}], " ", "&"}], ",", " ", "RECdataMap"}],
         "]"}], ",", 
       RowBox[{"TemporalRegularity", " ", "\[Rule]", " ", "True"}]}], "]"}], 
     "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DateListLogPlot", "[", 
   RowBox[{
    RowBox[{"Tooltip", "[", 
     RowBox[{"{", 
      RowBox[{"totalNotificadosPE", ",", " ", "totalNotificadosREC"}], "}"}], 
     " ", "]"}], ",", "  ", 
    RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Pernambuco\>\"", ",", " ", "\"\<Recife\>\""}], "}"}]}], 
    ",", "  ", 
    RowBox[{"PlotMarkers", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
    RowBox[{"GridLines", " ", "\[Rule]", " ", "Automatic"}]}], "]"}], 
  "\n"}], "\n", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "totalJoinedSmoothed", " ", ",", "totalSuspeitosPE", ",", " ", 
      "totalProvaveisPE", ",", " ", "totalNotificadosPE"}], "}"}], "\[Rule]", 
    
    RowBox[{"{", 
     RowBox[{"#2", "&"}], "}"}]}], ",", 
   RowBox[{"LabelingFunction", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"Last", "@", "#1"}], ",", "Above"}], "]"}], "&"}], ")"}]}], 
   ",", " ", "\n", " ", 
   RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", " ", 
   RowBox[{"PlotLegends", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Casos Confirmados\>\"", ",", " ", "\"\<Casos Suspeitos\>\"", ",", 
      " ", "\"\<Casos Prov\[AAcute]veis\>\"", ",", " ", 
      "\"\<Notifica\[CCedilla]\[OTilde]es\>\""}], " ", "}"}]}], ",", " ", 
   "\n", " ", 
   RowBox[{"PlotMarkers", " ", "\[Rule]", " ", "Automatic"}], ",", " ", 
   RowBox[{"GridLines", " ", "\[Rule]", " ", 
    RowBox[{"Keys", "[", "joined", "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Semana Epidemiol\[OAcute]gica\>\"", ",", "\"\<Qtde. Casos\>\""}], 
     "}"}]}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Pernambuco\>\""}]}], "]"}]}], "Input",\

 CellLabel->"In[37]:=",ExpressionUUID->"c8d1f69f-017c-45dd-9487-116b1a84cec0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8665728*^9, 2.772588722239781}, {3.8671776*^9, 
         3.8501476017100584`}, {3.8677824*^9, 4.48863636973214}, {
         3.8683872*^9, 5.278114659230517}, {3.868992*^9, 5.631211781821365}, {
         3.8695968*^9, 6.021023349349527}, {3.8702016*^9, 
         6.289715570908998}, {3.8708064*^9, 6.565264970035361}, {3.8714112*^9,
          6.721425700790643}, {3.872016*^9, 6.828712071641684}, {3.8726208*^9,
          6.970730078143525}, {3.8732256*^9, 7.1204443723924875`}, {
         3.8738304*^9, 7.229113877793302}, {3.8744352*^9, 
         7.304515946460155}, {3.87504*^9, 7.382124365737512}, {3.8756448*^9, 
         7.43307534889858}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8665728*^9, 1.6094379124341003`}, {3.8671776*^9, 
         2.3978952727983707`}, {3.8677824*^9, 2.833213344056216}, {
         3.8683872*^9, 3.2188758248682006`}, {3.868992*^9, 
         3.713572066704308}, {3.8695968*^9, 4.2626798770413155`}, {
         3.8702016*^9, 4.543294782270004}, {3.8708064*^9, 
         4.890349128221754}, {3.8714112*^9, 5.278114659230517}, {3.872016*^9, 
         5.517452896464707}, {3.8726208*^9, 5.730099782973574}, {3.8732256*^9,
          5.932245187448011}, {3.8738304*^9, 6.049733455231958}, {
         3.8744352*^9, 6.150602768446279}}]}}, {{
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.272]], {{{3.8665728*^9, 2.772588722239781}}, {{
         3.8671776*^9, 3.8501476017100584`}}, {{3.8677824*^9, 
         4.48863636973214}}, {{3.8683872*^9, 5.278114659230517}}, {{
         3.868992*^9, 5.631211781821365}}, {{3.8695968*^9, 
         6.021023349349527}}, {{3.8702016*^9, 6.289715570908998}}, {{
         3.8708064*^9, 6.565264970035361}}, {{3.8714112*^9, 
         6.721425700790643}}, {{3.872016*^9, 6.828712071641684}}, {{
         3.8726208*^9, 6.970730078143525}}, {{3.8732256*^9, 
         7.1204443723924875`}}, {{3.8738304*^9, 7.229113877793302}}, {{
         3.8744352*^9, 7.304515946460155}}, {{3.87504*^9, 
         7.382124365737512}}, {{3.8756448*^9, 7.43307534889858}}}]}, {
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.012833333333333334`], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.72]], {{{3.8665728*^9, 1.6094379124341003`}}, {{
         3.8671776*^9, 2.3978952727983707`}}, {{3.8677824*^9, 
         2.833213344056216}}, {{3.8683872*^9, 3.2188758248682006`}}, {{
         3.868992*^9, 3.713572066704308}}, {{3.8695968*^9, 
         4.2626798770413155`}}, {{3.8702016*^9, 4.543294782270004}}, {{
         3.8708064*^9, 4.890349128221754}}, {{3.8714112*^9, 
         5.278114659230517}}, {{3.872016*^9, 5.517452896464707}}, {{
         3.8726208*^9, 5.730099782973574}}, {{3.8732256*^9, 5.932245187448011}
         }, {{3.8738304*^9, 6.049733455231958}}, {{3.8744352*^9, 
         6.150602768446279}}}]}}, {
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8665728*^9, 2.772588722239781}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8665728`*^9", ",", "16.`"}], "}"}]], 
        Annotation[#, {3.8665728*^9, 16.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8671776*^9, 3.8501476017100584`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8671776`*^9", ",", "47.`"}], "}"}]], 
        Annotation[#, {3.8671776*^9, 47.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8677824*^9, 4.48863636973214}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8677824`*^9", ",", "89.`"}], "}"}]], 
        Annotation[#, {3.8677824*^9, 89.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8683872*^9, 5.278114659230517}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8683872`*^9", ",", "196.`"}], "}"}]], 
        Annotation[#, {3.8683872*^9, 196.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.868992*^9, 5.631211781821365}}]}, 
         RowBox[{"{", 
           RowBox[{"3.868992`*^9", ",", "279.`"}], "}"}]], 
        Annotation[#, {3.868992*^9, 279.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8695968*^9, 6.021023349349527}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8695968`*^9", ",", "412.`"}], "}"}]], 
        Annotation[#, {3.8695968*^9, 412.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8702016*^9, 6.289715570908998}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8702016`*^9", ",", "539.`"}], "}"}]], 
        Annotation[#, {3.8702016*^9, 539.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8708064*^9, 6.565264970035361}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8708064`*^9", ",", "710.`"}], "}"}]], 
        Annotation[#, {3.8708064*^9, 710.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8714112*^9, 6.721425700790643}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8714112`*^9", ",", "830.`"}], "}"}]], 
        Annotation[#, {3.8714112*^9, 830.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.872016*^9, 6.828712071641684}}]}, 
         RowBox[{"{", 
           RowBox[{"3.872016`*^9", ",", "924.`"}], "}"}]], 
        Annotation[#, {3.872016*^9, 924.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8726208*^9, 6.970730078143525}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8726208`*^9", ",", "1065.`"}], "}"}]], 
        Annotation[#, {3.8726208*^9, 1065.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8732256*^9, 7.1204443723924875`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8732256`*^9", ",", "1237.`"}], "}"}]], 
        Annotation[#, {3.8732256*^9, 1237.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8738304*^9, 7.229113877793302}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8738304`*^9", ",", "1379.`"}], "}"}]], 
        Annotation[#, {3.8738304*^9, 1379.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8744352*^9, 7.304515946460155}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8744352`*^9", ",", "1487.`"}], "}"}]], 
        Annotation[#, {3.8744352*^9, 1487.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.87504*^9, 7.382124365737512}}]}, 
         RowBox[{"{", 
           RowBox[{"3.87504`*^9", ",", "1607.`"}], "}"}]], 
        Annotation[#, {3.87504*^9, 1607.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8756448*^9, 7.43307534889858}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8756448`*^9", ",", "1691.`"}], "}"}]], 
        Annotation[#, {3.8756448*^9, 1691.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8665728*^9, 1.6094379124341003`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8665728`*^9", ",", "5.`"}], "}"}]], 
        Annotation[#, {3.8665728*^9, 5.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8671776*^9, 2.3978952727983707`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8671776`*^9", ",", "11.`"}], "}"}]], 
        Annotation[#, {3.8671776*^9, 11.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8677824*^9, 2.833213344056216}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8677824`*^9", ",", "17.`"}], "}"}]], 
        Annotation[#, {3.8677824*^9, 17.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8683872*^9, 3.2188758248682006`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8683872`*^9", ",", "25.`"}], "}"}]], 
        Annotation[#, {3.8683872*^9, 25.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.868992*^9, 3.713572066704308}}]}, 
         RowBox[{"{", 
           RowBox[{"3.868992`*^9", ",", "41.`"}], "}"}]], 
        Annotation[#, {3.868992*^9, 41.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8695968*^9, 4.2626798770413155`}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8695968`*^9", ",", "71.`"}], "}"}]], 
        Annotation[#, {3.8695968*^9, 71.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8702016*^9, 4.543294782270004}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8702016`*^9", ",", "94.`"}], "}"}]], 
        Annotation[#, {3.8702016*^9, 94.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8708064*^9, 4.890349128221754}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8708064`*^9", ",", "133.`"}], "}"}]], 
        Annotation[#, {3.8708064*^9, 133.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8714112*^9, 5.278114659230517}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8714112`*^9", ",", "196.`"}], "}"}]], 
        Annotation[#, {3.8714112*^9, 196.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.872016*^9, 5.517452896464707}}]}, 
         RowBox[{"{", 
           RowBox[{"3.872016`*^9", ",", "249.`"}], "}"}]], 
        Annotation[#, {3.872016*^9, 249.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8726208*^9, 5.730099782973574}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8726208`*^9", ",", "308.`"}], "}"}]], 
        Annotation[#, {3.8726208*^9, 308.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8732256*^9, 5.932245187448011}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8732256`*^9", ",", "377.`"}], "}"}]], 
        Annotation[#, {3.8732256*^9, 377.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8738304*^9, 6.049733455231958}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8738304`*^9", ",", "424.`"}], "}"}]], 
        Annotation[#, {3.8738304*^9, 424.}, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Opacity[0.], 
          PointBox[{{3.8744352*^9, 6.150602768446279}}]}, 
         RowBox[{"{", 
           RowBox[{"3.8744352`*^9", ",", "469.`"}], "}"}]], 
        Annotation[#, {3.8744352*^9, 469.}, "Tooltip"]& ]}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.5, 0.4]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , 
       Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8665728*^9, 1.1537052337143618`}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.5, 0.4]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , 
       Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.8665728*^9, 3.8756448*^9}, {1.1537052337143618`, 
      7.43307534889858}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Pernambuco\"", "\"Recife\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.272}, {20, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.72}, {20, 6.72}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.72}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.051309523809523805`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "6.72`", "]"}]}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.877344442631824*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"79385bd1-9c5e-4a0a-b1b3-bb541667d450"],

Cell[BoxData[
 TemplateBox[{
  "Keys", "invrl", 
   "\"The argument \\!\\(\\*RowBox[{\\\"joined\\\"}]\\) is not a valid \
Association or a list of rules.\"", 2, 40, 2, 25422775249527722208, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.87734444298365*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"e9dd4f98-7f3d-48ff-a028-76a5c6cc96a0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8673504*^9, 2.}, {3.8679552*^9, 6.}, {3.86856*^9, 11.}, {
         3.8691648*^9, 16.}, {3.8697696*^9, 20.}, {3.8703744*^9, 29.}, {
         3.8709792*^9, 48.}, {3.871584*^9, 74.}, {3.8721888*^9, 108.}, {
         3.8727936*^9, 127.}, {3.8733984*^9, 149.}, {3.8740032*^9, 164.}, {
         3.874608*^9, 165.}, {3.8752128*^9, 167.}, {3.8758176*^9, 182.}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8665728*^9, 8.}, {3.8671776*^9, 25.}, {3.8677824*^9, 
         47.}, {3.8683872*^9, 107.}, {3.868992*^9, 147.}, {3.8695968*^9, 
         209.}, {3.8702016*^9, 274.}, {3.8708064*^9, 364.}, {3.8714112*^9, 
         427.}, {3.872016*^9, 463.}, {3.8726208*^9, 544.}, {3.8732256*^9, 
         643.}, {3.8738304*^9, 670.}, {3.8744352*^9, 720.}, {3.87504*^9, 
         813.}, {3.8756448*^9, 867.}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8665728*^9, 2.}, {3.8671776*^9, 6.}, {3.8677824*^9, 
         12.}, {3.8683872*^9, 23.}, {3.868992*^9, 30.}, {3.8695968*^9, 38.}, {
         3.8702016*^9, 43.}, {3.8708064*^9, 49.}, {3.8714112*^9, 52.}, {
         3.872016*^9, 53.}, {3.8726208*^9, 60.}, {3.8732256*^9, 65.}, {
         3.8738304*^9, 63.}, {3.8744352*^9, 61.}, {3.87504*^9, 63.}, {
         3.8756448*^9, 67.}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.8665728*^9, 16.}, {3.8671776*^9, 47.}, {3.8677824*^9, 
         89.}, {3.8683872*^9, 196.}, {3.868992*^9, 279.}, {3.8695968*^9, 
         412.}, {3.8702016*^9, 539.}, {3.8708064*^9, 710.}, {3.8714112*^9, 
         830.}, {3.872016*^9, 924.}, {3.8726208*^9, 1065.}, {3.8732256*^9, 
         1237.}, {3.8738304*^9, 1379.}, {3.8744352*^9, 1487.}, {3.87504*^9, 
         1607.}, {3.8756448*^9, 1691.}}]}}, {{
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.272]], {{{3.8673504*^9, 2.}}, {{3.8679552*^9, 6.}}, {{
         3.86856*^9, 11.}}, {{3.8691648*^9, 16.}}, {{3.8697696*^9, 20.}}, {{
         3.8703744*^9, 29.}}, {{3.8709792*^9, 48.}}, {{3.871584*^9, 74.}}, {{
         3.8721888*^9, 108.}}, {{3.8727936*^9, 127.}}, {{3.8733984*^9, 
         149.}}, {{3.8740032*^9, 164.}}, {{3.874608*^9, 165.}}, {{
         3.8752128*^9, 167.}}, {{3.8758176*^9, 182.}}}]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.880722, 0.611041, 0.142051], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[6.72]], {{{3.8665728*^9, 8.}}, {{3.8671776*^9, 25.}}, {{
         3.8677824*^9, 47.}}, {{3.8683872*^9, 107.}}, {{3.868992*^9, 
         147.}}, {{3.8695968*^9, 209.}}, {{3.8702016*^9, 274.}}, {{
         3.8708064*^9, 364.}}, {{3.8714112*^9, 427.}}, {{3.872016*^9, 
         463.}}, {{3.8726208*^9, 544.}}, {{3.8732256*^9, 643.}}, {{
         3.8738304*^9, 670.}}, {{3.8744352*^9, 720.}}, {{3.87504*^9, 
         813.}}, {{3.8756448*^9, 867.}}}]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.560181, 0.691569, 0.194885], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[8.16]], {{{3.8665728*^9, 2.}}, {{3.8671776*^9, 6.}}, {{
         3.8677824*^9, 12.}}, {{3.8683872*^9, 23.}}, {{3.868992*^9, 30.}}, {{
         3.8695968*^9, 38.}}, {{3.8702016*^9, 43.}}, {{3.8708064*^9, 49.}}, {{
         3.8714112*^9, 52.}}, {{3.872016*^9, 53.}}, {{3.8726208*^9, 60.}}, {{
         3.8732256*^9, 65.}}, {{3.8738304*^9, 63.}}, {{3.8744352*^9, 61.}}, {{
         3.87504*^9, 63.}}, {{3.8756448*^9, 67.}}}]}, {
        Directive[
         PointSize[0.011000000000000001`], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               PolygonBox[
                
                NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                  1, 1 - 3^Rational[1, 2]}}, {{0, 
                  1}, {-1, -0.7320508075688772}, {
                  1, -0.7320508075688772}}]]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[0.011000000000000001`], 
                 RGBColor[0.922526, 0.385626, 0.209179], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[7.6]], {{{3.8665728*^9, 16.}}, {{3.8671776*^9, 47.}}, {{
         3.8677824*^9, 89.}}, {{3.8683872*^9, 196.}}, {{3.868992*^9, 
         279.}}, {{3.8695968*^9, 412.}}, {{3.8702016*^9, 539.}}, {{
         3.8708064*^9, 710.}}, {{3.8714112*^9, 830.}}, {{3.872016*^9, 
         924.}}, {{3.8726208*^9, 1065.}}, {{3.8732256*^9, 1237.}}, {{
         3.8738304*^9, 1379.}}, {{3.8744352*^9, 1487.}}, {{3.87504*^9, 
         1607.}}, {{3.8756448*^9, 1691.}}}]}}}, {{}, {{}, {{{
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{6.999999999999998, 13.000000000000002`}, {3.8673504*^9,
                 10.20447884815871}], 
               
               Offset[{7.000000000000002, 1.7763568394002505`*^-15}, {
                3.8673504*^9, 10.20447884815871}], 
               
               Offset[{-6.999999999999998, -1.7763568394002505`*^-15}, {
                3.8673504*^9, 10.20447884815871}], 
               
               Offset[{-7.000000000000002, 12.999999999999998`}, {
                3.8673504*^9, 10.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["2.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8673504*^9, 10.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{6.999999999999998, 13.000000000000002`}, {3.8679552*^9,
                 14.20447884815871}], 
               
               Offset[{7.000000000000002, 1.7763568394002505`*^-15}, {
                3.8679552*^9, 14.20447884815871}], 
               
               Offset[{-6.999999999999998, -1.7763568394002505`*^-15}, {
                3.8679552*^9, 14.20447884815871}], 
               
               Offset[{-7.000000000000002, 12.999999999999998`}, {
                3.8679552*^9, 14.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["6.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8679552*^9, 14.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.86856*^9, 
                19.204478848158708`}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.86856*^9, 19.204478848158708`}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.86856*^9, 19.204478848158708`}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {3.86856*^9, 
                19.204478848158708`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["11.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.86856*^9, 19.204478848158708`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8691648*^9,
                 24.204478848158708`}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8691648*^9, 24.204478848158708`}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8691648*^9, 24.204478848158708`}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8691648*^9, 24.204478848158708`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["16.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8691648*^9, 24.204478848158708`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8697696*^9,
                 28.204478848158708`}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8697696*^9, 28.204478848158708`}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8697696*^9, 28.204478848158708`}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8697696*^9, 28.204478848158708`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["20.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8697696*^9, 28.204478848158708`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8703744*^9,
                 37.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8703744*^9, 37.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8703744*^9, 37.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8703744*^9, 37.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["29.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8703744*^9, 37.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8709792*^9,
                 56.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8709792*^9, 56.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8709792*^9, 56.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8709792*^9, 56.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["48.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8709792*^9, 56.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.871584*^9, 
                82.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.871584*^9, 82.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.871584*^9, 82.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {3.871584*^9,
                 82.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["74.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.871584*^9, 82.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8721888*^9, 116.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8721888*^9, 116.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8721888*^9, 116.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8721888*^9, 116.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["108.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8721888*^9, 116.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8727936*^9, 135.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8727936*^9, 135.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8727936*^9, 135.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8727936*^9, 135.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["127.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8727936*^9, 135.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8733984*^9, 157.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8733984*^9, 157.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8733984*^9, 157.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8733984*^9, 157.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["149.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8733984*^9, 157.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8740032*^9, 172.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8740032*^9, 172.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8740032*^9, 172.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8740032*^9, 172.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["164.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8740032*^9, 172.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.874608*^9, 173.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.874608*^9, 173.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.874608*^9, 173.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.874608*^9, 173.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["165.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.874608*^9, 173.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8752128*^9, 175.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8752128*^9, 175.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8752128*^9, 175.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8752128*^9, 175.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["167.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8752128*^9, 175.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8758176*^9, 190.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8758176*^9, 190.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8758176*^9, 190.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8758176*^9, 190.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["182.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8758176*^9, 190.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{6.999999999999998, 13.000000000000002`}, {3.8665728*^9,
                 16.204478848158708`}], 
               
               Offset[{7.000000000000002, 1.7763568394002505`*^-15}, {
                3.8665728*^9, 16.204478848158708`}], 
               
               Offset[{-6.999999999999998, -1.7763568394002505`*^-15}, {
                3.8665728*^9, 16.204478848158708`}], 
               
               Offset[{-7.000000000000002, 12.999999999999998`}, {
                3.8665728*^9, 16.204478848158708`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["8.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8665728*^9, 16.204478848158708`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8671776*^9,
                 33.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8671776*^9, 33.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8671776*^9, 33.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8671776*^9, 33.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["25.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8671776*^9, 33.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8677824*^9,
                 55.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8677824*^9, 55.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8677824*^9, 55.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8677824*^9, 55.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["47.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8677824*^9, 55.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8683872*^9, 115.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8683872*^9, 115.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8683872*^9, 115.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8683872*^9, 115.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["107.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8683872*^9, 115.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.868992*^9, 155.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.868992*^9, 155.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.868992*^9, 155.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.868992*^9, 155.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["147.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.868992*^9, 155.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8695968*^9, 217.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8695968*^9, 217.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8695968*^9, 217.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8695968*^9, 217.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["209.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8695968*^9, 217.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8702016*^9, 282.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8702016*^9, 282.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8702016*^9, 282.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8702016*^9, 282.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["274.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8702016*^9, 282.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8708064*^9, 372.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8708064*^9, 372.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8708064*^9, 372.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8708064*^9, 372.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["364.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8708064*^9, 372.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8714112*^9, 435.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8714112*^9, 435.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8714112*^9, 435.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8714112*^9, 435.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["427.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8714112*^9, 435.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.872016*^9, 471.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.872016*^9, 471.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.872016*^9, 471.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.872016*^9, 471.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["463.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.872016*^9, 471.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8726208*^9, 552.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8726208*^9, 552.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8726208*^9, 552.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8726208*^9, 552.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["544.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8726208*^9, 552.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8732256*^9, 651.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8732256*^9, 651.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8732256*^9, 651.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8732256*^9, 651.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["643.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8732256*^9, 651.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8738304*^9, 678.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8738304*^9, 678.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8738304*^9, 678.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8738304*^9, 678.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["670.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8738304*^9, 678.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8744352*^9, 728.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8744352*^9, 728.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8744352*^9, 728.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8744352*^9, 728.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["720.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8744352*^9, 728.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {3.87504*^9,
                 821.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.87504*^9, 821.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.87504*^9, 821.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.87504*^9, 821.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["813.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.87504*^9, 821.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8756448*^9, 875.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8756448*^9, 875.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8756448*^9, 875.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8756448*^9, 875.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["867.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8756448*^9, 875.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{6.999999999999998, 13.000000000000002`}, {3.8665728*^9,
                 10.20447884815871}], 
               
               Offset[{7.000000000000002, 1.7763568394002505`*^-15}, {
                3.8665728*^9, 10.20447884815871}], 
               
               Offset[{-6.999999999999998, -1.7763568394002505`*^-15}, {
                3.8665728*^9, 10.20447884815871}], 
               
               Offset[{-7.000000000000002, 12.999999999999998`}, {
                3.8665728*^9, 10.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["2.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8665728*^9, 10.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{6.999999999999998, 13.000000000000002`}, {3.8671776*^9,
                 14.20447884815871}], 
               
               Offset[{7.000000000000002, 1.7763568394002505`*^-15}, {
                3.8671776*^9, 14.20447884815871}], 
               
               Offset[{-6.999999999999998, -1.7763568394002505`*^-15}, {
                3.8671776*^9, 14.20447884815871}], 
               
               Offset[{-7.000000000000002, 12.999999999999998`}, {
                3.8671776*^9, 14.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["6.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8671776*^9, 14.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8677824*^9,
                 20.204478848158708`}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8677824*^9, 20.204478848158708`}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8677824*^9, 20.204478848158708`}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8677824*^9, 20.204478848158708`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["12.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8677824*^9, 20.204478848158708`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8683872*^9,
                 31.204478848158708`}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8683872*^9, 31.204478848158708`}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8683872*^9, 31.204478848158708`}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8683872*^9, 31.204478848158708`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["23.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8683872*^9, 31.204478848158708`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.868992*^9, 
                38.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.868992*^9, 38.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.868992*^9, 38.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {3.868992*^9,
                 38.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["30.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.868992*^9, 38.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8695968*^9,
                 46.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8695968*^9, 46.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8695968*^9, 46.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8695968*^9, 46.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["38.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8695968*^9, 46.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8702016*^9,
                 51.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8702016*^9, 51.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8702016*^9, 51.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8702016*^9, 51.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["43.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8702016*^9, 51.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8708064*^9,
                 57.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8708064*^9, 57.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8708064*^9, 57.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8708064*^9, 57.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["49.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8708064*^9, 57.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8714112*^9,
                 60.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8714112*^9, 60.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8714112*^9, 60.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8714112*^9, 60.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["52.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8714112*^9, 60.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.872016*^9, 
                61.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.872016*^9, 61.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.872016*^9, 61.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {3.872016*^9,
                 61.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["53.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.872016*^9, 61.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8726208*^9,
                 68.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8726208*^9, 68.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8726208*^9, 68.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8726208*^9, 68.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["60.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8726208*^9, 68.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8732256*^9,
                 73.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8732256*^9, 73.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8732256*^9, 73.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8732256*^9, 73.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["65.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8732256*^9, 73.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8738304*^9,
                 71.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8738304*^9, 71.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8738304*^9, 71.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8738304*^9, 71.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["63.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8738304*^9, 71.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8744352*^9,
                 69.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8744352*^9, 69.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8744352*^9, 69.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8744352*^9, 69.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["61.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8744352*^9, 69.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.87504*^9, 
                71.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.87504*^9, 71.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.87504*^9, 71.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {3.87504*^9, 
                71.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["63.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.87504*^9, 71.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8756448*^9,
                 75.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8756448*^9, 75.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8756448*^9, 75.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8756448*^9, 75.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["67.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8756448*^9, 75.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8665728*^9,
                 24.204478848158708`}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8665728*^9, 24.204478848158708`}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8665728*^9, 24.204478848158708`}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8665728*^9, 24.204478848158708`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["16.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8665728*^9, 24.204478848158708`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8671776*^9,
                 55.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8671776*^9, 55.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8671776*^9, 55.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8671776*^9, 55.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["47.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8671776*^9, 55.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{9.499999999999998, 13.000000000000002`}, {3.8677824*^9,
                 97.20447884815871}], 
               
               Offset[{9.500000000000002, 1.7763568394002505`*^-15}, {
                3.8677824*^9, 97.20447884815871}], 
               
               Offset[{-9.499999999999998, -1.7763568394002505`*^-15}, {
                3.8677824*^9, 97.20447884815871}], 
               
               Offset[{-9.500000000000002, 12.999999999999998`}, {
                3.8677824*^9, 97.20447884815871}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["89.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8677824*^9, 97.20447884815871}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8683872*^9, 204.20447884815871`}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8683872*^9, 204.20447884815871`}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8683872*^9, 204.20447884815871`}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8683872*^9, 204.20447884815871`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["196.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8683872*^9, 204.20447884815871`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.868992*^9, 287.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.868992*^9, 287.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.868992*^9, 287.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.868992*^9, 287.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["279.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.868992*^9, 287.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8695968*^9, 420.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8695968*^9, 420.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8695968*^9, 420.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8695968*^9, 420.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["412.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8695968*^9, 420.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8702016*^9, 547.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8702016*^9, 547.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8702016*^9, 547.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8702016*^9, 547.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["539.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8702016*^9, 547.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8708064*^9, 718.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8708064*^9, 718.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8708064*^9, 718.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8708064*^9, 718.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["710.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8708064*^9, 718.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.8714112*^9, 838.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.8714112*^9, 838.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.8714112*^9, 838.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.8714112*^9, 838.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["830.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8714112*^9, 838.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{12.499999999999998`, 13.000000000000004`}, {
                3.872016*^9, 932.2044788481587}], 
               
               Offset[{12.500000000000002`, 2.6645352591003757`*^-15}, {
                3.872016*^9, 932.2044788481587}], 
               
               Offset[{-12.499999999999998`, -2.6645352591003757`*^-15}, {
                3.872016*^9, 932.2044788481587}], 
               
               Offset[{-12.500000000000002`, 12.999999999999996`}, {
                3.872016*^9, 932.2044788481587}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["924.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.872016*^9, 932.2044788481587}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{15.499999999999998`, 13.000000000000004`}, {
                3.8726208*^9, 1073.2044788481587`}], 
               
               Offset[{15.500000000000002`, 3.552713678800501*^-15}, {
                3.8726208*^9, 1073.2044788481587`}], 
               
               Offset[{-15.499999999999998`, -3.552713678800501*^-15}, {
                3.8726208*^9, 1073.2044788481587`}], 
               
               Offset[{-15.500000000000002`, 12.999999999999996`}, {
                3.8726208*^9, 1073.2044788481587`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["1065.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8726208*^9, 1073.2044788481587`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{15.499999999999998`, 13.000000000000004`}, {
                3.8732256*^9, 1245.2044788481587`}], 
               
               Offset[{15.500000000000002`, 3.552713678800501*^-15}, {
                3.8732256*^9, 1245.2044788481587`}], 
               
               Offset[{-15.499999999999998`, -3.552713678800501*^-15}, {
                3.8732256*^9, 1245.2044788481587`}], 
               
               Offset[{-15.500000000000002`, 12.999999999999996`}, {
                3.8732256*^9, 1245.2044788481587`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["1237.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8732256*^9, 1245.2044788481587`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{15.499999999999998`, 13.000000000000004`}, {
                3.8738304*^9, 1387.2044788481587`}], 
               
               Offset[{15.500000000000002`, 3.552713678800501*^-15}, {
                3.8738304*^9, 1387.2044788481587`}], 
               
               Offset[{-15.499999999999998`, -3.552713678800501*^-15}, {
                3.8738304*^9, 1387.2044788481587`}], 
               
               Offset[{-15.500000000000002`, 12.999999999999996`}, {
                3.8738304*^9, 1387.2044788481587`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["1379.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8738304*^9, 1387.2044788481587`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{15.499999999999998`, 13.000000000000004`}, {
                3.8744352*^9, 1495.2044788481587`}], 
               
               Offset[{15.500000000000002`, 3.552713678800501*^-15}, {
                3.8744352*^9, 1495.2044788481587`}], 
               
               Offset[{-15.499999999999998`, -3.552713678800501*^-15}, {
                3.8744352*^9, 1495.2044788481587`}], 
               
               Offset[{-15.500000000000002`, 12.999999999999996`}, {
                3.8744352*^9, 1495.2044788481587`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["1487.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8744352*^9, 1495.2044788481587`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{15.499999999999998`, 13.000000000000004`}, {3.87504*^9,
                 1615.2044788481587`}], 
               
               Offset[{15.500000000000002`, 3.552713678800501*^-15}, {
                3.87504*^9, 1615.2044788481587`}], 
               
               Offset[{-15.499999999999998`, -3.552713678800501*^-15}, {
                3.87504*^9, 1615.2044788481587`}], 
               
               Offset[{-15.500000000000002`, 12.999999999999996`}, {
                3.87504*^9, 1615.2044788481587`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["1607.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.87504*^9, 1615.2044788481587`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], 
          GraphicsGroupBox[{{
             FaceForm[
              Directive[
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]]], 
             EdgeForm[], 
             PolygonBox[{
               
               Offset[{15.499999999999998`, 13.000000000000004`}, {
                3.8756448*^9, 1699.2044788481587`}], 
               
               Offset[{15.500000000000002`, 3.552713678800501*^-15}, {
                3.8756448*^9, 1699.2044788481587`}], 
               
               Offset[{-15.499999999999998`, -3.552713678800501*^-15}, {
                3.8756448*^9, 1699.2044788481587`}], 
               
               Offset[{-15.500000000000002`, 12.999999999999996`}, {
                3.8756448*^9, 1699.2044788481587`}]}]}, {
             EdgeForm[], 
             Directive[
              RGBColor[
              0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
              AbsoluteThickness[1.25]]}, {}, 
            InsetBox[
             FormBox[
              StyleBox[
               RotationBox["1691.`", BoxRotation -> 0.], {
                Opacity[1]}, StripOnInput -> False], TraditionalForm], 
             Offset[{0., 6.5}, {3.8756448*^9, 1699.2044788481587`}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}]}}}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8665728*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox["\"Qtde. Casos\"", HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox["\"Semana Epidemiol\[OAcute]gica\"", HoldForm], 
         TraditionalForm], None}}, FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {
       Keys[$CellContext`joined], 
       Keys[$CellContext`joined]}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImagePadding -> {{All, All}, {All, All}}, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Pernambuco\"", TraditionalForm], 
     PlotRange -> {{3.8665728*^9, 3.8758176*^9}, {0, 1691.}}, 
     PlotRangePadding -> {{
        Scaled[0.06170802325943879], 
        Scaled[0.07258084343188607]}, {
        Scaled[0.02], 
        Scaled[0.20186126710815427`]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Casos Confirmados\"", "\"Casos Suspeitos\"", 
       "\"Casos Prov\[AAcute]veis\"", "\"Notifica\[CCedilla]\[OTilde]es\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.272}, {20, 6.272}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}, {DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.272}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.08426020408163262] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 6.72}, {20, 6.72}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 6.72}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.051309523809523805`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 8.16}, {20, 8.16}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 8.16}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.03009803921568628] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 7.6}, {20, 7.6}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}, {
                    DefaultBaseStyle -> {"Graphics", {
                    AbsolutePointSize[6]}, 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]]}}], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]], Automatic, 
                    Scaled[1]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 7.6}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.002105263157894735] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    DiskBox[{0, 0}]}], ",", 
                    RowBox[{"Offset", "[", "6.272`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}}]}], ",", 
                    RowBox[{"Offset", "[", "6.72`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[{{0, 1}, {1, 0}, {0, -1}, {-1, 0}}]}], ",", 
                    RowBox[{"Offset", "[", "8.16`", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    GraphicsBox[{
                    EdgeForm[], 
                    PolygonBox[
                    
                    NCache[{{0, 1}, {-1, 1 - 3^Rational[1, 2]}, {
                    1, 1 - 3^Rational[1, 2]}}, {{0, 
                    1}, {-1, -0.7320508075688772}, {
                    1, -0.7320508075688772}}]]}], ",", 
                    RowBox[{"Offset", "[", "7.6`", "]"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8773444434133797`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"a8ca4779-35d2-4273-8d6b-ac0fd19ed198"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Dados Literatura\
\>", "Section",ExpressionUUID->"9b8f38ee-1a91-42d0-9c05-d145c7e4f44a"],

Cell["\<\
Alguns dados que tirei de  artigos sobre a din\[AHat]mica da Monkeypox que \
ser\[ATilde]o uteis para as formulas\
\>", "Text",ExpressionUUID->"44b4dbed-ac12-4cac-800a-b0afc8b8be5f"],

Cell[CellGroupData[{

Cell["Periodo de Incuba\[CCedilla]\[ATilde]o", "Subsubsection",ExpressionUUID->"c6ba42a5-2f66-4f8c-92be-6436db209979"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"incubation", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"5", ",", " ", "21"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"incubationPeriod", " ", "=", " ", 
   RowBox[{"Mean", "[", "incubation", "]"}]}], 
  ";"}], "\n", "incubationPeriod"}], "Input",
 CellLabel->"In[41]:=",ExpressionUUID->"0b918e69-3583-4116-a27c-66d900c0fc62"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.877344443685177*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"11a6df28-e177-449c-a717-9b0918398a45"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Per\[IAcute]odo de Infec\[CCedilla]\[ATilde]o [1]", "Subsubsection",ExpressionUUID->"971e3967-2510-45f1-85e6-808b19d2f52e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prodomalPhase", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0", ",", " ", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rashPhase", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"7", ",", " ", "21"}], "]"}]}], ";"}], "\n", 
 RowBox[{"infectiousPeriod", " ", "=", " ", 
  RowBox[{"Mean", "[", 
   RowBox[{
    RowBox[{"Map", "[", "Median", "]"}], " ", "@", " ", 
    RowBox[{"{", 
     RowBox[{"prodomalPhase", ",", " ", "rashPhase"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"maxInfectiousPeriod", " ", "=", " ", 
  RowBox[{"Max", "[", 
   RowBox[{"prodomalPhase", ",", " ", "rashPhase"}], "]"}]}], "\n", 
 RowBox[{"medianInfectiousPeriod", " ", "=", " ", 
  RowBox[{"Flatten", "[", " ", 
   RowBox[{"{", 
    RowBox[{"prodomalPhase", ",", "rashPhase"}], "}"}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.8772824611957893`*^9, 3.877282461545541*^9}, {
  3.877282507904298*^9, 3.8772825330345793`*^9}, {3.877282568873734*^9, 
  3.87728256949019*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"3cf13c27-c437-4666-811b-03999502a6d8"],

Cell[BoxData[
 FractionBox["31", "4"]], "Output",
 CellChangeTimes->{3.87734444372132*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"8a5cfba5-a4fb-4bfb-8ca4-83a90fb607a5"],

Cell[BoxData["21"], "Output",
 CellChangeTimes->{3.877344443735601*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"feeeab56-0598-4a25-a099-af2fd4a3d059"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "7", ",", "8", ",", "9", ",", "10", 
   ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", 
   "17", ",", "18", ",", "19", ",", "20", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{3.877344443741941*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"33aad43a-25da-4c1e-bf3b-2d2094153cdf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Taxa de Recupera\[CCedilla]\[ATilde]o (\[Gamma])", "Subsubsection",ExpressionUUID->"1f1ce28b-f573-4431-be13-7fabd2e88cee"],

Cell["\<\
De acordo com [2], \[Gamma] ==1/\[Lambda], sendo \[Lambda] a m\[EAcute]dia do \
per\[IAcute]odo de infec\[CCedilla]\[ATilde]o total.\
\>", "Text",ExpressionUUID->"b96fb89b-0924-437e-b92e-8f7c017a5efd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modelos", "Section",ExpressionUUID->"61aa2ff2-998d-4a5a-8713-68066ee2c391"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"initialInfected", " ", "=", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "[", "totalJoinedSmoothed", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\n", 
 RowBox[{"initialExposed", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "[", "totalProvaveisPE", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\n", 
 RowBox[{"initialQuarantine", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Normal", "[", "totalSuspeitosPE", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}], "\n", 
 RowBox[{"realEPData", " ", "=", "  ", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Exposed\>\"", "\[Rule]", " ", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"totalSuspeitosPE", "[", "\"\<Values\>\"", "]"}], "]"}]}], " ", 
    "//", " ", "Normal"}], "|>"}]}], "\n", 
 RowBox[{"realIPData", " ", "=", " ", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Infected\>\"", "\[Rule]", " ", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"totalJoinedSmoothed", "[", "\"\<Values\>\"", "]"}], "]"}]}], 
    " ", "//", " ", "Normal"}], "|>"}]}], "\n", 
 RowBox[{"realQPData", " ", "=", " ", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<Quarantine\>\"", "\[Rule]", " ", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"totalProvaveisPE", "[", "\"\<Values\>\"", "]"}], "]"}]}], " ", 
    "//", " ", "Normal"}], "|>"}]}], "\n", 
 RowBox[{"allData", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{"realEPData", ",", "realIPData", ",", "realQPData"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"lsFocusParams", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", " ", "\[Zeta]", ",", " ", "\[Lambda]"}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8772787726595993`*^9, 3.877278777852025*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"32f0c8f5-51a1-4abc-94c0-7acbe784c2c8"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.877344443798609*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"3602fdc7-7634-4c6a-bfdc-1604933b88f4"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8773444438092957`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"0c02beec-48ff-4c92-a147-be6635a8a6cf"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.877344443817552*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"f9314f76-5120-4de7-a88b-dfdcf66acbc3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Exposed\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
    "8", ",", "25", ",", "47", ",", "107", ",", "147", ",", "209", ",", "274",
      ",", "364", ",", "427", ",", "463", ",", "544", ",", "643", ",", "670", 
     ",", "720", ",", "813", ",", "867"}], "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.87734444382598*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"6badc0cc-5d0d-4544-a78b-5309a662426a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Infected\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "6", ",", "11", ",", "16", ",", "20", ",", "29", ",", "48", ",",
      "74", ",", "108", ",", "127", ",", "149", ",", "164", ",", "165", ",", 
     "167", ",", "182"}], "}"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.877344443832653*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"a9699e90-6739-4318-b009-66691b3f188a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Quarantine\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "6", ",", "12", ",", "23", ",", "30", ",", "38", ",", "43", ",",
      "49", ",", "52", ",", "53", ",", "60", ",", "65", ",", "63", ",", "61", 
     ",", "63", ",", "67"}], "}"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8773444438392153`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"88a58d42-58b3-4bed-92f0-0074bb941245"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Exposed\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "8", ",", "25", ",", "47", ",", "107", ",", "147", ",", "209", ",", 
      "274", ",", "364", ",", "427", ",", "463", ",", "544", ",", "643", ",", 
      "670", ",", "720", ",", "813", ",", "867"}], "}"}]}], ",", 
   RowBox[{"\<\"Infected\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2", ",", "6", ",", "11", ",", "16", ",", "20", ",", "29", ",", "48", 
      ",", "74", ",", "108", ",", "127", ",", "149", ",", "164", ",", "165", 
      ",", "167", ",", "182"}], "}"}]}], ",", 
   RowBox[{"\<\"Quarantine\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2", ",", "6", ",", "12", ",", "23", ",", "30", ",", "38", ",", "43", 
      ",", "49", ",", "52", ",", "53", ",", "60", ",", "65", ",", "63", ",", 
      "61", ",", "63", ",", "67"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8773444438446817`*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"1acb4ad3-097a-4b4f-b794-90aed8a34efa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelSEIQR", " ", "=", " ", 
   RowBox[{"SetRateRules", "[", 
    RowBox[{"modelSEIQR", ",", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"NP", "[", "0", "]"}], " ", "\[Rule]", " ", 
       "estimatedInitialSusceptiblePopulation"}], "|>"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"modelSEIQR", " ", "=", " ", 
    RowBox[{"SetInitialConditions", "[", 
     RowBox[{"modelSEIQR", ",", "\n", "   ", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
         RowBox[{"SP", "[", "0", "]"}], " ", "\[Rule]", " ", 
         RowBox[{
         "estimatedInitialSusceptiblePopulation", " ", "-", "initialExposed", 
          "-", " ", "initialInfected", "-", "initialQuarantine"}]}], ",", 
        "\n", "    ", 
        RowBox[{
         RowBox[{"EP", "[", "0", "]"}], " ", "\[Rule]", " ", 
         "initialExposed"}], ",", "\n", "    ", 
        RowBox[{
         RowBox[{"IP", "[", "0", "]"}], " ", "\[Rule]", " ", 
         "initialInfected"}], ",", "\n", "    ", 
        RowBox[{
         RowBox[{"QP", "[", "0", "]"}], " ", "\[Rule]", " ", 
         "initialQuarantine"}]}], "\n", "    ", "|>"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Subtrair", " ", "do", " ", "n\[UAcute]mero", " ", "da", " ", "primeira", 
    " ", "semana", " ", "epidemiol\[OAcute]gica"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"lsActualEquations", " ", "=", " ", "\n", "  ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"modelSEIQR", "[", "\"\<Equations\>\"", "]"}], " ", "//.", " ", 
      "\n", "    ", 
      RowBox[{"KeyDrop", "[", 
       RowBox[{
        RowBox[{"modelSEIQR", "[", "\"\<RateRules\>\"", "]"}], ",", " ", 
        "lsFocusParams"}], "]"}]}], ",", " ", "\n", "   ", 
     RowBox[{"modelSEIQR", "[", "\"\<InitialConditions\>\"", "]"}]}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"List", " ", "/@", " ", "lsActualEquations"}], "]"}]}], "Input",
 CellChangeTimes->{{3.877207915424349*^9, 3.87720801917034*^9}, {
  3.877208534074648*^9, 3.8772085541367893`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"3706d53d-5265-4c2c-ae5d-eb17c73061d1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{
      RowBox[{
       SuperscriptBox["SP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"0.2`", " ", 
        RowBox[{"QP", "[", "t", "]"}]}], "-", 
       RowBox[{"4.350693462489848`*^-6", " ", "\[Beta]", " ", 
        RowBox[{"IP", "[", "t", "]"}], " ", 
        RowBox[{"SP", "[", "t", "]"}]}]}]}]},
    {"2", 
     RowBox[{
      RowBox[{
       SuperscriptBox["EP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"EP", "[", "t", "]"}]}], "\[Zeta]"]}], "+", 
       RowBox[{"4.350693462489848`*^-6", " ", "\[Beta]", " ", 
        RowBox[{"IP", "[", "t", "]"}], " ", 
        RowBox[{"SP", "[", "t", "]"}]}]}]}]},
    {"3", 
     RowBox[{
      RowBox[{
       SuperscriptBox["IP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"EP", "[", "t", "]"}], "\[Zeta]"], "-", 
       FractionBox[
        RowBox[{"IP", "[", "t", "]"}], "\[Lambda]"]}]}]},
    {"4", 
     RowBox[{
      RowBox[{
       SuperscriptBox["QP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"EP", "[", "t", "]"}], "\[Zeta]"], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.2`", "\[VeryThinSpace]", "+", 
          FractionBox["1", "\[Lambda]"]}], ")"}], " ", 
        RowBox[{"QP", "[", "t", "]"}]}]}]}]},
    {"5", 
     RowBox[{
      RowBox[{
       SuperscriptBox["RP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"IP", "[", "t", "]"}], "\[Lambda]"], "+", 
       FractionBox[
        RowBox[{"QP", "[", "t", "]"}], "\[Lambda]"]}]}]},
    {"6", 
     RowBox[{
      RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "229836.41580351474`"}]},
    {"7", 
     RowBox[{
      RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "2"}]},
    {"8", 
     RowBox[{
      RowBox[{"IP", "[", "0", "]"}], "\[Equal]", "2"}]},
    {"9", 
     RowBox[{
      RowBox[{"QP", "[", "0", "]"}], "\[Equal]", "8"}]},
    {"10", 
     RowBox[{
      RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.877344443875101*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"06881cbb-4538-4ff4-91df-e4fe7dfdef8f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"aSol", " ", "=", " ", 
   RowBox[{"Association", "@", "\n", "  ", 
    RowBox[{"Flatten", "@", 
     RowBox[{"ParametricNDSolve", "[", 
      RowBox[{"lsActualEquations", ",", " ", "\n", "    ", 
       RowBox[{"Head", " ", "/@", " ", 
        RowBox[{"Keys", "[", 
         RowBox[{"modelSEIQR", "[", "\"\<Stocks\>\"", "]"}], "]"}]}], ",", 
       " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", "52"}], "}"}], ",", " ", 
       "lsFocusParams"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.877282406067341*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"fba94ddf-c837-4814-91eb-2ca17cbb52e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opts", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"PlotLegends", " ", "\[Rule]", " ", "None"}], ",", " ", 
     RowBox[{"PlotTheme", " ", "\[Rule]", " ", "\"\<Detailed\>\""}], ",", " ",
      "\n", "   ", 
     RowBox[{"PerformanceGoal", " ", "\[Rule]", " ", "\"\<Speed\>\""}], ",", 
     " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", "400"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"lsPopulationKeys", " ", "=", " ", 
   RowBox[{"GetPopulationSymbols", "[", 
    RowBox[{"modelSEIQR", ",", " ", 
     RowBox[{"__", " ", "~~", " ", "\"\<Population\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Manipulate", "[", "\n", " ", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", "lsPopulationPlots", "}"}], ",", " ", "\n", "  ", 
     RowBox[{
      RowBox[{"lsPopulationPlots", " ", "=", " ", "\n", "   ", 
       RowBox[{"ParametricSolutionsPlots", "[", 
        RowBox[{
         RowBox[{"modelSEIQR", "[", "\"\<Stocks\>\"", "]"}], ",", " ", "\n", 
         "    ", 
         RowBox[{"KeyTake", "[", 
          RowBox[{"aSol", ",", " ", "lsPopulationKeys"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
          "contactRate", ",", " ", "incubationPeriod", ",", " ", "\n", 
           "     ", "infectionPeriod"}], "}"}], ",", " ", "nWeeks", ",", "\n",
          "    ", 
         RowBox[{"\"\<LogPlot\>\"", " ", "\[Rule]", " ", "popLogPlotQ"}], ",",
          " ", 
         RowBox[{"\"\<Together\>\"", " ", "\[Rule]", " ", "popTogetherQ"}], 
         ",", " ", "\n", "    ", 
         RowBox[{
         "\"\<Derivatives\>\"", " ", "\[Rule]", " ", "popDerivativesQ"}], ",",
          " ", 
         RowBox[{
         "\"\<DerivativePrefix\>\"", " ", "\[Rule]", " ", 
          "\"\<\[CapitalDelta]\>\""}], ",", "\n", "     ", "opts"}], "]"}]}], 
      ";", "\n", "\[NonBreakingSpace]", "\n", "  ", 
      RowBox[{"Multicolumn", "[", 
       RowBox[{"lsPopulationPlots", ",", " ", "nPlotColumns", ",", " ", 
        RowBox[{"Dividers", " ", "\[Rule]", " ", "All"}], ",", " ", "\n", 
        "   ", 
        RowBox[{"FrameStyle", " ", "\[Rule]", " ", 
         RowBox[{"GrayLevel", "[", "0.8", "]"}]}]}], "]"}]}]}], "]"}], ",", 
   "\n", "\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]", "\n", 
   " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"contactRate", ",", " ", "6.3", ",", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "\"\<Contact rate of the infected population (\[Beta]) \>\"", ",", 
         " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"DisplayForm", "[", 
           RowBox[{"InterpretationBox", "[", 
            RowBox[{
             RowBox[{"SuperscriptBox", "[", 
              RowBox[{"\"\<10\>\"", ",", " ", "\"\<-4\>\""}], "]"}], ",", " ",
              "var"}], "]"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", " ", "1", 
     ",", " ", "10", ",", " ", "1", ",", " ", "\n", "  ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "incubationPeriod", ",", " ", "13", ",", " ", 
       "\"\<Incubation period (\[Zeta]) in days\>\""}], "}"}], ",", " ", "5", 
     ",", " ", "21", ",", " ", "1", ",", " ", "\n", "  ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "infectionPeriod", ",", " ", "8", ",", " ", 
       "\"\<Infection Period (\[Lambda]) in days\>\""}], "}"}], ",", " ", "0",
      ",", " ", "21", ",", " ", "1", ",", " ", "\n", "  ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nWeeks", ",", "28", ",", " ", "\"\<Epidemiological Week\>\""}],
       "}"}], ",", " ", "1", ",", " ", "52", ",", " ", "1", ",", " ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "popTogetherQ", ",", " ", "True", ",", " ", 
       "\"\<Plot populations together\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "popDerivativesQ", ",", " ", "False", ",", " ", 
       "\"\<Plot populations derivatives\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "popLogPlotQ", ",", " ", "False", ",", " ", 
       "\"\<LogPlot populations\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"False", ",", " ", "True"}], "}"}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nPlotColumns", ",", " ", "2", ",", " ", 
       "\"\<Number of plot columns\>\""}], "}"}], ",", " ", 
     RowBox[{"Range", "[", "3", "]"}]}], "}"}], ",", " ", "\n", " ", 
   RowBox[{"ControlPlacement", " ", "\[Rule]", " ", "Left"}], ",", " ", 
   RowBox[{"ContinuousAction", " ", "\[Rule]", " ", "False"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.877282374816184*^9, 3.877282399912269*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"9241722f-3f6d-485a-b600-9d691603b690"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`contactRate$$ = 
    6, $CellContext`incubationPeriod$$ = 13, $CellContext`infectionPeriod$$ = 
    8, $CellContext`nPlotColumns$$ = 2, $CellContext`nWeeks$$ = 
    28, $CellContext`popDerivativesQ$$ = False, $CellContext`popLogPlotQ$$ = 
    False, $CellContext`popTogetherQ$$ = True, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`contactRate$$], 6.3, 
       "Contact rate of the infected population (\[Beta])   -4\n10"}, 1, 10, 
      1}, {{
       Hold[$CellContext`incubationPeriod$$], 13, 
       "Incubation period (\[Zeta]) in days"}, 5, 21, 1}, {{
       Hold[$CellContext`infectionPeriod$$], 8, 
       "Infection Period (\[Lambda]) in days"}, 0, 21, 1}, {{
       Hold[$CellContext`nWeeks$$], 28, "Epidemiological Week"}, 1, 52, 1}, {{
      
       Hold[$CellContext`popTogetherQ$$], True, 
       "Plot populations together"}, {False, True}}, {{
       Hold[$CellContext`popDerivativesQ$$], False, 
       "Plot populations derivatives"}, {False, True}}, {{
       Hold[$CellContext`popLogPlotQ$$], False, "LogPlot populations"}, {
      False, True}}, {{
       Hold[$CellContext`nPlotColumns$$], 2, "Number of plot columns"}, {1, 2,
       3}}}, Typeset`size$$ = {1035., {245.134033203125, 250.865966796875}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`contactRate$$ = 
        6.3, $CellContext`incubationPeriod$$ = 
        13, $CellContext`infectionPeriod$$ = 8, $CellContext`nPlotColumns$$ = 
        2, $CellContext`nWeeks$$ = 28, $CellContext`popDerivativesQ$$ = 
        False, $CellContext`popLogPlotQ$$ = 
        False, $CellContext`popTogetherQ$$ = True}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DynamicModule[{$CellContext`lsPopulationPlots}, \
$CellContext`lsPopulationPlots = 
         SystemDynamicsInteractiveInterfacesFunctions`ParametricSolutionsPlots[
           $CellContext`modelSEIQR["Stocks"], 
           
           KeyTake[$CellContext`aSol, $CellContext`lsPopulationKeys], \
{$CellContext`contactRate$$, $CellContext`incubationPeriod$$, \
$CellContext`infectionPeriod$$}, $CellContext`nWeeks$$, 
           "LogPlot" -> $CellContext`popLogPlotQ$$, 
           "Together" -> $CellContext`popTogetherQ$$, 
           "Derivatives" -> $CellContext`popDerivativesQ$$, 
           "DerivativePrefix" -> "\[CapitalDelta]", $CellContext`opts]; 
        Multicolumn[$CellContext`lsPopulationPlots, \
$CellContext`nPlotColumns$$, Dividers -> All, FrameStyle -> GrayLevel[0.8]]], 
      "Specifications" :> {{{$CellContext`contactRate$$, 6.3, 
          "Contact rate of the infected population (\[Beta])   -4\n10"}, 1, 
         10, 1, Appearance -> {"Open"}}, {{$CellContext`incubationPeriod$$, 
          13, "Incubation period (\[Zeta]) in days"}, 5, 21, 1, 
         Appearance -> {"Open"}}, {{$CellContext`infectionPeriod$$, 8, 
          "Infection Period (\[Lambda]) in days"}, 0, 21, 1, 
         Appearance -> {"Open"}}, {{$CellContext`nWeeks$$, 28, 
          "Epidemiological Week"}, 1, 52, 1, 
         Appearance -> {"Open"}}, {{$CellContext`popTogetherQ$$, True, 
          "Plot populations together"}, {
         False, True}}, {{$CellContext`popDerivativesQ$$, False, 
          "Plot populations derivatives"}, {
         False, True}}, {{$CellContext`popLogPlotQ$$, False, 
          "LogPlot populations"}, {
         False, True}}, {{$CellContext`nPlotColumns$$, 2, 
          "Number of plot columns"}, {1, 2, 3}}}, 
      "Options" :> {ControlPlacement -> Left, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1503., {275., 281.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.877344443993496*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"850b194f-515c-4547-ab04-3cefa4addef3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "PadRealData", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PadRealData", "[", 
    RowBox[{
     RowBox[{"aData", ":", 
      RowBox[{"Association", "[", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"_String", " ", "\[Rule]", " ", 
          RowBox[{"_", "?", "VectorQ"}]}], ")"}], ".."}], "]"}]}], ",", 
     RowBox[{"incubationPeriod_", "?", "IntegerQ"}], ",", 
     RowBox[{"infectiousPeriod_", "?", "IntegerQ"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"incubationPeriod", "+", "infectiousPeriod"}]}], "]"}], 
         ",", "#"}], "]"}], "&"}], "/@", "aData"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[65]:=",ExpressionUUID->"ddaf280b-7768-4144-a8b1-c27978fd943d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opts", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "None"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"modelSEIQR", "=", "modelSEIQR"}], ",", "equations", ",", 
       "aSol", ",", "lsPopulationPlots"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"modelSEIQR", " ", "=", " ", 
       RowBox[{"SetRateRules", "[", 
        RowBox[{"modelSEIQR", ",", " ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"NP", "[", "0", "]"}], " ", "\[Rule]", " ", "population"}],
           "|>"}]}], "]"}]}], ";", "\n", 
      RowBox[{"modelSEIQR", " ", "=", " ", 
       RowBox[{"SetInitialConditions", "[", 
        RowBox[{"modelSEIQR", ",", "\n", "   ", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{
            RowBox[{"SP", "[", "0", "]"}], " ", "\[Rule]", "  ", 
            RowBox[{
            "population", " ", "-", "initialExposed", "-", " ", 
             "initialInfected", "-", "initialQuarantine"}]}], ",", "\n", 
           "    ", 
           RowBox[{
            RowBox[{"EP", "[", "0", "]"}], " ", "\[Rule]", " ", 
            "initialExposed"}], ",", "\n", "    ", 
           RowBox[{
            RowBox[{"IP", "[", "0", "]"}], " ", "\[Rule]", " ", 
            "initialInfected"}], ",", "\n", "    ", 
           RowBox[{
            RowBox[{"QP", "[", "0", "]"}], " ", "\[Rule]", " ", 
            "initialQuarantine"}]}], "\n", "    ", "|>"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"equations", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"modelSEIQR", "[", "\"\<Equations\>\"", "]"}], "//.", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{
            RowBox[{"modelSEIQR", "[", "\"\<RateRules\>\"", "]"}], ",", 
            "lsFocusParams"}], "]"}]}], ",", 
         RowBox[{"modelSEIQR", "[", "\"\<InitialConditions\>\"", "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"aSol", "=", 
       RowBox[{"Association", "@", 
        RowBox[{"Flatten", "@", "\[IndentingNewLine]", 
         RowBox[{"ParametricNDSolve", "[", 
          RowBox[{"equations", ",", 
           RowBox[{"{", 
            RowBox[{"SP", ",", "EP", ",", "IP", ",", "QP", ",", " ", "RP"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", 
           "lsFocusParams"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"lsPopulationPlots", "=", "\[IndentingNewLine]", 
       RowBox[{"ParametricSolutionsPlots", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"modelSEIQR", "[", "\"\<Stocks\>\"", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"KeyTake", "[", 
          RowBox[{"aSol", ",", 
           RowBox[{"GetPopulationSymbols", "[", 
            RowBox[{"modelSEIQR", ",", " ", 
             RowBox[{"__", " ", "~~", " ", "\"\<Population\>\""}]}], "]"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
          "contactRate", ",", " ", "incubationPeriod", ",", 
           "infectionPeriod"}], "}"}], ",", "nWeeks", ",", 
         RowBox[{"\"\<Together\>\"", "\[Rule]", "False"}], ",", "opts"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      "\[NonBreakingSpace]\[NonBreakingSpace]\[NonBreakingSpace]\
\[NonBreakingSpace]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{
        "lsPopulationPlots", "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"PadRealData", "[", 
           RowBox[{"realIPData", ",", 
            RowBox[{"Round", "[", 
             RowBox[{"incubationPeriod", "+", "padOffset"}], "]"}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{"infectionPeriod", "+", "padOffset"}], "]"}]}], "]"}], 
          ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", "Black", ",", "Red"}], "}"}]}]}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"population", ",", 
       RowBox[{"estimatedInitialSusceptiblePopulation", "/", "100"}], ",", 
       "\"\<Population\>\""}], "}"}], ",", "100", ",", 
     "estimatedInitialSusceptiblePopulation", ",", "50", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "padOffset", ",", "0", ",", "\"\<real data padding offset\>\""}], "}"}],
      ",", 
     RowBox[{"-", "100"}], ",", "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"contactRate", ",", " ", "0.01", ",", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "\"\<Contact rate of the infected population (\[Beta])\>\"", ",", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"DisplayForm", "[", 
           RowBox[{"InterpretationBox", "[", 
            RowBox[{
             RowBox[{"SuperscriptBox", "[", 
              RowBox[{"\"\<10\>\"", ",", " ", "\"\<-4\>\""}], "]"}], ",", " ",
              "var"}], "]"}], "]"}], "]"}]}], "]"}]}], "}"}], ",", " ", 
     "0.01", ",", " ", "2", ",", " ", "0.01", ",", " ", "\n", "  ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "incubationPeriod", ",", " ", "13", ",", " ", 
       "\"\<Incubation period (\[Zeta]) in days \>\""}], "}"}], ",", " ", "5",
      ",", " ", "21", ",", " ", "1", ",", " ", "\n", "  ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "infectionPeriod", ",", " ", "7", ",", " ", 
       "\"\<Infection Period (\[Lambda]) in days\>\""}], "}"}], ",", " ", "0",
      ",", " ", "21", ",", " ", "1", ",", " ", "\n", "  ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", "\n", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nWeeks", ",", "28", ",", " ", "\"\<Epidemiological Week (t)\>\""}], 
      "}"}], ",", " ", "1", ",", " ", "52", ",", " ", "1", ",", " ", 
     RowBox[{"Appearance", " ", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", "\n", 
   "\[NonBreakingSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "nPlotColumns", ",", " ", "2", ",", " ", 
       "\"\<Number of plot columns\>\""}], "}"}], ",", " ", 
     RowBox[{"Range", "[", "3", "]"}]}], "}"}], ",", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.87720276689888*^9, 3.877202791221096*^9}, {
   3.8772029487667637`*^9, 3.8772029704537*^9}, {3.8772030105362587`*^9, 
   3.8772030381904097`*^9}, 3.8772030888605013`*^9, {3.877203135969965*^9, 
   3.877203148785918*^9}, {3.8772032320551*^9, 3.877203233092877*^9}, 
   3.877203274991686*^9, {3.877203332427047*^9, 3.8772034037935333`*^9}, {
   3.877207010645822*^9, 3.877207034588662*^9}, {3.877207247544569*^9, 
   3.877207294859724*^9}, {3.8772075950675163`*^9, 3.877207596176058*^9}, {
   3.8772080725776043`*^9, 3.8772081082948914`*^9}, {3.877208570674073*^9, 
   3.8772085857270603`*^9}, {3.877208952234953*^9, 3.877208952473283*^9}, {
   3.8772093666549683`*^9, 3.8772093667932863`*^9}, {3.877278842337172*^9, 
   3.877278894953886*^9}, 3.87728191051441*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"2a618d72-09cd-44eb-a00e-2d71e1be0794"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`contactRate$$ = 
    0.9700000000000004, $CellContext`incubationPeriod$$ = 
    10, $CellContext`infectionPeriod$$ = 9, $CellContext`nPlotColumns$$ = 
    2, $CellContext`nWeeks$$ = 46, $CellContext`padOffset$$ = 
    0, $CellContext`population$$ = 2289, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`population$$], 2298.4841580351476`, "Population"}, 
      100, 229848.41580351474`, 50}, {{
       Hold[$CellContext`padOffset$$], 0, "real data padding offset"}, -100, 
      100, 1}, {{
       Hold[$CellContext`contactRate$$], 0.01, 
       "Contact rate of the infected population (\[Beta])  -4\n10"}, 0.01, 2, 
      0.01}, {{
       Hold[$CellContext`incubationPeriod$$], 13, 
       "Incubation period (\[Zeta]) in days "}, 5, 21, 1}, {{
       Hold[$CellContext`infectionPeriod$$], 7, 
       "Infection Period (\[Lambda]) in days"}, 0, 21, 1}, {{
       Hold[$CellContext`nWeeks$$], 28, "Epidemiological Week (t)"}, 1, 52, 
      1}, {{
       Hold[$CellContext`nPlotColumns$$], 2, "Number of plot columns"}, {1, 2,
       3}}}, Typeset`size$$ = {800., {255., 260.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`contactRate$$ = 
        0.01, $CellContext`incubationPeriod$$ = 
        13, $CellContext`infectionPeriod$$ = 7, $CellContext`nPlotColumns$$ = 
        2, $CellContext`nWeeks$$ = 28, $CellContext`padOffset$$ = 
        0, $CellContext`population$$ = 2298.4841580351476`}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      DynamicModule[{$CellContext`modelSEIQR = $CellContext`modelSEIQR, \
$CellContext`equations, $CellContext`aSol, $CellContext`lsPopulationPlots}, \
$CellContext`modelSEIQR = 
         EpidemiologyModelModifications`SetRateRules[$CellContext`modelSEIQR, \
<|$CellContext`NP[0] -> $CellContext`population$$|>]; $CellContext`modelSEIQR = 
         EpidemiologyModelModifications`SetInitialConditions[$CellContext`\
modelSEIQR, <|$CellContext`SP[
             0] -> $CellContext`population$$ - $CellContext`initialExposed - \
$CellContext`initialInfected - $CellContext`initialQuarantine, \
$CellContext`EP[0] -> $CellContext`initialExposed, $CellContext`IP[
             0] -> $CellContext`initialInfected, $CellContext`QP[
             0] -> $CellContext`initialQuarantine|>]; $CellContext`equations = 
         Join[
           ReplaceRepeated[
            $CellContext`modelSEIQR["Equations"], 
            KeyDrop[
             $CellContext`modelSEIQR[
             "RateRules"], $CellContext`lsFocusParams]], 
           $CellContext`modelSEIQR[
           "InitialConditions"]]; $CellContext`aSol = <|
           Flatten[
            
            ParametricNDSolve[$CellContext`equations, {$CellContext`SP, \
$CellContext`EP, $CellContext`IP, $CellContext`QP, $CellContext`RP}, \
{$CellContext`t, 0, 
              100}, $CellContext`lsFocusParams]]|>; \
$CellContext`lsPopulationPlots = 
         SystemDynamicsInteractiveInterfacesFunctions`ParametricSolutionsPlots[
           $CellContext`modelSEIQR["Stocks"], 
           KeyTake[$CellContext`aSol, 
            
            EpidemiologyModelModifications`GetPopulationSymbols[$CellContext`\
modelSEIQR, 
             StringExpression[
              BlankSequence[], 
              "Population"]]], {$CellContext`contactRate$$, \
$CellContext`incubationPeriod$$, $CellContext`infectionPeriod$$}, \
$CellContext`nWeeks$$, "Together" -> False, $CellContext`opts]; Show[
          Part[$CellContext`lsPopulationPlots, 3], 
          ListPlot[
           $CellContext`PadRealData[$CellContext`realIPData, 
            Round[$CellContext`incubationPeriod$$ + $CellContext`padOffset$$], 
            Round[$CellContext`infectionPeriod$$ + $CellContext`padOffset$$]],
            PlotStyle -> {Blue, Black, Red}]]], 
      "Specifications" :> {{{$CellContext`population$$, 2298.4841580351476`, 
          "Population"}, 100, 229848.41580351474`, 50, 
         Appearance -> {"Open"}}, {{$CellContext`padOffset$$, 0, 
          "real data padding offset"}, -100, 100, 1, 
         Appearance -> {"Open"}}, {{$CellContext`contactRate$$, 0.01, 
          "Contact rate of the infected population (\[Beta])  -4\n10"}, 0.01, 
         2, 0.01, 
         Appearance -> {"Open"}}, {{$CellContext`incubationPeriod$$, 13, 
          "Incubation period (\[Zeta]) in days "}, 5, 21, 1, 
         Appearance -> {"Open"}}, {{$CellContext`infectionPeriod$$, 7, 
          "Infection Period (\[Lambda]) in days"}, 0, 21, 1, 
         Appearance -> {"Open"}}, {{$CellContext`nWeeks$$, 28, 
          "Epidemiological Week (t)"}, 1, 52, 1, 
         Appearance -> {"Open"}}, {{$CellContext`nPlotColumns$$, 2, 
          "Number of plot columns"}, {1, 2, 3}}}, 
      "Options" :> {ControlPlacement -> Left, ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{1265., {284., 290.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.87734444474249*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"6e461b26-66e3-4cac-8f75-5bb273827175"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Otimiza\[CCedilla]\[ATilde]o de \[Beta] ", "Subsection",ExpressionUUID->"50624ebc-032c-415b-8909-67f94cfd9674"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"time", " ", "is", " ", "measured", " ", "in", " ", "Days"}], " ", 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"toModelTime", "[", 
     RowBox[{"t0_DateObject", ",", " ", "date_DateObject"}], "]"}], " ", ":=",
     " ", "\n", "\t", 
    RowBox[{"QuantityMagnitude", "[", 
     RowBox[{"DateDifference", "[", 
      RowBox[{"t0", ",", " ", "date"}], "]"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"toDataDate", "[", 
     RowBox[{"t0_DateObject", ",", " ", 
      RowBox[{"time", ":", 
       RowBox[{"(", 
        RowBox[{"_Integer", "|", "_Real"}], ")"}]}]}], "]"}], " ", ":=", " ", 
    "\n", "\t", 
    RowBox[{"DatePlus", "[", 
     RowBox[{"t0", ",", " ", "time"}], "]"}]}]}]}]], "Input",
 CellLabel->"In[69]:=",ExpressionUUID->"f509e683-193a-48a0-8156-99d3705a5895"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "fitWithDataPlot", "]"}], "\n", 
 RowBox[{
  RowBox[{"fitWithDataPlot", "[", 
   RowBox[{"fit_FittedModel", ",", " ", 
    RowBox[{"{", 
     RowBox[{"dateMin_DateObject", ",", " ", "dateMax_DateObject"}], "}"}]}], 
   "]"}], " ", ":=", " ", "\n", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plotData", ",", " ", "bands", ",", " ", 
      RowBox[{"cd", " ", "=", " ", 
       RowBox[{"ColorData", "[", "108", "]"}]}]}], "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{"plotData", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"toDataDate", "[", 
           RowBox[{"dateMin", ",", " ", "#1"}], "]"}], ",", " ", "#2"}], 
         "}"}], " ", "&"}], " ", "@@@", " ", 
       RowBox[{"fit", "[", "\"\<Data\>\"", "]"}]}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"bands", "[", "x_", "]"}], " ", "=", " ", "\n", "   ", 
      RowBox[{"Quiet", "[", 
       RowBox[{
        RowBox[{"fit", "[", 
         RowBox[{"\"\<SinglePredictionBands\>\"", ",", " ", 
          RowBox[{"ConfidenceLevel", " ", "\[Rule]", " ", "0.95"}]}], "]"}], 
        " ", "/.", " ", 
        RowBox[{"t", " ", "\[Rule]", " ", "x"}]}], "]"}]}], ";", "\n", "  ", 
     RowBox[{
      RowBox[{"Show", "[", "\n", "    ", 
       RowBox[{
        RowBox[{"DateListPlot", "[", 
         RowBox[{"plotData", ",", "\n", "     ", 
          RowBox[{"Joined", " ", "\[Rule]", " ", "False"}], ",", "\n", 
          "     ", 
          RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "\n", "     ", 
         "]"}], ",", "\n", "    ", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"fit", "[", 
             RowBox[{"toModelTime", "[", 
              RowBox[{"dateMin", ",", " ", 
               RowBox[{"FromAbsoluteTime", "@", "t"}]}], "]"}], "]"}], ",", 
            " ", "\n", "      ", 
            RowBox[{"bands", "[", 
             RowBox[{"toModelTime", "[", 
              RowBox[{"dateMin", ",", " ", 
               RowBox[{"FromAbsoluteTime", "@", "t"}]}], "]"}], "]"}]}], 
           "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", " ", "\n", "      ", 
            RowBox[{"AbsoluteTime", "@", "dateMin"}], ",", " ", 
            RowBox[{"AbsoluteTime", "@", "dateMax"}]}], "}"}], ",", "\n", 
          "     ", 
          RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", "\n", 
          "     ", 
          RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"cd", "[", "2", "]"}], ",", " ", "None"}], "}"}]}], ",", 
          "\n", "     ", 
          RowBox[{"Filling", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"2", " ", "\[Rule]", " ", 
             RowBox[{"{", "1", "}"}]}], "}"}]}], ",", "\n", "     ", 
          RowBox[{"FillingStyle", " ", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"Opacity", "[", 
             RowBox[{"0.5", ",", " ", 
              RowBox[{"Lighter", "@", 
               RowBox[{"cd", "[", "2", "]"}]}]}], "]"}], "}"}]}]}], "\n", 
         "     ", "]"}], ",", "\n", "    ", 
        RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", "\n", "    ", 
        
        RowBox[{"PlotRangePadding", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", "0.03", "]"}], ",", " ", 
             RowBox[{"Scaled", "[", "0.1", "]"}]}], "}"}]}], "}"}]}], ",", 
        "\n", "    ", 
        RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<time (d)\>\"", ",", " ", "\"\<number infected\>\""}], 
          "}"}]}], ",", "\n", "    ", 
        RowBox[{"PlotLabel", " ", "\[Rule]", " ", "\n", "     ", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Estimated variance = ``\>\"", ",", " ", 
           RowBox[{"fit", "[", "\"\<EstimatedVariance\>\"", "]"}]}], "]"}]}], 
        ",", "\n", "    ", 
        RowBox[{"ImageSize", " ", "\[Rule]", " ", "360"}]}], "\n", "    ", 
       "]"}], " ", "//", " ", 
      RowBox[{
       RowBox[{"Labeled", "[", 
        RowBox[{"#", ",", " ", "\n", "     ", 
         RowBox[{"Column", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointLegend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"cd", "[", "1", "]"}], "}"}], ",", " ", 
               RowBox[{"{", "\"\<observed\>\"", "}"}]}], "]"}], ",", " ", 
             "\n", "       ", 
             RowBox[{"LineLegend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"cd", "[", "2", "]"}], "}"}], ",", " ", 
               RowBox[{"{", "\"\<calculated\>\"", "}"}]}], "]"}], ",", " ", 
             "\n", "       ", 
             RowBox[{"SwatchLegend", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Opacity", "[", 
                 RowBox[{"0.5", ",", " ", 
                  RowBox[{"Lighter", "@", 
                   RowBox[{"cd", "[", "2", "]"}]}]}], "]"}], "}"}], ",", " ", 
               
               RowBox[{"{", "\"\<95% prediction band\>\"", "}"}]}], "]"}]}], 
            "}"}], ",", " ", "\n", "      ", "Left"}], "]"}], ",", " ", 
         "Right"}], "]"}], " ", "&"}]}]}]}], "\n", "  ", "]"}]}]}], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"55ec7e9d-4a6f-476c-b876-67a065a2c6c3"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "modelSensitivityPlot", "]"}], "\n", 
 RowBox[{
  RowBox[{"modelSensitivityPlot", "[", 
   RowBox[{
    RowBox[{"modelIn", ":", 
     RowBox[{"(", 
      RowBox[{"_ParametricFunction", "[", "__", "]"}], ")"}]}], ",", 
    "fit_FittedModel", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tMin_", "?", "NumberQ"}], ",", 
        RowBox[{"tMax_", "?", "NumberQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"yMin_", "?", "NumberQ"}], ",", 
        RowBox[{"yMax_", "?", "NumberQ"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"scale", ":", 
     RowBox[{"{", 
      RowBox[{"__", "?", "NumberQ"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"model", ",", "sensitivities", ",", 
      RowBox[{"cd", "=", 
       RowBox[{"ColorData", "[", "108", "]"}]}], ",", "params", ",", "t"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"params", "=", 
      RowBox[{"fit", "[", "\"\<BestFitParameters\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"model", "=", 
      RowBox[{
       RowBox[{"modelIn", "[", "t", "]"}], "/.", " ", "params"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sensitivities", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"model", "+", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#2", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], " ", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{"modelIn", ",", "#1"}], "]"}], "[", "t", "]"}]}], "/.",
             " ", "params"}], ")"}]}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Keys", "@", "params"}], ",", "scale"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"TabView", "@", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p", ",", "bands", ",", "sf"}], "}"}], ",", 
          RowBox[{"p", "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Show", "[", 
              RowBox[{
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"fit", "[", "\"\<Data\>\"", "]"}], ",", 
                 RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"model", ",", "bands"}], "}"}], "//", "Evaluate"}],
                  ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "tMin", ",", "tMax"}], "}"}], ",", 
                 RowBox[{"PlotRange", "->", "All"}], ",", 
                 RowBox[{"PlotStyle", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"cd", "[", "2", "]"}], ",", 
                    RowBox[{"Lighter", "@", 
                    RowBox[{"cd", "[", "3", "]"}]}], ",", 
                    RowBox[{"Lighter", "@", 
                    RowBox[{"cd", "[", "4", "]"}]}]}], "}"}]}], ",", 
                 RowBox[{"Filling", "->", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"2", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Opacity", "[", 
                    RowBox[{"0.5", ",", 
                    RowBox[{"Lighter", "@", 
                    RowBox[{"cd", "[", "3", "]"}]}]}], "]"}]}], "}"}]}], ",", 
                    
                    RowBox[{"3", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"Opacity", "[", 
                    RowBox[{"0.5", ",", 
                    RowBox[{"Lighter", "@", 
                    RowBox[{"cd", "[", "4", "]"}]}]}], "]"}]}], "}"}]}]}], 
                   "}"}]}]}], "]"}], ",", 
               RowBox[{"PlotRange", "->", 
                RowBox[{"{", 
                 RowBox[{"All", ",", 
                  RowBox[{"{", 
                   RowBox[{"yMin", ",", "yMax"}], "}"}]}], "}"}]}], ",", 
               RowBox[{"PlotRangePadding", "->", 
                RowBox[{"{", 
                 RowBox[{"Automatic", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Scaled", "[", "0.03", "]"}], ",", 
                    RowBox[{"Scaled", "[", "0.1", "]"}]}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"FrameLabel", "->", 
                RowBox[{"{", 
                 RowBox[{"\"\<time (d)\>\"", ",", "\"\<number infected\>\""}],
                  "}"}]}], ",", 
               RowBox[{"PlotLabel", "->", "\"\<Parameter sensitivity\>\""}], 
               ",", 
               RowBox[{"Epilog", "->", 
                RowBox[{"{", 
                 RowBox[{"Inset", "[", 
                  RowBox[{
                   RowBox[{"StringForm", "[", 
                    RowBox[{"\"\<scale factor = ``\>\"", ",", 
                    RowBox[{"TraditionalForm", "[", "sf", "]"}]}], "]"}], ",", 
                   RowBox[{"Scaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.05", ",", "0.95"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "}"}]}]}],
               "]"}], "//", 
             RowBox[{
              RowBox[{"Labeled", "[", 
               RowBox[{"#", ",", 
                RowBox[{"Column", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cd", "[", "1", "]"}], "}"}], ",", 
                    RowBox[{"{", "\"\<observed\>\"", "}"}]}], "]"}], ",", 
                    RowBox[{"LineLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cd", "[", "2", "]"}], "}"}], ",", 
                    RowBox[{"{", "\"\<calculated\>\"", "}"}]}], "]"}], ",", 
                    RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Opacity", "[", 
                    RowBox[{"0.5", ",", 
                    RowBox[{"Lighter", "@", 
                    RowBox[{"cd", "[", "3", "]"}]}]}], "]"}], "}"}], ",", 
                    RowBox[{"{", "\"\<negative sensitivity\>\"", "}"}]}], 
                    "]"}], ",", 
                    RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Opacity", "[", 
                    RowBox[{"0.5", ",", 
                    RowBox[{"Lighter", "@", 
                    RowBox[{"cd", "[", "4", "]"}]}]}], "]"}], "}"}], ",", 
                    RowBox[{"{", "\"\<positive sensitivity\>\"", "}"}]}], 
                    "]"}]}], "}"}], ",", "Left"}], "]"}], ",", "Right"}], 
               "]"}], "&"}]}], ")"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Keys", "@", "params"}], ",", "sensitivities", ",", 
          "scale"}], "}"}]}], "]"}]}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.87712524903566*^9, 3.877125249063882*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"e0ce8111-e7fd-475a-b74b-c71e9fb92d98"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "residualsPlot", "]"}], "\n", 
 RowBox[{
  RowBox[{"residualsPlot", "[", "fit_FittedModel", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"width", "=", 
      RowBox[{"4", " ", "72"}]}], "}"}], ",", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"First", "/@", 
               RowBox[{"fit", "[", "\"\<Data\>\"", "]"}]}], ",", 
              RowBox[{"fit", "[", "\"\<FitResiduals\>\"", "]"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"FrameLabel", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<time (d)\>\"", ",", "\"\<FitResiduals\>\""}], 
             "}"}]}], ",", 
           RowBox[{"Filling", "->", "Axis"}], ",", 
           RowBox[{"ImageSize", "->", "width"}]}], "]"}], ",", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{"Thread", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fit", "[", "\"\<PredictedResponse\>\"", "]"}], ",", 
              RowBox[{"fit", "[", "\"\<FitResiduals\>\"", "]"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"FrameLabel", "->", 
            RowBox[{"{", 
             RowBox[{
             "\"\<PredictedResponse\>\"", ",", "\"\<FitResiduals\>\""}], 
             "}"}]}], ",", 
           RowBox[{"Filling", "->", "Axis"}], ",", 
           RowBox[{"ImageSize", "->", "width"}]}], "]"}]}], "}"}], "}"}], ",", 
      RowBox[{"Spacings", "->", 
       RowBox[{"Scaled", "[", "0.05", "]"}]}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8771253077326393`*^9, 3.877125307750462*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"6d035827-8a56-488c-a62f-8789538f2648"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SmoothPeriod", "[", 
    RowBox[{"data_", ",", "period_"}], "]"}], " ", ":=", " ", 
   RowBox[{"MovingMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Ceiling", "[", " ", 
       RowBox[{"Mean", "[", "#", "]"}], "]"}], "&"}], ",", "data", ",", 
     RowBox[{"{", 
      RowBox[{"period", ",", "Right", ",", " ", 
       RowBox[{"Quantity", "[", 
        RowBox[{"period", ",", "\"\<Days\>\""}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"expostosJoined", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FromDateString", "[", 
         RowBox[{"#Inicio", ",", " ", "dateFormat"}], "]"}], ",", " ", 
        "#\"Suspeitos\""}], "}"}], " ", "&"}], ",", " ", "PEdataMap"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.877033178170905*^9, {3.87703323269028*^9, 3.877033238317979*^9}, {
   3.87703329273306*^9, 3.877033303742013*^9}, {3.8770333436291237`*^9, 
   3.8770333459208384`*^9}, {3.877033455637836*^9, 3.877033461035036*^9}, {
   3.877033508987114*^9, 3.877033512900136*^9}, {3.877033650563281*^9, 
   3.877033652065096*^9}, {3.8770336864483423`*^9, 3.877033714542677*^9}, {
   3.8770337477113132`*^9, 3.8770337596083603`*^9}, {3.877033883061365*^9, 
   3.8770339226921787`*^9}, {3.877122216934801*^9, 3.877122217151388*^9}, {
   3.8771222474595346`*^9, 3.877122301951836*^9}, 3.877282836287887*^9, {
   3.877282909194232*^9, 3.87728290977232*^9}, 3.877286195809079*^9},
 CellLabel->"In[77]:=",ExpressionUUID->"58548405-6508-445a-9d17-dbca1ac4d688"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"totalInfectedOptimized", " ", "=", " ", 
    RowBox[{"SmoothPeriod", "[", 
     RowBox[{
      RowBox[{"Accumulate", "[", 
       RowBox[{"TimeSeries", "[", 
        RowBox[{"confirmadosJoined", ",", " ", 
         RowBox[{"TemporalRegularity", "\[Rule]", "True"}]}], "]"}], "]"}], 
      ",", 
      RowBox[{"Ceiling", "[", "infectiousPeriod", "]"}]}], "]"}]}], ";"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"totalInfectedOptimized", " ", "//", " ", "Normal"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"totalExpostosOptimized", " ", "=", " ", 
     RowBox[{"SmoothPeriod", "[", 
      RowBox[{
       RowBox[{"Accumulate", "[", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"expostosJoined", ",", " ", 
          RowBox[{"TemporalRegularity", "\[Rule]", "True"}]}], "]"}], "]"}], 
       ",", "14"}], "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.877122309426647*^9, 3.8771223454967527`*^9}, {
   3.8771224086514874`*^9, 3.877122433454026*^9}, {3.877125763980556*^9, 
   3.8771257653810053`*^9}, 3.8771273560111027`*^9, {3.877276140784795*^9, 
   3.877276142911894*^9}, {3.877282842281024*^9, 3.8772828451754293`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"d20d5d5a-dec3-40ea-9fd0-d57f6863e52e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"firstDateInfected", " ", "=", " ", 
   RowBox[{"First", " ", "@", " ", 
    RowBox[{"First", "@", 
     RowBox[{"Normal", "[", "totalInfectedOptimized", "]"}]}]}]}], "\n", 
  RowBox[{"(*", 
   RowBox[{"firstDateExposed", " ", "=", " ", 
    RowBox[{"First", "@", 
     RowBox[{"First", "@", 
      RowBox[{"Normal", "[", "totalExpostosOptimized", "]"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lastDateInfected", " ", "=", " ", 
   RowBox[{"First", " ", "@", "  ", 
    RowBox[{"Last", "@", " ", 
     RowBox[{"Normal", "[", "totalInfectedOptimized", "]"}]}]}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"lastDateExposed", "=", " ", 
    RowBox[{"First", " ", "@", "  ", 
     RowBox[{"Last", "@", " ", 
      RowBox[{"Normal", "[", "totalExpostosOptimized", "]"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.877113419429826*^9, 3.87711342047344*^9}, {
  3.877113467814207*^9, 3.877113468665852*^9}, {3.87712238345296*^9, 
  3.877122455792835*^9}, {3.8772828913701143`*^9, 3.8772828936715612`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"1cd69a2e-2ddf-412c-ac01-7366d63a35e6"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Fri 29 Jul 2022 00:00:00\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "7", ",", "29", ",", "0", ",", "0", ",", "0.`"}], 
         "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "3.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.877344445336959*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"2499af67-f7b9-431d-bf8a-2524759b7bf1"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Wed 2 Nov 2022 00:00:00\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "11", ",", "2", ",", "0", ",", "0", ",", "0.`"}], 
         "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "3.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.877344445341811*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"e4027ede-16e4-4e21-9bfb-328c2414aa70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "modelSEIQR2", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelSEIQR2", " ", "=", " ", 
   RowBox[{"SetRateRules", "[", 
    RowBox[{"modelSEIQR", ",", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"NP", "[", "0", "]"}], " ", "\[Rule]", " ", 
       RowBox[{"estimatedInitialSusceptiblePopulation", "/", "100"}]}], 
      "|>"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"modelSEIQR2", " ", "=", " ", 
   RowBox[{"SetInitialConditions", "[", 
    RowBox[{"modelSEIQR2", ",", "\n", "   ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{
        RowBox[{"SP", "[", "0", "]"}], " ", "\[Rule]", "  ", 
        RowBox[{
         RowBox[{"estimatedInitialSusceptiblePopulation", "/", "100"}], "-", 
         "initialExposed", "-", " ", "initialInfected", "-", 
         "initialQuarantine"}]}], " ", ",", "\n", "    ", 
       RowBox[{
        RowBox[{"EP", "[", "0", "]"}], " ", "\[Rule]", " ", 
        "initialExposed"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"IP", "[", "0", "]"}], " ", "\[Rule]", " ", 
        "initialInfected"}], ",", "\n", "    ", 
       RowBox[{
        RowBox[{"QP", "[", "0", "]"}], " ", "\[Rule]", " ", 
        "initialQuarantine"}]}], "\n", "    ", "|>"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lsActualEquations2", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"modelSEIQR2", "[", "\"\<Equations\>\"", "]"}], "//.", 
      RowBox[{"KeyDrop", "[", 
       RowBox[{
        RowBox[{"modelSEIQR2", "[", "\"\<RateRules\>\"", "]"}], ",", 
        "lsFocusParams"}], "]"}]}], ",", 
     RowBox[{"modelSEIQR2", "[", "\"\<InitialConditions\>\"", "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"List", " ", "/@", " ", "lsActualEquations2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"asol2", " ", "=", " ", 
   RowBox[{"ParametricNDSolve", "[", 
    RowBox[{"lsActualEquations2", ",", 
     RowBox[{"{", 
      RowBox[{"SP", ",", "EP", ",", "IP", ",", "QP", ",", " ", "RP"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "100"}], "}"}], ",", "lsFocusParams"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.877032288616094*^9, {3.8770323922970133`*^9, 3.877032392685498*^9}, {
   3.87703303991459*^9, 3.877033052949441*^9}, 3.877033549079546*^9, {
   3.877033801908928*^9, 3.877033852498322*^9}, {3.8770353722447653`*^9, 
   3.877035372587755*^9}, {3.877035506188702*^9, 3.8770355360481043`*^9}, {
   3.877113495024453*^9, 3.877113496598691*^9}, {3.877122952413476*^9, 
   3.877122952637218*^9}, {3.87712365543611*^9, 3.877123697879532*^9}, 
   3.87712375207097*^9, {3.877124216320938*^9, 3.877124224711265*^9}, 
   3.877124330040353*^9, {3.8771247217430553`*^9, 3.877124726766622*^9}, {
   3.877124853231196*^9, 3.87712485607098*^9}, {3.8771269831997643`*^9, 
   3.87712698691122*^9}, {3.877203733980631*^9, 3.877203737864634*^9}, {
   3.877203781610002*^9, 3.877203802628538*^9}, {3.8772039050026283`*^9, 
   3.8772040426715393`*^9}, {3.877204178387611*^9, 3.877204233016827*^9}, {
   3.8772042656612473`*^9, 3.877204274185762*^9}, {3.877205124736458*^9, 
   3.87720512543106*^9}, {3.877206077880746*^9, 3.877206087761364*^9}, {
   3.8772065299583*^9, 3.877206535355591*^9}, {3.877207577952715*^9, 
   3.8772075779893913`*^9}, {3.877207862935117*^9, 3.877207863869627*^9}, {
   3.8772081368734703`*^9, 3.877208153728713*^9}, 3.8772084392731953`*^9, {
   3.8772084806314993`*^9, 3.877208480874443*^9}, {3.877208784000174*^9, 
   3.8772087877314453`*^9}, {3.877209299104609*^9, 3.8772093311742496`*^9}, 
   3.877270258526726*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"9955a83d-c92d-4de0-b16d-1a3229f2d8ca"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{
      RowBox[{
       SuperscriptBox["SP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"0.2`", " ", 
        RowBox[{"QP", "[", "t", "]"}]}], "-", 
       RowBox[{"0.00043506934624898484`", " ", "\[Beta]", " ", 
        RowBox[{"IP", "[", "t", "]"}], " ", 
        RowBox[{"SP", "[", "t", "]"}]}]}]}]},
    {"2", 
     RowBox[{
      RowBox[{
       SuperscriptBox["EP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"EP", "[", "t", "]"}]}], "\[Zeta]"]}], "+", 
       RowBox[{"0.00043506934624898484`", " ", "\[Beta]", " ", 
        RowBox[{"IP", "[", "t", "]"}], " ", 
        RowBox[{"SP", "[", "t", "]"}]}]}]}]},
    {"3", 
     RowBox[{
      RowBox[{
       SuperscriptBox["IP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"EP", "[", "t", "]"}], "\[Zeta]"], "-", 
       FractionBox[
        RowBox[{"IP", "[", "t", "]"}], "\[Lambda]"]}]}]},
    {"4", 
     RowBox[{
      RowBox[{
       SuperscriptBox["QP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"EP", "[", "t", "]"}], "\[Zeta]"], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.2`", "\[VeryThinSpace]", "+", 
          FractionBox["1", "\[Lambda]"]}], ")"}], " ", 
        RowBox[{"QP", "[", "t", "]"}]}]}]}]},
    {"5", 
     RowBox[{
      RowBox[{
       SuperscriptBox["RP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"IP", "[", "t", "]"}], "\[Lambda]"], "+", 
       FractionBox[
        RowBox[{"QP", "[", "t", "]"}], "\[Lambda]"]}]}]},
    {"6", 
     RowBox[{
      RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "2286.4841580351476`"}]},
    {"7", 
     RowBox[{
      RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "2"}]},
    {"8", 
     RowBox[{
      RowBox[{"IP", "[", "0", "]"}], "\[Equal]", "2"}]},
    {"9", 
     RowBox[{
      RowBox[{"QP", "[", "0", "]"}], "\[Equal]", "8"}]},
    {"10", 
     RowBox[{
      RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.877344445398959*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"7dac4871-0600-454b-ab64-58a17a0e4cf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dados Totais, ajuste estat\[IAcute]stico de \[Beta], \[Zeta] e \
\[Lambda]", "Subsubsection",
 CellChangeTimes->{{3.877277045631852*^9, 3.877277049783984*^9}, {
  3.877277161078766*^9, 
  3.8772771849957743`*^9}},ExpressionUUID->"b26d0ab3-ffa1-4a85-a41f-\
00697dbbabf9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitInfectedData", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"toModelTime", "[", 
         RowBox[{"firstDateInfected", ",", " ", "#1"}], "]"}], ",", " ", 
        "#2"}], "}"}], "&"}], " ", "@@@", " ", 
     RowBox[{"Normal", "[", "totalInfectedOptimized", "]"}]}], " ", "//", 
    RowBox[{
     RowBox[{"Echo", "[", 
      RowBox[{"#", ",", " ", "\"\<\>\"", ",", " ", "Multicolumn"}], "]"}], 
     "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fitExposedData", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"toModelTime", "[", 
           RowBox[{"firstDateExposed", ",", " ", "#1"}], "]"}], ",", " ", 
          "#2"}], "}"}], "&"}], " ", "@@@", " ", 
       RowBox[{"Normal", "[", "totalExpostosOptimized", "]"}]}], " ", "//", 
      RowBox[{
       RowBox[{"Echo", "[", 
        RowBox[{"#", ",", " ", "\"\<\>\"", ",", " ", "Multicolumn"}], "]"}], 
       "&"}]}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8771131921035023`*^9, 3.877113271651721*^9}, 
   3.877113349178705*^9, {3.877113532783658*^9, 3.87711354221371*^9}, {
   3.877113637609001*^9, 3.8771136384815903`*^9}, {3.877122053486157*^9, 
   3.877122054470161*^9}, 3.877122119094775*^9, {3.8771224721081944`*^9, 
   3.8771225011949673`*^9}, 3.877202902093664*^9, {3.877270253055194*^9, 
   3.877270254137328*^9}, 3.877282933827277*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"dd4fe955-58a8-4241-b7ad-a5ffccad3832"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\"\>",
   "EchoLabel"], "  ", 
  TagBox[GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "4"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"32", ",", "23"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"64", ",", "133"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"96", ",", "178"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"8", ",", "9"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"40", ",", "41"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"72", ",", "159"}], "}"}], ""},
     {
      RowBox[{"{", 
       RowBox[{"16", ",", "13"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"48", ",", "74"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"80", ",", "164"}], "}"}], ""},
     {
      RowBox[{"{", 
       RowBox[{"24", ",", "17"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"56", ",", "112"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"88", ",", "166"}], "}"}], ""}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]}]], "Echo",
 CellChangeTimes->{
  3.877344445435994*^9},ExpressionUUID->"88081f39-0dc0-4706-9027-\
89de347b6125"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"infectedSol", "=", " ", 
   RowBox[{
    RowBox[{"IP", "[", 
     RowBox[{"\[Beta]", ",", "\[Zeta]", ",", "\[Lambda]"}], "]"}], " ", "/.", 
    "asol2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exposedSol", " ", "=", " ", 
   RowBox[{
    RowBox[{"EP", "[", 
     RowBox[{"\[Beta]", ",", "\[Zeta]", ",", "\[Lambda]"}], "]"}], " ", "/.", 
    "asol2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.877122521771249*^9, 3.877122533240222*^9}, {
  3.877123770550971*^9, 3.8771237743644667`*^9}, {3.87712717531631*^9, 
  3.877127186811365*^9}, {3.877204059503088*^9, 3.877204063363744*^9}, {
  3.877206058076913*^9, 3.877206071962068*^9}, {3.877277077364416*^9, 
  3.8772770789306507`*^9}},
 NumberMarks->False,
 CellLabel->"In[89]:=",ExpressionUUID->"14c57675-8f79-4579-b517-834c2c6ad14a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fitInfected", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"fitInfectedData", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"infectedSol", "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"5", "<", "\[Zeta]", "<", "21"}], " ", "&&", " ", 
        RowBox[{"0", "<", "\[Lambda]", "<", "21"}]}]}], " ", "}"}], " ", ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", " ", "0.8"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Zeta]", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Lambda]", ",", "9"}], "}"}]}], "}"}], ",", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fitInfected", "[", "\"\<ParameterTable\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitInfected", "[", "\"\<RSquared\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitInfected", "[", "\"\<AdjustedRSquared\>\"", "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"fitInfected", "[", "\"\<EstimatedVariance\>\"", "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitInfected", "[", "\"\<BestFitParameters\>\"", "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"fitInfected", "[", "\"\<BestFit\>\"", "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"fitWithDataPlot", "[", 
  RowBox[{"fitInfected", ",", 
   RowBox[{"{", 
    RowBox[{"firstDateInfected", ",", "lastDateInfected"}], "}"}]}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"residualsPlot", "[", "fitInfected", "]"}], "\[IndentingNewLine]", 
 RowBox[{"modelSensitivityPlot", "[", " ", 
  RowBox[{"infectedSol", ",", "fitInfected", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "100"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "15"}], ",", "190"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.877032424340663*^9, {3.877034167088585*^9, 3.877034179171933*^9}, {
   3.87703476872701*^9, 3.877034772411971*^9}, 3.877035323787134*^9, 
   3.8771136413082438`*^9, {3.8771220446616697`*^9, 3.877122057589491*^9}, {
   3.877122552353262*^9, 3.8771225746377573`*^9}, {3.8771226139007263`*^9, 
   3.877122614591358*^9}, 3.877122890548781*^9, {3.877123311028043*^9, 
   3.877123319225829*^9}, {3.877123503841666*^9, 3.8771235130553837`*^9}, 
   3.877123778887073*^9, {3.877123909819158*^9, 3.8771239101046143`*^9}, 
   3.877124357673539*^9, {3.877124388939878*^9, 3.8771244715529127`*^9}, {
   3.877124751355645*^9, 3.8771248017705793`*^9}, {3.877124881503153*^9, 
   3.877124881747944*^9}, {3.877125266219324*^9, 3.8771252866673*^9}, {
   3.877125331864976*^9, 3.877125335119377*^9}, {3.877125405810425*^9, 
   3.877125406613594*^9}, {3.8771254877968693`*^9, 3.877125515719837*^9}, 
   3.877125578090489*^9, {3.877125616405781*^9, 3.877125617130576*^9}, {
   3.877125658763528*^9, 3.8771256624469957`*^9}, {3.8771258116906013`*^9, 
   3.8771258121670628`*^9}, {3.877125964466372*^9, 3.877125970303094*^9}, {
   3.8771260534672747`*^9, 3.877126081229577*^9}, {3.877126991771295*^9, 
   3.877127016969036*^9}, {3.877127218881743*^9, 3.8771272240840683`*^9}, {
   3.8771272655602207`*^9, 3.877127287815248*^9}, {3.877204299724935*^9, 
   3.877204320199552*^9}, {3.8772045798945713`*^9, 3.877204629556115*^9}, {
   3.87720466328229*^9, 3.877204682149231*^9}, {3.877204864089601*^9, 
   3.8772049248832684`*^9}, {3.877205070387195*^9, 3.8772050858889236`*^9}, {
   3.877205266003261*^9, 3.877205301964232*^9}, {3.877205974572022*^9, 
   3.877205984329413*^9}, {3.87720610776338*^9, 3.877206156518714*^9}, {
   3.877206193159432*^9, 3.877206239941852*^9}, {3.8772063125735598`*^9, 
   3.877206319922908*^9}, {3.877206365252577*^9, 3.877206420673942*^9}, {
   3.877206458566353*^9, 3.877206496749235*^9}, {3.877206560038947*^9, 
   3.877206560517756*^9}, {3.877206746615427*^9, 3.87720675948433*^9}, {
   3.8772074311300793`*^9, 3.87720743967684*^9}, {3.8772088066085587`*^9, 
   3.8772088143558483`*^9}, {3.877209206814883*^9, 3.877209211904516*^9}, {
   3.8772092742178173`*^9, 3.8772092753776827`*^9}, {3.87720941627802*^9, 
   3.8772094199343243`*^9}, {3.877270018801406*^9, 3.8772700491037292`*^9}, {
   3.8772706535102053`*^9, 3.8772706583560877`*^9}, {3.877276254858836*^9, 
   3.877276357150094*^9}, {3.877276408295822*^9, 3.877276418254139*^9}, {
   3.8772769960184402`*^9, 3.877276996615481*^9}, {3.877283065254733*^9, 
   3.877283066214899*^9}, {3.8772831110726137`*^9, 3.8772831114090967`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"f65220bd-5445-40d4-8647-d4ea714f6cb8"],

Cell[BoxData[
 TemplateBox[{
  "FittedModel", "constr", 
   "\"The property values \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"\\\\\\\"ParameterTable\\\\\\\"\\\", \\\"}\\\"}]\\) assume an \
unconstrained model. The results for these properties may not be valid, \
particularly if the fitted parameters are near a constraint boundary.\"", 2, 
   92, 5, 25422775249527722208, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877344446595695*^9},
 CellLabel->
  "During evaluation of \
In[91]:=",ExpressionUUID->"31e7a993-cf4a-469f-b1dc-515c840c08e4"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Beta]", "0.4385816542470656`", "0.1568118881322703`", 
      "2.796864826199424`", "0.018895908323245555`"},
     {"\[Zeta]", "5.0000001261084055`", "6.669674693758854`", 
      "0.7496617684798262`", "0.4707268250316601`"},
     {"\[Lambda]", "9.063761762698773`", "1.5577300050783403`", 
      "5.818570441058522`", "0.00016864614225776722`"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.877344446617423*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"c7b9cd07-5a1d-4c18-bdce-70d77819570d"],

Cell[BoxData["0.9881978627362847`"], "Output",
 CellChangeTimes->{3.877344446624463*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"bd5781a0-67af-4aed-aca5-3aa28a2c3ace"],

Cell[BoxData["0.9846572215571702`"], "Output",
 CellChangeTimes->{3.877344446630707*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"c34e80e1-fee1-4435-a547-87a032c91e52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Beta]", "\[Rule]", "0.4385816542470656`"}], ",", 
   RowBox[{"\[Zeta]", "\[Rule]", "5.0000001261084055`"}], ",", 
   RowBox[{"\[Lambda]", "\[Rule]", "9.063761762698773`"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.877344446635315*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"e5e4c583-e8eb-4d32-8159-6b275761109a"],

Cell[BoxData[
 TemplateBox[{
  "FittedModel", "constr", 
   "\"The property values \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"\\\\\\\"EstimatedVariance\\\\\\\"\\\", \\\"}\\\"}]\\) assume an \
unconstrained model. The results for these properties may not be valid, \
particularly if the fitted parameters are near a constraint boundary.\"", 2, 
   96, 6, 25422775249527722208, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877344446806323*^9},
 CellLabel->
  "During evaluation of \
In[91]:=",ExpressionUUID->"177557d5-95d8-4b0f-9762-622123f254c9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{3.8680416*^9, 4.}, {3.8687328*^9, 9.}, {3.869424*^9, 
          13.}, {3.8701152*^9, 17.}, {3.8708064*^9, 23.}, {3.8714976*^9, 
          41.}, {3.8721888*^9, 74.}, {3.87288*^9, 112.}, {3.8735712*^9, 
          133.}, {3.8742624*^9, 159.}, {3.8749536*^9, 164.}, {3.8756448*^9, 
          166.}, {3.876336*^9, 178.}}]}}}, {{}, {}}}, {
      GraphicsComplexBox[CompressedData["
1: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
Pm9M7lSho/8B96QHSg==
       "], {{{}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.576832, 0.6185346666666667, 0.8388646666666667], 
           Opacity[0.5]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UN0GAoQBdCktm3btm2bqZXUtm3btn9t27bbb7P/5mRxZxZzZjnz0gaF
1AsOFxAQEMi3yt/6N/o0ulCTouTkH7N/+Y+vAWFLgYQjPBGISCQiE4WoRCM6
MYhJLGITh7jEIz4JSEgiEpOEpCQjOSlISSpSk4ZDTKcrtShGLtJymBl0ozbF
yc1ZFtGPplQkHUeYSXfqUII8nGMx/WlGJdJzlFn0oC4lucoqhtGWvJxnCQNo
TmVuso5RdCADx5hNMPW4yybGUYprrGY4QTxkG5PIxwWWMpBn7KYF99nCBF6x
nyrcYj3vGc0L9tKRx+zgI1N4zQG+kJHjzOEtITxlF5+ozz0284HxvGQfnynN
ddbwjhE8Zw/teMR2JpOfiyxjEC15wFYmUpXbbGAMncjECebSkwaU4QZrGUl7
CnCJ5QymFdXIzEnm0YuGlKUgl1nBEFpTnSycYj69aUQ5CpGV0yygD40pT2Gy
kZ0zLKQvTahAEa6wkqG0oQZ32MhYOvOEnUzlDQcDw+44B/mc6F+c5kfmcYgP
9GQau3lBfTozjs08oBTVaM1QVnGdvOShJFVpxRBWco3clKAKLRnMCq6Si3p0
YiybuE9xKtOCQSznCjmpS0fGsJF7FKM7k9jOEyrRnIEs4zI5CGEqu3hOHWax
nzd0YDQbuEtR5nCQd3TjGF+YyDYeU5ETfMcM9vKKZvzGYT4ygJ9YyiWy8yen
+IG5/Br6d3lPML9zPPQnM4Wf2ckzavMHJ/memfzCPl7TniN8YhTruUMRZnOA
t3TlKJ+ZwFYeUYHp7OElTenPEi6SjR5MZgdPqUU7RrKO2xSmC+PZwkPK04R+
LOYCWalJECNYyy0KUY7G9GUR58lCDdoynDXcpCBlaUQfFnKOzFSnDcNYzQ0K
UIaG9GYBZ8lERjKQnnSkJQ2pSUVKUpCcZCQlCYlJREISEJ94xCUOsYlFTGIQ
nWhEJQqRiUREIhCe0HzOT2ka0Iv5nAkIy+3/ATvM8T0=
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.576832, 0.6185346666666667, 0.8388646666666667], 
           Opacity[0.5]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1VN0GAgQBdCktu3Utm0ztdvUTG3btm3btq3dYtV17eXN6cc98zFz5m/m
BYWEBncPFxAQEMjzwK/1DPPoST1KkY+wufBEICKRiEwUohKN6MQgJrGITRzi
Eo/4JCAhiUhMEpKSjOSkICWpSE0agkhLOtKTgYycZT69qE9p8nODVQylFdXI
xDkW0JsGlKEAN1nNMFpTncycZyF9aEhZCnKLNQwnhBpk4QKL6EsjyvGQzYyj
E4W4zVpG0IaaPGY7k+hGVi6ymH405jt2M43yPGIL4/mdo3TmJ/Yzi8LcYR0j
+Y0jtOUH9vKOGbzkJJ+oxRN28JbJ/MlxPtKdnznIe+bwilN8JhuXWMIb+vMr
h/lAE75nD9N5wQkq8A1bmcAfHKMLzznAbIpwl/WMoh0/so+Z1OYpO5lCKNm5
zFIG0JSKfMs2JtKVotxjA6NpTx1ycIVlDKQZlSjGfTYyhg4Ek5OrLGcQzalM
cXJxjRUMpgVVKEFu8nCdlQyhJVUpyQM2MZaO1OUZu5hKD37hEHN5zWm+kJfU
jvkh67jJYJZxkUb0Zh4nKUFtujCNg2SlAJVpwzh2koqUpCAL+alECGPZQXIy
k4+KtGYM20lGcWrRmakcIBP1CGUWR8lLBVoxmm0kpSG9mMsJilGTTkxhPxkZ
yBLOU5ewRziTI+ShLws4TXmWc4mWjGIrSVjLDQZxl6VcoAH3WcVVenKbORyn
KA9YzTX6c4dFnKUG91jBZTpyi8nsIwNruM4AFnOOYFZyhW7M4DC56cN8TlGO
FoxkC4mpTw9mc4wi9GMhZ6hOByaxl/TUoSvTOUQuytKcEWwmEYWpRnsmsod0
5KQMzRjOJhJSiKq0YwK7SUsOStOUYWwkAQWpQlvGs4sgslOKJgxlA/GJR1zi
EJtYxCQG0YlGVKIQmUhEJALhCUcgYcH4n+D8l3/4m7/4wmc+8ZEPvOcdb3nD
a17xkjT2ZKMkjRnCel7o/Q9n0Oys
             "]]}]}, {}, {}}, {{}, {}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           
           LineBox[{1, 196, 150, 113, 84, 63, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 
            11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
            27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 197, 151, 114, 85,
             64, 52, 208, 162, 125, 96, 75, 39, 198, 152, 115, 86, 65, 53, 
            209, 163, 126, 97, 76, 40, 199, 153, 116, 87, 66, 54, 210, 164, 
            127, 98, 77, 41, 200, 154, 117, 88, 67, 217, 171, 134, 105, 55, 
            211, 165, 128, 99, 78, 221, 175, 138, 109, 42, 201, 155, 118, 89, 
            225, 179, 142, 68, 218, 172, 135, 235, 189, 106, 229, 183, 146, 
            56, 212, 166, 129, 234, 188, 100, 227, 181, 244, 144, 239, 193, 
            248, 79, 222, 176, 243, 139, 237, 191, 247, 110, 231, 185, 245, 
            148, 240, 194, 249, 43, 202, 156, 242, 119, 233, 187, 246, 90, 
            226, 180, 143, 238, 192, 69, 219, 173, 136, 236, 190, 107, 230, 
            184, 147, 57, 213, 167, 130, 101, 228, 182, 145, 80, 223, 177, 
            140, 111, 44, 203, 157, 120, 91, 70, 220, 174, 137, 108, 58, 214, 
            168, 131, 102, 81, 45, 204, 158, 121, 92, 71, 59, 215, 169, 132, 
            103, 82, 46, 205, 159, 122, 93, 72, 60, 47, 206, 160, 123, 94, 73,
             61, 48, 49, 207, 161, 124, 95, 74, 62, 216, 170, 133, 104, 83, 
            224, 178, 141, 112, 232, 186, 149, 241, 195, 250, 50}]}, 
          Annotation[#, "Charting`Private`Tag$17847#1"]& ], 
         TagBox[{}, 
          Annotation[#, "Charting`Private`Tag$17847#2"]& ]}}], {}}}, {
    PlotRange -> All, PlotRangePadding -> {Automatic, {
        Scaled[0.03], 
        Scaled[0.1]}}, FrameLabel -> {
       FormBox["\"time (d)\"", TraditionalForm], 
       FormBox["\"number infected\"", TraditionalForm]}, PlotLabel -> 
     FormBox[
       InterpretationBox[
       "\"Estimated variance = \\!\\(\\*FormBox[\\\"176.90341565955308`\\\", \
TraditionalForm]\\)\"", 
        StringForm["Estimated variance = ``", 176.90341565955308`], Editable -> 
        False], TraditionalForm], ImageSize -> 360, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8680416*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.8680416*^9, 3.876336*^9}, {0, 178.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   TagBox[
    GridBox[{{
       TemplateBox[{"\"observed\""}, "PointLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               
               TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                "RGBColorSwatchTemplate"], "}"}], ",", 
             RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
       TemplateBox[{"\"calculated\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                "RGBColorSwatchTemplate"], "}"}], ",", 
             RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
       TemplateBox[{"\"95% prediction band\""}, "SwatchLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.576832, 0.6185346666666667, 0.8388646666666667], 
                    Opacity[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Opacity", "[", 
                 RowBox[{"0.5`", ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.576832, 0.6185346666666667, 0.8388646666666667]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Right", ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.877344446874219*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"128f21c9-7230-4282-8e6d-04d0508a7643"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQjQYcIJSCQ3zP+9L7ZqJQvoGD6lrXGtVUSSjfwuHF
rbU5avUiUL6DA8eyP5cmrILpd3FwaNLKYhKHyXs45DC9PtLDowvl+zj4bBLK
lVppDOUHODiYdYU5fIXpD3JY4NsY5XZI/ACEH+KgEPbA9oW1EZQf5tBwY93S
TS1qUH6Eg0KodYVPiLkDppcg/kHlG6DxLdD4Dmh8FzS+BxrfB40fgMYPQuOH
oPHD0PgRaHyEwyDU0I0fAP1lYoM=
        "], {{{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
           LineBox[{23, 10}], LineBox[{24, 11}], LineBox[{25, 12}]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
           LineBox[{14, 1}], LineBox[{15, 2}], LineBox[{16, 3}], 
           LineBox[{17, 4}], LineBox[{18, 5}], LineBox[{19, 6}], 
           LineBox[{20, 7}], LineBox[{21, 8}], LineBox[{22, 9}], 
           LineBox[{26, 13}]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          PointBox[{27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 
           39}]}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{
         FormBox[
          TagBox["\"FitResiduals\"", HoldForm], TraditionalForm], None}, {
         FormBox[
          TagBox["\"time (d)\"", HoldForm], TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{14.561224489795919`, 1.5}, {5.523559708433368, 
       0.5000000000000142}},
      ImageSize->288,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 96.}, {-18.234012477178226`, 23.32929183434055}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {148.8, -91.22181673948447}, 
     ImageScaled[{0.5, 0.5}], {288, 177.9937887599697}], InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQUOMNrpuYKI4yReh/ie96X3zUQdbgftar41S8pB
da1rjWqqpEOP0MqTOQfUHV7cWpujVi/iYJ+94OnaVyYOHMv+XJqwisFhx/pd
m+T/Ojo4NGllMYmLOKTaHz13Z4+vQw7T6yM9PLoOucG7U3aKhjv4bBLKlVpp
7KB+fek/rZgEBwezrjCHrwwOuVxXjITmpTgs8G2McjskfuAI1x722uNpDgph
D2xfWBsd6HgbpeWtkebQcGPd0k0tagdipv4oKAtNdlAIta7wCTF3QPMPA8w/
MD7MPzA+zD8wPsw/MD7MPzA+zD8wPsw/MD7MP3B5qH9gfJh/YHyYf2B8mH8Y
UMGwiR8AmXvTIQ==
        "], {{{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
           LineBox[{23, 10}], LineBox[{24, 11}], LineBox[{25, 12}]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
           LineBox[{14, 1}], LineBox[{15, 2}], LineBox[{16, 3}], 
           LineBox[{17, 4}], LineBox[{18, 5}], LineBox[{19, 6}], 
           LineBox[{20, 7}], LineBox[{21, 8}], LineBox[{22, 9}], 
           LineBox[{26, 13}]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          PointBox[{27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 
           39}]}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{
         FormBox[
          TagBox["\"FitResiduals\"", HoldForm], TraditionalForm], None}, {
         FormBox[
          TagBox["\"PredictedResponse\"", HoldForm], TraditionalForm], None}},
      
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{14.561224489795919`, 1.5}, {5.523559708433368, 
       0.5000000000000142}},
      ImageSize->288,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 182.23401247717823`}, {-18.234012477178226`, 
        23.32929183434055}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {446.4000000000001, -91.22181673948447},
      ImageScaled[{0.5, 0.5}], {288, 177.9937887599697}]}, {}},
  ImageSize->{
    UpTo[576], 
    UpTo[178]},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.877344447489423*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"82a7bb7c-7fec-41f4-8111-0d495aaa8eb8"],

Cell[BoxData[
 TabViewBox[{{1,"\[Beta]"->
  TemplateBox[{
    GraphicsBox[{{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{0., 4.}, {8., 9.}, {16., 13.}, {24., 17.}, {32., 23.}, {
           40., 41.}, {48., 74.}, {56., 112.}, {64., 133.}, {72., 159.}, {80.,
            164.}, {88., 166.}, {96., 178.}}]}}}, {{}, {}}}, {
       GraphicsComplexBox[CompressedData["
1:eJxle3k0lG/Y/5AsWcaS9qRIyL7NZMllTXZjMLayziAJQygiaZOQVBIiKluR
LcnyhGwhSdmLqJSSLSHyu7/nvDPve87vL+c547nv+7mv9XN9rmu32wmSJysO
hxNmw+H++7snYTU7Q+TFwezqXYroEYxrOMy/0Na0hYMLnU6/YYUOXjUuNmd+
aJj7OPtdlB10EwywhxZboL1B0Tn+IRd4yi/zKvKKAl2XyJWXyQtmUp4zmw6J
w/d/yQamFgJQ0hMR3EqUhFPFrqPZrBtBQ1C6iC1SBl5tXd7ZSdsMtL9J6fcp
ChDw+GMKHN4OJ5q+KheZKYGTfVIDPnQXxDqw7131VYEVd3P9bw57wL35NFXR
Sw3YBSuP7pPbCy84tlodsydC+tnuqyUOkqAoEHXzW5A6xFNNr/yxkAGXOS0Z
c19NeCyGg1uGCpCV8XLHn6sHIXVV4vPAhBKUxqsPdpMA/gZNihSNqEJQlZZl
uqkOmN3mpwyxH4C6tvuzlx11gTdDpV/0qyZ4HzpQ403Rg52vjvKbRgKk5SqW
H/PRh53PW8hl/3Th2lzNWf8QA5Bfvzh6EzOAL/nBJ70CDaFENL5zIs0IGg2T
UqKjD8HE9Scs/htMgcVi4FNClBF4KmbJOl21AJxOBUtm2GFg35x1RTLHCi5t
/mPWfdEYYi+znaC/sQZ/B/f6P+dM4D08Glv31wZGz6p4aN8whYcaq7i8AAps
vH574HKWGVwPz99dPucAD/ilw5rvmEPvDb/6dhtneBG4y2BfgQWYFuT63p48
ChmimTu0yJag+CDkfYC4K9SEL+O8uixhb+NA4Edwg90mHCtidlZQNNRSS3Nx
h7LXUlf6e6xge83kx10kD4hr+qcg6kyC62Gjtw6oeMJ1+jcflyESzKY/Kds+
4gnhwiL4PfbWEHnrY/vgUSrkSa1vCxqxhvVf7/L+eEYF9nmWrS+OkOHavOjg
4Y9UeKjw5EzGVzIsFZT22L+jgpRbvvnqcRuQxZoPlqVSYfDwsxKbSRswD6m3
DtegQnf2KVltui2IHChpSS70hMVSK809s7Zw1TdSoYXdE9YqA8sv+NkB9lnp
3itjDzBRMDQI/20H5FsJEws0d2h2lvc+RqcAq+Ws6do5N3hc7P9nbY0CYeL+
itWhrtB2bTBggvZL25WTT1SXygKiJhs/rGwhgUAbJ1WnxQP4d86bYWkkwN/f
16eU4AmXGtdpvdhmDRo4tnLCXiok3b3m+yrNGgpWk2asrlOhL/7cTOouMrRZ
JxOgmwq2Sf2v5LPJYF1Jut48QgWv1kdfOqRtIHaTAudYDRVY3z+Jyiu0gaLH
abewE1R4v7DV31jeFmr+pZV9WPSEz/u/lBWX2MLLrYdsDJw9QZ3Dsrj8GQVW
t3Rylqy5Qqv6uWc/aB+12cNk9W1KceDDe1dlcsEK0h29G7ziPaAzIEx7OpwE
H29eFph28wS+tIW3iX9JIEXXSJxbR4WLA701C6eswel2ZoD8aSqAU+MwB44M
IeP38FHNVJBrOB64GEWGHwblp/JHqcAZUaSkxmUDDYb1MTteUWHTjsc066s2
ULKzVdj3AhUomd4Clry2YJ0T6eC3nQpDNIWZP0m2QE7Prxs67wlRJXVxiTcp
oFD14/4BXTcgtfg5JVaTIPXCMbmZSk9g/cn/YOaANYhVXbo6rEeFDA+T7Zm1
1nDFx2xBM5cKJ17orpfTJoPmvzOusgNUOONqsJf2kgwZ0buc84ao0CJcmOpp
agP+aR2E54+oMJVQfnvtlQ1wcdBeYrZUmHcceTswRIHvv9/6R1W7Qktct9Fv
2mttwX7cwT57HCT4jR/99NkK7OVl8xL9PUB2hyaR8zgJLHovqn4y8YQuDv+7
i5Mk2NJ68Yj9LDrv4ikqj481NAcHGk8eR+vXj1sfnLaGmYn+OP4XVEgdfPpy
6ASSf6My/xiSf59tMcVnkQz4z+rRd7qoIKot45gbYQMG9I5Tw4lU2BYs8Im0
YgP5nH8nm/ZTofe8TcL2c7aQMkT9EXzbE8Qv/VlejaGAz6iylpq7GzwJVLTJ
LUTns+iPd8/xhJeU2AB7aWvIxp/h/qhChS3RUw3lj6zBRdu5XC6DCuKS7qc9
5Mnw94Qiz7X3VPgelhBqUkaG4Y0FxruQfab8KsRua9jAC64/a/srqLBYonyV
XG0DpVrTerHuVLiluEXX6BUFdu9+v072gyvw1KgIj16xhrzJMpOHF6kQ9zub
9gZPBmO7vXfUO6hQny+2a2MSGV586f2bifSHmP2Yh3WbDVxyy6d/aETnOZQb
GPvaGrZJ9MuFP6FClcOehD/mZMCeT0QLD1NB8PDfN9HvybDO0mcTrZ8KVhdy
PY9PUaA7WIZYlOoKTQoBNHavOm03i2bRFRkc7Nl18bfzsBWcEq3Yc8zVA5wC
0lU2epLA4OT81t3gCSU1MudlxkkgcshsxPybJ9RdaFe/5WoN7eXrvq5QqWC+
MB9vP2ENnNIXfiQj++z66vTLnEaGh/mnqxSQ/LCG4mNs02RwfPu8T/AtFXIs
J3u6g23Ao2LVdOgGFU4d9TTumbOBDIchhQplKvRs9Doie9oWYm8Jtm/M9oSF
QKESlXAKVA1upWXR3WCkOcmqLIcErSnBoR+RfB/wHbK7uscazp+RoInKUuEd
P6TAfWvYoN22dSAF6bsjvSJyHxk4D/upRfYg/bmgcq+mgAwsbTZEXnS+KKdH
b5WVbUDLVHpQpIoKEY2z7JFlNnC1S3j2qTfyPztUls7UUyCBe/rB/BTyfyYX
vh07Zw3Wdyv/xJylwhfJsns/OMiwujg4R29D8q9oMbpwmQzT/FEtdUh+ovxF
u9IEbECJU0NPuIUKo++WDIWbrWFJQjBsoZAKG+OV2gQPkaE2NH7u6SAVjGwy
/853kOHcB+ni3eh5T0DjjpzPFBDae0kjrcAVUhN6togtWsNL2ZSfR5A+eLwW
TPMJJYNljN+sC9pv+luRQRfOBvDP3uDmkT61zZPgMIEMgaWi9cF9VCg7/t28
vxrFl7mmuVWkL3EZZ35npSL9aXmpYo7ed9knSB6yJQOhPnuX4QfkjzRtc/k/
kuFZc2Z1WC+6rztxj9X+UACSTF48u+wKL0If50h6FWkv6kjXRG/CwbEQCra9
3woEDZ8pttl7wPz2TqVtriQIf8e3W0ndE+5t4Q41HCHB0K7dzlXjniBi/jvH
ydka6tjfPg5E9rKCj5ChjVvDfcHL4k3PqTB5XJ6N050MQxc8hhuQvaksKwS/
mSTDx1+snppIntT+NoGJABv4UhOw1wzJO5+c8C/5lw1khXL4ZhCoYO00Y6AW
gvyBRkFB30NPOOKVxdsVQoGe/jbO7tNuEBrYYFGVSYIfHg2q8cmecMt7r/FD
EWswrdAzU5RC+/V5sbJnWcMjRZaTO25SYX/wX+urYmh/20onT6TPGjwcT08+
JMP2UmzAH+nTfJLsME7eBnLH9r9ir0bxwaxbL7nYBnBGz79hvlR4I1BP3lZL
gQjxT/fJf1xBUqjIWjHSGj4ms952OUOF67qasLyODBBzLG8N6YuQ1h1n7fNk
2J/67cFzJJ9kQ3kpb14bUBhV689oReun73kyUG8NtkaVCpn5yH88rKKJ6iH/
UZRmsoj8vftgIP/jVjLIBvd+mUT6dIVKCtUepcDP0pRgfJkrHMpzqlCYt4YP
d3Z61tRTIdLmc7FYEBnWjJziJdF+HqIKFukrZDA8/K3B7DUVQvgGh22VyRB2
NGHDZaQPr+eq3ZMqyTD/uoXrBtKXh+JWGxxvkkH8wh3hM+h9Xp3UmW8kMrDz
x/iVIn37Uy9Z0zpAhkuHTtSeRPo4kbhtQ/csBWbXzp1XTXKFctfYgRvHyEDZ
Jx2ciO5zPc7tKlsxGar/HXyShuQ/rLCg3HGVDN5tYWMVaH1aUL7MehMy2KXc
d/BF8ezwYbj4JJwMHPOj2nHo94AthSMTGeg+Ou2cBdBzKW9sRacDGVzX6Ckd
6LybH/wj3fmL8p3ongWNs67wlFNq13Gvu9ohmdFFutw4SBR7cX/5vRUYUThV
Fmw8AAK+KO48SgL5tEleAsETthmeCrD+QALj0wpmvp88oeMJl4O2ozV8xbd3
57qifGyHzt/jn6zBPetT9ADyL4vFKfHjLshfXNx49hL6Hj/hmaWn38iQ59iR
2Y70uSVdvXj2hA3savb/fvY2FXQtcijBP23g4nuWgvgDyL/jKp6pB9tCveT2
UkK+Jwi6ez1PD6bA3mOUzd8i3aCxedC8JoMEb+TftI5e8wT+W8l6ZTusQXJH
RpfqPiqMaUQ8nciwhi8RFa8rk1E+FV23J3k3GYzSHyj3oPzLyMJfx/o+um/h
Wz3p6P7lHv90/SpjA+Fvw10WkD5nCeh+yniM4q3eke86flS4wHOZdeI5BXba
Jhec++sKfScbODdGWMOn41IZreFU8LHA4VlYyXBjlW6og/RZNIptYvs5MtRo
uZeUIXl0uv56ZMFtAywxz2SOIv/5C0eg1mDIvwqWKPrnofhadkZtnw4ZUl58
PpiM9NlfZCg1thnp45KDuimSN7huleD9SIEBoSYNo0pXEKkQPU+YRfE7f8Ft
AuUTcSnmGrhAMmj9fBrIgfbL0Jh+e26ZDF6bN4gvIH0233630FkRxYOzpkF8
SJ+H1CSm/CqQf3yj8HIQ6UcZrSqZkEwGvnlTyWvo/XGzI9i0JRn+pEmOeCJ9
ZmNPOvSgjwx9Y9xR00if066MPr07TQFFi7qswJuuUJ8z5xHoTQbfF3Mabug+
BfVebR59RAafeZROIPl/px+tzbuC8h164kI1Wv/gWb+/3IfJ8Ml4c4IQ+j7b
uDyB+FNkmLCq1ggd/S+eCR97mUYGqxdZNEX0HLvN/Pw7ChnSeOZ0r6Dztme+
xHkvUUCkdc+O0+dd4YN0U9h+T+SffLyn/6L95FrTZVLzyMDzkP4A0HnYlxXf
ul0kg3pkC+W/eBUoGC5x6CQZiLRQd0P0nDr6NfJMChm4Xug10tBz18+4vOkE
MqipVyc8Qs+a7L0rPWfI8CT+6Fraf/7ina4tTxYZhIW9Nk2h9d0KCPc7VimQ
/LWNtBLuCgx8zbZtUub/4uvGW4KWmjb/i6/v/1RdWHVgY+LrcsWA+Lld7Ex8
rX7n+BmXdxxMfM1ZUn3wXC4XE1+7tPE8emDKzcTXYhHP5spmeZj4uttFP3XJ
no+Jr+e0m1d+H8Uz8fUpv5IgCXZ+Jr7+/mjulz8/PxNfsz1JvZcTi2fi65YC
e9WTC7xMfJ35KE2gyJObia9xB5MCSqU5mPhaUorA9VCfhYmvo9Q8+H5OzGkz
8DWuhf3+7w936hj4Gtuf8zqYZ7GOga8TRz/jn57hxhj4mnNn71xExSaMga9N
L5yr4BARxRj4msJ+YMuGrr0YA1+zeVKoKqH7MQa+JlNc9+2/qoAx8LWLkIPz
hzBljIGvxamLpfuGVTEGvsZ5fj0c10zAGPhafMkm+FgWEWPg6/A8ka3n9xMx
Br7mfG/oYzCtijHwNe70hkHRn4oYA1/jxN2t23/swxj4GtS1D6vd4MQY+Hok
S+hkzzoRJr5Oobs9PGGpysTXuc6mp17w6zLxdcp06ukdXMZMfC3GbR/+4rYV
E1/fUzh2EVu2YeLrOdOuM5EFDkx8fd65p14Kf5SJr81CpwZf+bgy8fULH4MM
TMOdia+vca1W5BR6MPH1Pefep85vPZn4WqRUW9zxJZWJr711dIvOHqEx8bVk
vawhfxWNia+HCVkdxXoIX68+TVtV4wTJfWppo0fXQQyb5O99KXLQufiFpeYx
L0y61HhJWysCFnG4xfcrH4Tzh8jYOisD5XrG3EwTHhb4Xxjc8lGFsi3d/5Y3
8kMSrc2x04UATbmlLid+4iEsrp0uTTsALTInZOljfGDEenT0jr8GiI89vUp5
ywO41rM5eyK0oKVdTGIwnAvYjqR7d97WBv7VdJZ8Ohski1cLV74GANL2rKri
v9qp9QFZQj064JJo8PVD6bj2xsu/epf6dQF7EPDtoPXXOtZQ1Wc+o3rAL/SR
b5y2DlshynJ+Xm8CWx4n0NiqVDDJKZPrd3hMIfcAyWjXlBp2agPtrsd2M+gr
Pcst6UjEht+M5uWKmMNi69jg8SQiVvZC/GiImAUk2u0t1jQjYGs/bh2d2GgJ
MJtckCingj0274gnJVki/Px51d9bDvs1FvXvpZAV4JbLuSoouzCfqykN/26g
51mzhNc71rQZ9Qx+375BUy0ZZj2hosfG79KKO4SrfQolK9jBCcWCkWgjT7gf
5BTBUmIHEqo/319AeJmrWb2XrkKBS2zq35O20Zj1h1NRS+x+N2nM+oPch4vb
JPJx8OnnsGvo73VwX41/g+EwK7hwS5FuXpEFLqHL+HQSL0jJSa6beKcAU8Je
x7dn88HJY/LF0e+UgGzRPGB7Cw9Yubtq26QK0M6Oer/D88OpzWKjkeNqkL55
2uAo8l872wI/GY8QwSNDFGesjYfqy7+e18+qww75+Jetx3lB4cNRr8p5TRCN
pvX2RmwA0hnFhk9C2pCobuiXOrwecuxPhxpcQ/J9XbZlvfqa9sXa3lBKog5k
llaPhiRMaX/PM/78IhXJd3BzlXhmb13FUYLG9zQ9GOHhquHWWavTlRQsGGwy
Bi+t+14CO1Uw05ze/MMtJiCZZ3qp95gaJtfUwULqM4W4ea5zutuIWGiJlu7W
ETNwqXt40iSHiMl67/O9+9EcorjcFyNeETCXB/tYw79bwHRzdMKkiCr24GnF
u0N0S7CkuJd4ZilgtsU1a5tmLaH4abWnyW8xzPDH66PXTiL5Pg6OT9Eer2PU
e/wV7mRahu1l1lssTyVNyWa4g/rv2w4aAnYQ5qv/7/GKB3TfpG3VT7SDxaVY
t4jNCF+cBr7FjRRoVz4VtneWyqzPfLhXNcAbQYO8VYmUZznyYO/OklDAzgeP
rpM6fbsUoUZKZTRGAg/nymtzpT4rw8juuHyJKTzI+IrYenxThXstYY8PC/ND
/tOA9zuGCbBcTYg3qcfDO3OJ9RumDsC4+TeT/Sf5oOdUJ3vwlAY4bVeJN5Dg
ga7S7JG49Qdh4tyyf6wrJwxksHEO4wFGBF5sfD7JCjG/Vkqk+XSg+IFj4N3J
P9oVh408p/RNQDPIO+mZhSrGRsRO/7RE/jx+QvGiGwFrNsdphRwxg8zeD76V
l4iY7sx5AaKzOfy4IpyT7EPE1LftIVnQLCD5dxqLaZEa1sm+ozZJxRL6TIZH
dUSUsYrPY4ecn1gC5op/ttFsP1YbIn3ruIUdzJ1vkRdO9IRQktVo7Vs7qExu
hVOJCF8Lqmb+skb5W3ndnUcHacx60zlH7k3P82nMepPJgMK2MDsc6H/xbyzv
YYHJfHsSPpUVOuPzoszWy8LNnXcKt4vxQkuyc5fhLQVQz5EhiETywWwK92zK
NSXQXEj1uBGOh72cqo/cC1XA0tzOLZabH/xOvM6mPFADZRGOx8I8/PBr4uXW
wTQibCmoefOHioeTHQSp96XqwFO9Zc64DK0/YW58rlgTijsTA9/Nb4BT8X9/
/eg6CC6kghNFF9lBZn5AiicQoFgWO0ANwsGZ6tjxU3460OV5I78pa0abrL44
ufe0LkTh33YUCLfWJVoTV/JOIXtJ8py+eOdv3ee7MSu2D42hbHantUK7MnYk
Mr1C9IEJyFjqpv7eq4ZxirOUtlSYgn9ZTBjXHAFruncs/g1mBpJTD+WP3idi
36tzA0trzMH0h+9PhTUClhiXnf2mzQIq73OPe11Rxfb47g+rd7eEaZvSJ3Ym
iljsJqco7VEkL1OfzYp/92JldyYfDVCtIMqZLbhocrWOUd+z5H4v90V5D7O+
pu3vsBBy3B1u9wS/esxiBwU36EPy7zxgYt9xmmekHWTXZUrzL3jCsk2DlPp6
ClRuNab/l68z6nHpseU1fn402HT2YZO/iDy8xvj1dAZ5wXT54p1X1xTB40xL
1QMOPODGUr9rZynDh5BrAdmDeLhW+6tjNU8Vju3xkq5H9pKBF7n9O4MA7Rcz
u9z68fDweJhmav4BwNTc53mK+CC+dlPQpSINSD7nrK0YyQNetUn1di+0wOhg
oXXiLCcMmb3VbBzSBktN9u6Y0nXAE+vkMTMFgKvrqmp4t6Rt/6KqwnuvCbSv
ey3eu14V2yR04WKjnCmkbW2U2CdNwDILlad+appBVI+KIT2IiCWOljpPa5mD
6N3rF8lnidif49kUdwMLwG0/wm3FSsC+LPXH14hbQkvVh+ngfGVMKZUy2ZuF
8p9zuZTSMRlspx0756i2HUQstXb1+HpC/Jit/Ei9HTRyP1cQC6JC5Y+nzxX1
KVBb/mpcSpbGrC961XAcVs2iwZKWtZ/vVmX4srL/n0QxHhzdk2oU9qvCN/7W
ff8E+eFC3UmRh3sIoKteOHjhHx5MCnYVVIkdAJxSjXqEEB7UWwXuBn43gcZg
w6q7j9Uwsleq5eCSKTSGHkrg0CJi0vX4BZc1M9gisKrHmUHE/IUfeF5hsYAf
ioUumokEbMuIjYLQekuY4JOdepSvgg0PXRQRy6UAXlLqt2ssDdgvfaIKSalA
j/B9byrav2Wr2Yc2STXwk9nrcVGIHyqOvhTS304EyzKZ20K5eJh1Wj6xiW4K
orJbr/PdImBT0+1XcFFmYGrXqdV0i4jN4ygvI8NRvjndK8JhTsTONGWaaFy2
gMLQeBwLWQ1j1D8Duvk+sJbSmPXPlpvKba4yOAhyqwomN+KghK1+bTgE+cuu
b5ul6mUgLdFLhY2bF7YYLaothCgAYbSPt9iXD4qLlgRzTihB9H1brSg/PFCe
7PQujlMBhcmiuWVOfvC6s3e9wUU1yLhUK+DHxw+U0BOqYqeJ4HLvcrRpGB7I
vwY/Hk1GeOHgxgff3vHCRj/D517xmmCqkX+cTY4b4m+6sAcWHYRFiQBdgQF2
8H8RG33CDWDR+cE+72EchGl4bItzRnjBJmlnSfOsdiyrxS+7Ywgv9G11jj5e
XRfeUTl02VsPXIpkjyq9WaqrGNS6n3zLGPi/usUpZytjX32jNHlumIDTry7K
NxY1bL47lZvtgSnknOHx7RomYD9To8tkn5gBW+XFunUo/rZQvwXXFJpD35W6
D3qbiFhupGvQSpUFwLWN2q21qphL0+e2NUfkT9b61rTTFbGcwwXY2z5LcPnH
2n5hQQLzoS+R146gfP6jSNSRznUYo948IrvN4WSKKLPeG86NchOyOxg1jp2b
WLKFj+y2BdwvPCBo+gTfwkk7CB3ecu3juCfsaYghOK7awX0ri88LXVRmfThX
ymDPPSoNOuq/OpsOysE8m1jM7pe8kPZoD+vpQEWAyvqjZX/4oHbpErdJpDJM
xX2RSniDh0Za32XjWFVwuej17TzyJykaQcujkQTgcbmysXUMj/LcPZRPlw4A
W/ObCx2tfHBspEpaMFEDyn71Fw7m8UCZXqyy1l0tqO5irYklciG/SrQ+/Bzl
T9/jHl3eyAaWdjw15I8AXZxPD+1+uawtvUo/+lDYBOKyCp9Ljahgd3HevMU7
TUGzXWnvDR4CdtWxw1BKxgywDG7HY15ErKK/7ZypnDmsGL2MvR5LxN5vHnc8
rmIB8waeys2SBCxwjvineweyt9eyNTE/EV6bF9QSTrWEKFLW5cJcWazdMAjb
RkT+eIfTSoeDJ2wrtH/vX2UHsfsTSyI8qTBiH9ZK0qTAFt2hLzhxGrPe7dVB
4lm+Q4NKsk5CyB8l0F0ItvyXjYd4ntNhEdyq4H/DuSBegB+iJtsjr68jwFNs
7vE/Vn4oU29tYmU9AF2AHfkmhYeGinnxI/0mYGRt1ZR1VQ3T2aySt+mbKYg/
70tQkyFiVlUSO2p+mYHoU9bD3Qg/mtd98boxjfK9Gd9/bx4TMKNSb0WrZQsQ
XTCtbfqM8vnm7Hf2dylQfV5w6+g5GjRmdF0U4VABzedZpMQFPCzXq6Zu5lKD
5SuRXkkI7xRf2R6ssEKA/HvmfDfK8XDaePg3i5spZHYfWn84goAN3KWOa5ww
g6Gwn+RviURs+5Lf5KCvOeTgrq3b4EzEnPxHzQ1CLUBFXWzqSbQaxqjHd/J1
RrEX0WD2iOnMpnaUT1yKuvWWlx+C9MJ0fV+qwadu87NULn7YHkxzuNpsCjIG
UhGKHETsbj7ZK7jLDCh35upDUbzmEfI6kddpDpbjjw4bfiFguu2FrSoNyoBz
PCQp8xkPR4Q5BJ+0qoJRV83Zx0g/c8aaCVy1BPB1Gxg90ImHstXbN0rMzOBS
smvRgUgi5v0tjZBshtZbtBgqOEnEmgxXYgV6KPBdOUxS9AENJKvyWMaNVeHT
0o38Peh+4q6L1lTpEGBgUMyLgu6PrW3xNRveHNiS5gMmUoiYUcC8AaeJCpT9
OLblLZLvTX+PPWeM1ICTVGWzD8UTFl1l5ZeJZsAZ6vPPKJ2IdXDq3BWLMwev
32tbL6J4weALDIJss4sraEy+wF4qqMdxEw7iRI92imniYIKnsfsOFeGfmctj
NzNlQHooImjsHw9gWQbfzbwUQGjsfaOzOx/wP/fPzjuiBMu++1MP0/Aws16w
+X24CvCfyNO7zcEP1Cddqs9D1KDqlNXOUwgP8YC+3iEfInQ5r/u+ORoPuji5
5zkx6pB5/fWK1RdeqFKopztGoHzObANugzE3pGy7fq0s4yBYppewpbJygGDu
J7ksBwD/FudIEGCBhWXL8o02CP9cVdn2mTKnnUNdnvZ3R/53nRo1O+9JXeCG
pfYlFz3AGppld08t1t0NSw0rTTAGHDmx+Xq8MlY4FrB2Ns4EXPwP9mf8UsV8
8r8+zUo3BZU9WkdedxMw3Ob4Zsc8M8jtj/n84R4Re/r8cohujjngGv6QRHYT
MZUwbEig1AJGYlNuNvSqYpFz9XQRiiXk+gbLB7xUxBTGukfSeywhsc/WzyRw
H2Z4NCpXwBHlczWfv+JU2DEGP5N5K6BG4vYuJj/i1yHlaWjkDqLV21zWL9hC
XmHG+ZEKD6giz7jWBtpBpF/kK8khT6gI86w9tmQHHizEDsVXVCafIqvV75Xm
RoPcsYtSVc/kgF93E/bnGS/oc/iXd7spgj5PuOidX3ywcz0uzdJPGSg6rdFW
7Xhwrm7/6n9KFT4vmqsaI/2+YbVrP8WfAJVyNL6yCeSfG/94soceAEpeTFjD
ez5wmOFht4vSgJ73B27V1fKAAzv7D/l4LWgZuvr5qwMXLPf7fLiSrw0Tv66L
2OqzwayWh/eFXoCosUucVI2/2kJ3upSbeE0gNMGvfW+HCuYR4tC1V9gUjKoM
rE6uqmFsytvmmsRQPsfaXzvtSsTabN7fPCVhDim3JJYL44nYS98Y59n9KP49
NS7U0SBgRH+vguEtllD5pKDPmE8FS9g9/Vn5piXwj85vusElh+UcLEgjqNjB
Gx3t38VWnuDCPyh1oMIOalae+fMcoUIQv4OlO5ECGXGaV0i7aEx+qAnzlzp4
mwabXSp3RXxRgnvFloeq0vGwz/VEb/ZfFfhQuyj/nJ8fIlhCi7nm1aBooEO9
ig3lH6wZPRIzSN+/eo1VqeDhkuyXr2+7TOCS/L3ud+FqWOVUlE3ZiCl4mZZe
dhEjYh5qSvKTX81gnLe9gJhNxA5uvOizbcIc2h3luzxqCFhPYctt6qwFwplc
XrdYVbHNNYqKv1MpcI9VuP1sFA3E8w9tEV9QBrmrXY3HZ/FwfbP0otaSKsjm
XfVbRP7lUVbT/Qc/COAi7hjFVY2A6YvOyhB7UxjpuK3L4U/ALENKE/upZsD/
S/7fchwRkws+9Y/LE/l/hTt8/9yJmMnLs5ZtJywgXN//jM5tNYzBX/2NDC77
XkiDuFKw0KpWAT/Fx++fIvwWYC9O/1SuBkSWdetbN/BDkmkZ+/46U4gaHvur
vUrASiRcTme3mMHI+Y3nk5H//UvjDJBrQvb1I25mYZaAZfWKOaiXKEPJK13v
sBE8LHr/PdH7TBVueh2m/Yc3spYCvSIfE6DxY2f/l7d4kH73RcfSwAwmFO/z
roURsXDPXON6A3MY+cpSIRuOvkcz9kvhawpk9ZfUlGXToJ4v4+gGDVWwIRQO
3kb57uW8Vz8VlAgQaj7WemEZD5sN2caUOMyh+ByXR/YdIvYw/Nh7XnUVeB+b
lMXDwg/yLylROUQ1EO75IfgJ+d/QrVEf3S6ZweLIWYPSVCI2EmNaYhVjDrkn
5fj+GBAxBr9WoW4fN1ZGg2PnT/V03kT3s/5VjimKVwMiIVlrlWYgo8Lu3o/y
PWmh8f3iqaow67Jj7hH63mznOn8RNXOQUfg4JXoB5dtPL2y3264KwwZnyi3Q
/gcPbudK+GMGmhNFxZsziZirn47mzBY1EKD2B25G8vdo2UrMCDEDr+sfC6KT
iVic3GGbQ31mEN75w4gb3f9LTLAstl8VnH4/s7qA9kvwLM+ucVCFpcPzx1PQ
+9NmP6vfb0J4Kn648/0NIray3b/RjqIGRl9/stqh/CPW58uFfbfNYH4p/P6F
u0SMwef1pjxV9KmkMfm8J3TydyI3DhTX3H5vml7TFs643PXLmRU6WRxaOxJk
YFus0reORR5INv/REOaiAM+flE48OsIHGBQek7FVAlXqBmq2Ox4OKvAsfAtS
AdWiZ6uj7Oj7NCXMF06oAU/Rgf2LKN58yZYz7ndF+CXh/UbqBTxUcfZKNoer
A8Yqf9N3ihd4BXFdPUGaQKSnJ0zYcUOak0yvzc2D0KJ0M61sEwe43eFbX2UL
kGLZ+p5lPwuUOzSz9lvqQLFCvztf1px2yZaugIijKN5cEJofS8utm5Lc+vKJ
kx5k6oi+EolYrEtuaRmrv2IM4U5DdRoxyhjf3e8jmpdMoDp0V5fXF1VMYhNf
vP9tFG/qFznVOgjYhndCbwLvo3jjLrsgh+KN3Bf7RbZMlD/kpO1ykSBiy79/
Je4oskD+1+yS0Lgqxher2CJrawl9MaoK9v2K2ELRl+nobksYuXDfuqxoH6by
Tq97mz2KNzzvzKQ8OTAGfyrKe55dvlOEyV/aRx44s17XHXiIap1C87bAN/ij
pPGJBwyxl1y5528H81oWr172egLu3TuWoD92cKlia4FRC5XJd1LKSgqvudBg
07wdfiZXDpyHe8OdyhBeK9uU8M9BEdyipJMvTPJBe6yGx1tPZUil7Jy734qH
/C9Nm2ICVaGrfYhjL9K35KEgveteyD/pbH24eRIPGZKffFNOHACPtmtC4sN8
8GapnB4WqgH6znw+wq088OirnlHeeS1gG7Z5NnWMC9a2s4nL3tOGlPjULXgn
NtBTTNS++xZA9E+CidzJv9qc3/+lv+MyAQ9HVyylQQVrUnr7ZITfFOGHquY3
v9WwugxovbEL+aOi8e03jxCxHiGnzGt7zME371VgCspHNW+RP5TtQ/nnbLiA
hT4BS5OLWj+2yRL8E/UbI0RUMJHKI+p6yZaAzVBu5hyQwxKrmjYYKtmB59hh
nh1mnhBdf8d6Z5kd5C0Mypk6UKH2WNv1Y2oUmGBrGJvfQWPyt8OX/mX23UL4
+PPc17VhJeibTwqNS8VD0BVv9qdzKsBtNXDdGMWb8LiOFv0fauDxs+9qwnp+
0KVeGqycIIKKJ+HpBnU8fJ840hrfbgKVLvE/nILUMLrDw/3nhkyBc0jn1IAI
EfObf0pkHTeDH0A61Y7iTcVBu8mhMXPweBVzNaqRgKVKLZoFTFmApQGB7Q2/
Ktb+dPFDfQoFRAjFXm1naNAjf27kwU9lwPANDebTeBjREd9nNaMKU7eKc8SQ
PAtldtSOjhOA/7JWp0IdHu6FH0pVsjGFUNdXf8y9CRjPWD811w3pu+0FhXGE
p4jKOM7drijfjSH9I9OIWP0vqzdxxywgV2ejnV2OGsbgl/Elx13eFdCgb1j9
jGWZChiyZFmKoXjjPx52ZedjNUgVIgsGcvODWeXA0FIVwhfKP81lFwlY9fjn
mKpGMzD1MJ47h/xdYFLfzPQLc4B49md7llD8cz66pyZPGZTqia8FP+BBP/l3
xvcnqrBT40FbI/qezJiWqKoHBGBXnP+V/x4Pn4F3yy4dM9Bns9TVCyFiF8Tk
yP06yD9fZznZfoaIfVKzSj7VQYHY+/7nQ+7RgO9ASvxOZVV4UDbtaI7izSWV
3ey+0gTAicXdilvBgyhb7I/D68yB09c+biSNiNmyPsxIVFSBXzcUDu3BIXn/
IhU9VVCDlnF/KgG9r3z+QblijBkUs+jdPXSbiH3X7X7uFWUOZWsaXNzGRIzB
f7PXcub9LqWBD3/XD64EFG/e/+EaQfFmfGglf1O5Gbhw7owORfEmROuDAyFJ
FZYt8dS0/+S33eCUqpI5VI5Y+npeImI6n6KMfYRU4Wj8WtQM8vdGK5mCD+bM
oM8g5OoaijePUzSOsQmoQeeAWrwdihe7VIDvON0MeOilhVgSEbv5o/PIkR4z
IIbMGpqi+xec5BlLf6MKu4Lif/+331BCUXcXSRXmWndNH0XvL3PTm34KmoOK
c0iUzy0idtjQZ87HUg0S9xaMvkD7G77ncV5INoMywtmRwAwixuDbk0KKBhKe
0mCBwlmr/8gMdlhYyZ9G+s2f1F3pHK0KcZaS0T5oP4fQwr09kwhvWsn9SUD+
1vCnfKs0ixr8Vf/E3oL2z/UaCIhrR/mE4d+uRHTeAm0WncYXqhB4xOpvFXo/
eDxb4Y+uKvC4St0bQfKofmTPlRyH9EHkx2YuJL8ul5lbE9Vm4CtPNJdA73+Y
+LbCf08Vxn0Srvz3vkrUjbWQv2aQeKkrYxuKl9H+DSYKQ2YAN3rLypE8Qm9u
OR8yivRlZfO1/86rq/E8KN8N5QOS8rva0fle/6srpqSbQYxjvkoMun8Gv2/6
Vz9f+xmNye/rHiWr/l9+n0oy9K4yW8fk90eXLv/q/cLB5PfHbGb3S8nzMvn9
90EsbYvlAkx+vyvn1aRtmzCT32/8q+k7f2Qbk9+PruIeFd0vyuT3NW+aK9WX
iDH5/aOXXfQFM/cx+f3niXrmdSUyTH4/TuK5GLe0IpPfD98fueTsrcLk94UV
sxolrxGZ/H7uk/b0UFEtJr9f1c/7WP6kDpPf92KlPPZo12fy+7dD0n8l04yY
/fNfDn57mvbdlNk/3+6Y8TXioyWzf176+yHe/AFrZv88LkT1xb/9dsz++fBr
R17mZTow++dLyyr1AxqPMPvn1+1Sc1Y848rsn+fXvTrdUe7O7J9feFWkXgRU
Zv98qpnMQG6FF7N//pCkemyqzzFm/3ylhk3iJw4/Zv/8OdXWkgxZf2b/PHvD
Is8bcgCzf37UTHJcTy+Q2T9vMBz8zgBHZ/bPizs67k+6Rmf2zyf7CcXzD9CZ
/L4D6Vi60kc6k9/XEvQ6vy6DzuT3fQ/4alWK0Jn8vmbO5cenrQOZ/L6XpOGz
2y4BTH6/OmVtPkzan8nvp1jtTXv76DiT37c4efOVDM8xJr9/mmPXnNdOLya/
f/k1S/6ky//2z384Hh93oN6Nye/Hnv5YmLTBhcnvq9Xov1siOTL5/Ru8nge6
/GyZ/P7nvlOBby/9L79/aSPly7vQ9XCps2bcxnYjtHiYNaT7bAD2Pzum2FR3
QFvcnpoSZH/2hUVrYtJ74JOKYt6/B0KAiwxQntaWgN9kYumD5c1wcs5a8Kuj
NOiOHQjwVNvJ7BeY12JJURrYzewX8Gg2sJZL3gsMvnwz15125TcBwODLde9n
en14GAgMvhxe+dYetKIDgy8/Yy0pX19DZ/b/F7NLr9l+oTP7/yWG5g7+baIz
+/81y/MEFjzpzP5/8xitduEXgcz+/32DTwXGPgYw+fI1NwPhH28oTL78g9Db
4zHV/8uXu+8+fo7VkQ2kp5YWCu0FQWOKe89XUS4Q11O0s9XdBroD5+RvZfPB
x589F/K374bvp7krQnIFQYJ8LOmc3l64EyE/qDu0CTaOT+hRjKVg4KLKBbb6
7Uz+/eOkz7snq6JM/v0DjSPBOUMcGPwz7kAviZgcAAz+OXrL1jT2kEBg8M8O
MonqTdJ0YPDP7M+p3Bl5dOa8wbZoj4MZn+jMeQNFhTt6yu/ozHmDHwXZ4T/O
0ZnzBqqXCUcWZwKZ8waOrr+3ErcHMvlntmytT218DrCl4ZTez6t/tDM73rkI
erACg481PZTOlfcuENm//mqQqhV4OPHuvUqnQ4Kc6z7fciv4/j5N42cHHd5f
unyRT4MEf5+vLip/pjPnDe517LROKqMz5w2MOLnnlfTpTL72nuiBW1fS7Jh8
bX9vlyvB6X/52qWcLB2z7nWwsro5iuIoAF9VrExnz3KCsvdz7jWjrcDbim8/
+JUX7sXT2o4ni4JbxPeCOllBqDo4oWP2UhwcZV8IN1ltAnen0qHEF5JwpuVu
/BG+7Uz+10u2dLfSdVEm/5uzMf6KxT5xYPCffkbPr70OCgAG/ykkaegb5RwI
DP6zltRdzbYJ+aP/4T8zCx99FEL+hsF//jtTETLzgc6cb8CluXlXIX/FmG+4
dCXsdxDyZ4z5BuK8cMsHTjpzvkG6wcu2lhDI5D/9/D3C/hY5wD8DldrpzDlt
+7ssG+/OswCDDxwrmQjeVxcI1RGfItLFrcC8oF73pxsdVobDg8vvW4Gx3min
HbKvv986S9ZLk8ClzFXOFdkfY75B5VvRIdNaOnO+wad333CcDZ3JF5ZxHY44
jHDAHuNdkVOsVhB7/kvR+YN06NMsEzC6YAUZVEc9OSRvg0J7rnkOEogr3q8X
RvpwornCsC+OBL5L3z6nd9JhT6RB/56X6H7Mcu9F9aD99+k7bTYlgQexe9Nr
pN+zOwvdQ9tJsO2a2Fgn0n8GH0dVShZ/ymbH5ONWOBxDbsr+Lx9XKcztGJmw
DsbXP9SXG+KHGHP7su/KnKAejqNat2+B6FrhX4WxvMD2UcH3taUo2PLl7oyc
EQC2sgdblS6IA++36s5HvJsgNmWLlGyEJLDVFJ4Vq9jG5PfsLJIvDh0RZfJ7
ve9mrz37IQYMfmv6xo2yTx4BwOC3Csw/5IdaBgKD39o7TizU50b2/D/8Vgbu
8+uZW3TmPAW3xecTD4fozHkKhQBFry3DdOY8hZxA7u1B9P+MeYqe8zTPn0J0
5jzFP/dmaoVBIJPfStk+bKfD4giBHNdOB+bPaIf2r9PQq2UBBt/TVtOcfqc0
EN4XK9Yq7rCCip8z1wkOdCgtj90xkG4FLF2/v8jU0yE+NcDo7G4SPOq5+i8a
6QtjnuKe1Jr6S/Q7Y56iL1+r4qMznckH+V7fdu7DOQpoRvjVRS9bgvKSamST
CrKPjfWVvmes4I1fXNz6IqQ/TisZJ9aswCZb8RlunA4ZO7bojceQQM38o+mG
bvS7rXXUoRorUNN8bWT3hg76fV9mkvRIECGUECWJ/n8PndclppEExnPeJVZo
PQbfUnwy5oe7pR2s1Oi0UaesoJ97JXBqhA7/mgY0VoJIIEtVLdzSh/wt+4nO
xEdW4JLNm6/bhs5/QGZnrBIJrubznZ9B+lvyt4Ieyo/08SdOfRg9H3tIUPrX
bgUSxrd3evfSQSQkq+kOmYTywatN+0bpzHmHky5na88/s2XyF7ccRu7n/R/+
gt3kSNVpv3XQd3lK4nYaP0zZHHury8sJtevFrq9e3QLqJT8DW514QeWisBZO
XhRyb0p15LwVgNyp8+dzqOJw4Vey5fdJYchQM7H46yAJpkZVD31itzH5EGqr
eeKkviiTDxE1vLkv/7UYMPiAlvSrJz44BQCDD/hxbufHscOBwOADukso/B3r
0f38Dx+Q9se1oDWZzpzXKItsuOk5SGfOaxQLla7IIn/HmNeQkw3z+ZNKZ85r
hOJjSY5b6cx5jRk3W9+7poFMPmDhR6gVXtoRZLy0HZSLprXdztIeH89mAUZ9
PMPkiETDo0BwM7b/8HczkpdHw/kG5J/iswT8f9y2gkPRWmfX6ujQO6srpL2T
BI2nVSpPIn1lzGvY8LWmTzTSmfMaGwtjQ2dd6cz6uRf/Q/33+Sh/2HTzo+mC
JWQVxpzslEf2ijvME3nKCkw3+GXaF6J8tLzDW/avFWi7ft9nP0YHtWYjne9R
JBCd2UN8+BbFA92Bt/bPrGDk0IRN/ms6XFWorLbUJoHXyNTyU6SvVTsPHonF
SBCal2qy/ITOnK+ofR1y3OukHRhuEroh/t0K7NkO315C+ezNAG511gAStJsP
swT2o/1nf+/OzrMCB4lhHZsWpJ/XVr8ekkP5b/hJYWX0vSvWlw6q8SBA8TNL
6RzSV8Prtef5W61goqri3wrKF7xeB16ztyTBhrX70uuRv2XUe51inVf5PtpC
X1O5dOaoFfBIXhZ8j/yPvm5mRMNeErAprXtzGq0fz7a/58k6EiRG7ZlKRt+z
HCm8790hEvB5OF0+j+6j1NN/LXfWCko7nuK6kD3sGnUgtauh/z/653QaOo93
9ufcqo0k6Cdn9Yih9Rj1V4f3n0K2J9sy669aHcVBpv+n/qp6NK5J8Mg66DYR
TOkM54ceKemX65c5IMq4LK/bbwv8ob/7OW3AC6aDF+9vERGFRp1/61sbBWD5
SvDzYVtxGDJbzdg2KAy55z3cPh2WBI2e7ZoPg7Yx67kqib8CWYiizHru9Vh3
HcUXYsCoZ2oa3RvpowQAo55JjaEZ3jBE/vZ/6pnBonc9udfRgVHPFLVSeS9/
nc6cB9moPxVSg+I/Yx7kR1bGsRJkL4x5kBkLqRORaXTmPEismOE37h105jzI
yttvEngUTxj1zHG9lXVnDzrCpZSbrdcVp7UFG/R3b73JAoz63mYNokV3fiBI
bj4+NSJsBUqtKsRz1ggPbX53+/ctK5hp13/3CcX7lYyCxZ3bSdCmNnvYG8mD
MQ8i2NzHPv+SzpwHYZcckl5wpzPrf1WGZF9nZDeJY3m/FOdRPsTe5mwqSwfK
SR61S6FWQCr3bVvNR/rnqmbBs4T8fcvPnf+QvkXvcIWfZ0hw02yjwwkU/+9V
pq+6PbWCIBZKRwfKD0qGRO/Ja5FAUszXexHpFzvd1vlqLQk6w2ddjUrpzPkN
40lNuZOX7cCn/vSpdRMoH1VRnwlB9vKpSezA+hMkWIyJsN6C7pvP65lJ4UOE
P74evExpRvmqFrVDQoYEmREtiaboe0VxM2LCGxBebAv+ao70U4UrumhrsxXk
fFrtBWQvcacHTxLNSRDD/i7BF52fUa+qxCZVPs7YwmqgCH/kR5T//Q6W1EH2
4j3F6X5PjAQvFCjvz6L1S4uvP0tkIQGP40ltM/Q9u2TO8JQZoPjGGh7Uj+yl
T6B//OK0FSxapWa7InvRv9pAKFAhgfSewhOt6DzxFubxtwVJsNor+5sVrceo
H5FVZZ63P7CFEsMBWZddJCgPazsc+Z/9c3rGmK9agRep17EIre8VY9EboEOC
17eOPgpE+1/9nMzqrUCCbLJB9Ub0/70Pd9nb8ZFAKetBdgnaT/QmIWV8Hwku
hntN+aPfl1VmfX8S0fvsbXk+6Hf9P+ENg5tIQDvE2qeNfmfUcyofZi0EnLUF
wfkjZU5cdsAZ/y3v0ZjH//ecvIPj9S5OO9B+En8t7vP///z/ALzhl1A=
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[0.963406, 0.7292673333333333, 0.3333333333333333]], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwl1mWYVUUYAOBdurt7AelSutMCpUOkUZQGBQQFCWnFDlAQaRUwCelulG6k
bMAAbEXx/eTH+3xxzt0zc2bm3k3qOaj1wGQJCQmJzJH8Lo4Wc7NR8wnupDR/
uDZGPw+b1CO5izL86dpf/M11/uFfxro3L5vdM4q7Kcssvaqckc+gFzfcP04v
H1vUT9KUcrypV42z8td5KPHmoJ/Sy89W+Wia8ZG6Kdfk71Ge2erqnJO/wS55
D9LysHqt2Jbr8k84KO9LNhLV48UCbJOPYau8Mym4R/2x2Iyf5afEIbwv3xd/
n8tk5jyPx9io4PpbYg2+iWvqE+Ij/MhM9W6xJ5dIF+NnBFfp7fo6sR3f8Y/6
c3EYq+SHxH5k5wtGkkx/gliQ7fJj4iDGyreJXUjJveplMTd+kX/A/ngmWaiY
eHO/1ORCrCd75A+Qnj7q9WJ7/pWvJjkT1YXYIR9Hc5bH8/hV/iGVmKuuFeOO
tacvKZikV5idsfa04Fbm6dXmy1hr+pGSyXpF2BVrSEtuY75eHb6KNaA/qZii
l8TueE+0ojIL9OrydcybAaRmql5R9sTcaE0VFurVi3WNuTCQNDytV4y9MRfa
UJW0PKNfnE9j3LSlGumYpn8Ln8UYaUd10pOBjGQiM1nIyrPuL8G+GCftqcEi
vfp8G++NQWTjOb2S7I9x0oEV6ub8FueKmrytbhB7Lt4jg9mg7sAN+Rqy87y6
FAdibmyXdyUV96lXii34Pc4PtXhH3ZCL8c7ZK3+QDHEu1BvjsyRwhsdYq39Y
7M/35Ih9wKg4j1G7/oJYOtaPg+rj4mB+YJp6h9gtnktqzjKcK3SM7wSxZbwz
/lCfFofyE8vUB2LPkzXOA0/EftR/V2wU51d+UnyUhfJPxV5kjJ56UzyHRNap
j4gDyBnUL4plOBTryk55d9Jwv3qV2Io/4zxRh8XqxlyONWcIm+N+krFenYuX
5GU5HHuATnFe1a35K/YAdVmibhLvOPYAQ8nNy3rlOBJrTmfqsVTv9njHsa4M
Iw+v6JXnaKwLXahPXl7Vr8CxmDNdaUA+XtOvyPEYM91oSH4KUJBCFKYISRSl
GNN9rhInYrx0pxHFmaF/KydjbORMYc9QwTary9104XFms5fy1OEuOjOCN9lD
OVrRK37PWMRhanMnnRjOLHZTlpY8GL+XLOQQtejLJJZwgjt4lo85x/08xkx2
UYaX+ISvGMBU3uc0LXie5VzgAdbwbfy28xMLOEhNfmUDl3mBa6zgC/rwM2v5
jolcYTHHuZ1fWM8lpnGVjzhLR1bzDcP4kTfYSWk28j0vspIv6c86LjKF9zhF
c55jGefpGf/HMJ8D1KA3E3iXYzThGT7kDPcxlNfZQSn6MZmlnOReevAk89hP
dR5mPO9wlMZ0YAgz2E5J7qE7o5jLPqrRiPY8ynS2UYJmdGMkc/iMqjSkHY/w
Glu5hSo0oC2DeZUtFKcYRUmiCIUpREEKkJ985CUPuclFTnKQnWxkJQuZyURG
MpCedKQlDalJRUocp4TkCf9/bSdUpj5tGMQrbE64+T/ofxwFS7o=
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[0.963406, 0.7292673333333333, 0.3333333333333333]], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwV0CtMglEYgOGDki1eukGxKWi2qKhESI6NTWBEbN42itHq1KnB6AQVk2ME
5szatAhRo4obo1B8DM/O+31/OGf/ZH4rXR4KIUTYYCwawiizeo44z1yyT44U
i7xyxQEl0nSoc0iZTxoc8cUjfRLMuLTn8gofTPD/mDdavg07szyxZx5xlnjh
xvzLur4nqR8YkDE3KepTOiyYL4jpXWp0WbOrs6ILnNBm3u6cab1DlR9W7e5Y
1nmOeSdhd8aU3uaab5J2tyzpTcb92z8LrS/h
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[
            0.7639713333333333, 0.5021279999999999, 0.7900726666666666]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{1042, 803, 804, 805, 1000, 949, 906, 871, 844, 825, 
              1008, 957, 914, 879, 852, 1016, 965, 922, 887, 1024, 973, 930, 
              1032, 981, 1041, 806, 50, 246, 192, 237, 147, 184, 229, 110, 
              138, 175, 220, 82, 102, 130, 167, 212, 62, 74, 94, 122, 159, 
              204, 49, 48, 47, 1043}}]}]}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[
            0.7639713333333333, 0.5021279999999999, 0.7900726666666666]], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwl1WWUVWUUgOEZumOG7sGgMUgJ6RJpaZBWukGQll60khKChLSUICFISCqp
pDSChCAxoKjA8y1/POu95+zz53773nViWner2zVOREREJFcj/+9OptKNepSh
EOG5uMQjPglISCISk4SkJCM5KUhJKlITRTRpSEs60pOBjGQiM1nISjayk4MY
cvISL7OLaXTnPcpSmFfYzXR6UJ9yFOEn5jOAFlTnVfYwg540oDxFOcwCBtKS
d8nFD8ykFw2pwC8sZTgfUowjfMkgWlGDM6xkNJ3IzV5m0ZtGnGcN46jISZYx
gvYU5ygLGUxrLrGeidTkLKsYw0220TnsmI1M4Q47yMM+PucufbjOZhpzgbXc
Zzy3+I5HVOIUy/mTkfzOVh7SgSt8wwMmc5vtxPIWx1jEPYZwgy204TIbmEQt
zrGasXThGpv4lLzsZzZ9acJF1jGBypxmBaPoSAmOs5ihtKU2+TjAHD6iKVUo
yQmWMIx21CE/B5lLP5pRlVIU4BDz6E9zqlGagkT7Q0WR058rhhxkJxtZKU51
PmAsG7hBForxDu0Yw3quk5l6dGUK27hHUarRltGs4zcy0ZdZ7OEJdenCZLZy
lyL0Yjo7eURV5rCPp7RhFGu5RkYW8CPP6cMx4vnOMzWp7tbH1CGl6xOaQOdp
Mj2g/9KZFK6PaBydpIl1i/5BYVK5/lkT6heaXA/qf/TkKHHdm6ZJ9Ht9SBWO
E9+92bqXv2nNYSLdH6lruEoG5nOIZ/RmBruIpTZz2c8/dGIim7lDIXowlR08
oDKtGMHXXCE9tejIBL7lNm/Snc/Yzn0q0ZLhrOYy6ahJB8aziVu8QUVa8Amr
uERaXqcC7zOMlVwkDdFEkTqcddhX2Ek457CrsM9wrmEvJAp7CLsM5xp2Hs4+
7C6cJ+GF8tyL5Rmv+Vye5gxlBRfC3swKajmaMYTlnA+/CbMCWpamDGYZv4Yz
N8uvZWjCIJZyjqdm+fRtGjOQrzgbdm6WV0vTiAEs4Qx/meXRUjTkYxZzmidm
ubUkDejPIk7x2KyGtmccG7lJLkpQn34s5CSxnn8Ba0Tt8Q==
              "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.365248, 0.427802, 0.758297]], 
            LineBox[CompressedData["
1:eJwV08NyGAAARdHUZlIztW3bTO02tW3btm3btm3bxnTZ08WZ+37gBYd2DekS
JiAg4C//e5xZdKUWxclNWMIRnghEJBKRiUJUohGdGMQkFrGJQ1wCCSIe8UlA
QhKRmCQkJRnJSUFKgklFatJwgtl0ozYlyENaTjKH7tShJHm5zDIG0ozKpOMU
c+lBXUqRjyssZxDNqUJ6TjOPntSjNLdZx0jakp+rrGAwLajKfTYxlo5k4Azz
6UV9HrONiZThDusZRTsKcI2VDCGUZ+xkCtV4wGbG8Z5DdOIle5jOJ46SkbMs
4Au9ecN+GvCE7XxnEh84zC/KcpcNfGM07zjIT9rzgt38YBofOcJvCnKdVXxl
KG85QEues4upVOchWxhPZ16xlxlk4hwL6UNDnrKDyZTjHhsZQwcKcYPVDKMV
NcjMeRbRl0aUpzA3WcNwWlOTLFxgMf1oTAWKkJWLLKE/TahIUbIR5FCBZLdz
kJNLLGUATalEMW6xlhG0IYRHbGUCXXjNPmbymWP8IRf/AH5FeYg=
             "]]}, Annotation[#, "Charting`Private`Tag$18478#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.963406, 0.7292673333333333, 0.3333333333333333]], 
            LineBox[CompressedData["
1:eJwl1WWYVVUUBuDL0F3SOaR0p3SHEkOppJRKK91gB3YRtmITioHS3d1pYaIo
itLgux5/vKz1rXOHu8/ZZ88k9x+ZMiJVIpG47p/z6rSkRCIfq+RJtKYcF1yb
bp6f1fJk2lCei65d4jJXuMo1ZvhsAdb4zBTaUoGXzWpxQj+bQVz3+ZlmBVkr
T6UdFXnFrDYn9XMYHAvmPrNCrNNPoz0fy+34S7+ASrwq1+Fr/Vw26+8gI3fK
y9SuXNF/wR79EHKRSr5fLcx6/XTW6XuRhpvlT9T2/K0/qo5moX5n/P+cJjvf
MDHWRmXXX1Pr8mNckw+r93CGefIWtT+/kinWzwTOcpfry9Vu/MxV+bg6lqX6
vepQcvMdk0kyf0Atwgb9QXUkM/Tr1d6k5RZ5Sdwb5/SL2BXfSQ6qyK+r9fg2
9pOt+gFk5m55hdqda/ovSc2DclE26mfSgU/j+/hHv5iqvCHXj3XH3jOENDxk
VoxNsfd0pBpvmt3E97HXDCUtD5sVZ3PsIZ2ozltmDTgVe8Aw0vGIWTJb4jnR
mRq8bdaQH+K+GU56HjUrwda4N1KoyXyzRrGvcS/EAcvAY2Yl2Rb3QhdqkZHH
zUuxPdZNV2qTiVnmpdkRa6QbdchMFrKSjezkICdP+HwZdsY66U5d3jFrzE/x
3BhJLp40K8uuWCc9+EzuwL9xrqjHu3KTeOfiOTKKlXKPpP9/h3xFbp6Sb2R3
3Bsb9H1Ix63y52pHzsf5oT7vyU35JZ452/QDyRLnQl4VP0uCE4xjmfk+dRi/
cUO8B0yJ8xjZ9afVcrF/7JEPqaP4nVnyRrVvfC/pOcl4/uS2+J2gdopnxgX5
mDqGP1gi7453npxxHpgU76P5+2qzOL/6I+q9zNdvVweRNWby6vgeUrFc3q8O
J0+Qn1HLszf2lU36fmTgdnmp2pmLcZ5owAdyc07HnjOaNfF5klgh5+VZfQX2
xTtAzzivcgqX4h2gIR/KLeIZxzvAGPLxnFlF9see04tGfGTWMp5x7Ctjyc/z
ZpU4EPtCbxpTgBfMK3Mw7pk+NKEgL5pX4VCsmb40pRCFKUJRilGcZEpQkpf8
XFUOx3rpRzNKMdu8GkdibeRJ42+D2pwF5q04E3vJOEozx6w6R2PN9KcFC81a
x3sRz5/xlGGuWQ2OxX0wgJYsMmsT71k8XyZQlnlmNTkea2dgnCu5C5fj7NCK
xXJbzsbzZod+MNmYKK9Ve5KalfIBdQR5OcVUzsU5de0/lEcC2w==
             "]]}, Annotation[#, "Charting`Private`Tag$18478#2"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.7639713333333333, 0.5021279999999999, 0.7900726666666666]], 
            LineBox[CompressedData["
1:eJwV0mWUVmUUgNFLCRISSjcYIChISYdIqYDSqXR3dykC0mWDlEhLl1g0iNLd
SHd37ffHnue793xr1ppzJnOj9lXaxYiiKIMfd2JG0b5YUTSdHlSnMG9wgeUM
pwUVuev7+3UGPalBEbJxz+yA/kwvalKU7Nw3O6gz6U0tivEmD8wO6S/0oTbF
ycFDs8M6i77UoQQ5eWR2RGfTj7qU5C0emx3VOfSnHqV4mydmx3QuA6jPe+Ti
qdkzIp9jEJNYxCYOLxCXeLxIfBKQkES8RGKSkJRkvMwrHGceA/mU0uQmOSeY
zyA+433e4SIrGEFLKpGCkyzgcxpQhhv8wXg6kIdLrGQkrahMSk7xK1/QkLLc
5E8m0JG8XGYVo2gdds5mJvExd1jLN3QJ++MfppCK/1nI4LDP2FH0nzYKN2cj
P4S9er9Ly3GLv8JevZsYdq87tFO4G1vDnr37KdxB94Rdaz69wupwF8+jw+10
e7iJtgn/E2wJt/I8OdxSd4d76Sd6l3Xhnp6/DTfXndqVZ2xjKqk5zSK+pDEP
2cSPlOc2f/M1ncnPVX5jDG2pwj3W8x3dSMMZFjOEJlSgANdYw1jaUZW0nGUJ
Q2nKB7xLOs6xlGE040MKkp4MZCQTmclCMn9zVn2V1zjPMr6iOR9RiOv8zjja
U437bOB7uhP5Xf/qNOL5vFeT6uv6HLd7kB4=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$18478#2"]& ]}}], {}}}, {
     PlotRange -> {All, {-15, 190}}, PlotRangePadding -> {Automatic, {
         Scaled[0.03], 
         Scaled[0.1]}}, FrameLabel -> {
        FormBox["\"time (d)\"", TraditionalForm], 
        FormBox["\"number infected\"", TraditionalForm]}, PlotLabel -> 
      FormBox["\"Parameter sensitivity\"", TraditionalForm], Epilog -> {
        InsetBox[
         BoxData[
          FormBox[
           InterpretationBox[
           "\"scale factor = \\!\\(\\*FormBox[TagBox[FormBox[\\\"0.1`\\\", \
TraditionalForm], TraditionalForm, Rule[Editable, True]], TraditionalForm]\\)\
\"", 
            StringForm["scale factor = ``", 
             TraditionalForm[0.1]], Editable -> False], TraditionalForm]], 
         Scaled[{0.05, 0.95}], {-1, 1}]}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 96.}, {0, 178.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    TagBox[
     GridBox[{{
        TemplateBox[{"\"observed\""}, "PointLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                
                TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                 "RGBColorSwatchTemplate"], "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
        TemplateBox[{"\"calculated\""}, "LineLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                
                TemplateBox[<|
                 "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                 "RGBColorSwatchTemplate"], "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
        TemplateBox[{"\"negative sensitivity\""}, "SwatchLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.963406, 0.7292673333333333, 0.3333333333333333], 
                    Opacity[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"Opacity", "[", 
                  RowBox[{"0.5`", ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.963406, 0.7292673333333333, 0.3333333333333333]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
        TemplateBox[{"\"positive sensitivity\""}, "SwatchLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7639713333333333, 0.5021279999999999, 
                    0.7900726666666666], 
                    Opacity[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"Opacity", "[", 
                  RowBox[{"0.5`", ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7639713333333333, 0.5021279999999999, 
                    0.7900726666666666]|>, "RGBColorSwatchTemplate"]}], "]"}],
                 "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 1}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", #2, ",", "Right", ",", 
        RowBox[{"{", "}"}]}], "]"}]& )]}, {2,"\[Zeta]"->
  TemplateBox[{
    GraphicsBox[{{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{0., 4.}, {8., 9.}, {16., 13.}, {24., 17.}, {32., 23.}, {
           40., 41.}, {48., 74.}, {56., 112.}, {64., 133.}, {72., 159.}, {80.,
            164.}, {88., 166.}, {96., 178.}}]}}}, {{}, {}}}, {
       GraphicsComplexBox[CompressedData["
1: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
P5iTkGwZQgeTjZ6ZTNQefq5nwvamw3xS69J81P/k+dHfm2Po8FUoQeUmul4q
b1ZbFUEHsfclXsmorbXtu29zIB30S4iKBnS/vkC6QnYCHQpnSQv6o+vTvt1x
WHhzw0kn7FubZXpq/+vb1A28k13DfNi37KzHDyYLZmHfxrTEBKqVz8G+rT7S
eG1y7bwZ3wZ9qFTwEcW+PUfpWWskIIF9Gy0beoTv4yLs26qfMrM0ZKSxb7MF
Dp2+EymLfdvg5mpd9FYO+/at7CbHEU1F7NtawxtskUol7NuyoNzuz72rsW+L
L9ZYHNy+Dvt2R6JkZR13A/ath6Lvyw+zNLBvK6ubxVL2a2LfRm0ozTkSoI19
q5FRu/1Uog72rfqr2t80/23Yt1qBY29c7fSxb4WyIIIRZYh9mycisDxFyxj7
VmZ20cqPw6bYt/OX/hmN7d6Jfbv/yWVOpqsV9u0WD0kxmr8N9i3wHU2ORXEz
7dvapuUOOhkE9u1zV4tYicpd2Lfj75nzwuTtsW9FJTSDL7EcsG9/qyhP+ifv
wb7V83XV7T3mjH3Lfynd1SDWBfu2p017sva2K/ZtXeLAlc1XWNi3yemFVkJu
bOzbngwffa0VHOzbJGuz9Q23ONi3uRFmh86LzNSPd0dV1klRZ3zrlM5vOak/
49sVq7wT90mR2LeqBfMbudUz9eMug4KXl5BHpn17/0XhHMMSNvZtL1ONShVh
Y9/erszQH9NgYd/6C/N6f32mgPxEceKElhAsL1uXn2oogL0an2Ij0jebjb3K
FPE5a1zHxl7V0QwU3u/OwV61q9ELedfBwV5lHZdL3KMyUy9O+vr1S5HRTL34
iePEtWMaJK4XL1F+2isxzIEgrc5AhtouKJbONJ51gQNp/g5H+PJ3QcSRjMdh
82fqyf7MDfIi11nYuxyrnxq73SnQ+eODS+BvAXhInfidHceP/brdRsrt0CsW
9muXQMAb8gob+zW5z+BTpCkH+zU39PJ9WzTf037dIb7Q/NDymfpxVrvXowLD
mfqxiWfLunu6M/Vjw5rYdQOCyOe/L9vriu8C/0A+EWo2B15f4spsP7cLQso8
D1/VmKkvW7noiv5qYoF01SHDH2dHqQ1nRoWTuXzYs4oiLaYxf9jYs9dW9vl9
OcPBnnUVzB6GvxxcT54TqxSspz1TT24+qfVWEc0/w6K2frsNExIpUR6sVej6
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
35ZHv+f/bW8z8zkWhtqTDy5Gr/7/tP8PV5jRrw==
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[0.963406, 0.7292673333333333, 0.3333333333333333]], 
           GraphicsGroupBox[{
             
             PolygonBox[{{741, 290, 291, 292, 293, 294, 295, 445, 402, 367, 
              340, 320, 308, 453, 410, 375, 348, 328, 460, 417, 382, 355, 468,
               425, 390, 476, 433, 484, 296, 50, 246, 192, 237, 147, 184, 229,
               110, 138, 175, 220, 82, 102, 130, 167, 212, 62, 74, 94, 122, 
              159, 204, 49, 48, 47, 46, 61, 73, 93, 121, 158, 203, 45, 60, 72,
               92, 120, 157, 202, 44, 739, 742}}]}]}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[0.963406, 0.7292673333333333, 0.3333333333333333]], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwl1VVsFwYQB+AWLVrcrcjGYILrgNEiQYo72YAOd3cGHTDooMWK64brcB8M
GRo8RQMU3ZBsaJDp908fvvwe7p4uubuwqH7N+iYLCgoK5sfgpDxEPP1oTg3K
EuhLTgpSkorUhJCGtKQjPRnISCiZyEwWspKN7OQgJ7nITR7yko/8FKAghQij
MEUoymFm058WfEE5inGEOQygJTUpzxmWMYoONOADjjKXgbQinAqc5QdG05GG
fMivzGMQrYkggTWMpxsVOReYKWPoRCTX2MAkelGcY8xnMG24yWamUIvLrGUC
3anEeZbzDVEkso04GnGdjUzmEfvpzT12MoOnHOQjjrOAPxjCQ/bQllts4TlT
eczPvKI2V1jHMybyO/t4SQ/usoMXTOcJB3hNZS6wgj8Zy2/s5WvusJ1pNOYG
m4ihD/fZxUxKcIKFDKUdt9lKLHW4ynq+oydVuMhKxtGZJpTkJIsYRnvqUpVL
rCKaLjQNzMtyPKCsBapBc/oyg/2EUYbqNKMP09lHIerSnqHM5yilqUZTejON
vRSkDu0YwjyOUIqOjGIJJ/mccSznLE3oRRx7KMBE1nCJKDZylTEs4zS1+Ynr
fMtKztOW9VxmMDeZy2E+4x6bucF4ElnFBTpwhw1cYSS3WMwJqnKXTVxjLLeD
k+7UGRqzjgR6Estu8jOB1VykE6NZyilqEc0KztGGQczhEJ/yFSNYxHGq0Ige
TGUX+YigNQOZzS98wpcMZyHHqEwk3ZnCTvISTisGEM9BPqYSDenG9+wgDzVp
SX9mcYCSVKQBXYlhO7kpQQXq04XJbCMXOclBdrKRlSxkJhOhZCQD6UlHWtIQ
QmpSkZIUJCcZwQQeyX/iX/7hb/7iPe94G7g7espTj85MYitv1P4H6k3KAw==

              "]]}]}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[
            0.7639713333333333, 0.5021279999999999, 0.7900726666666666]], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwl1VOMHkAQAOC/dq+2rsZTbdu27V5tu6mbuk1tu6lTI7Vt29Z37cO3m+xO
MpPdzWxws5BqncIGAoEwDDc8Yo2FgdQhH2lJyA7G0pLSZOWx+LXmQdQlP+lI
xBN7T3nGc17wkle85g1vecd7PvCRT3zmC1/5xnd+8JNf/OZPaNHyhCEs4QhP
BCISichEISrrGEw9CpCexERjPUOoT0EykISdjKMVZchGdDYwlAYUIiNJ2cV4
WlOW7MRgI8NoSGEycYCphF5AFZKxmwm0oRw5iMkmhtOIImTmINMIoSrJ2cNE
2lKek8yjNzk5wky6UoMzLKQfQWxmBI05zxKKcoK59OQyK8jCIaZzg85cZBnV
OM0CbtOXq6ziHinYyySu044LLOUOFTjFfG7Rhyus5C65OMosbtKNSyynJmdZ
xEMehJ6Pp9KSISzjAvkpTX16MZfjZKEKLRjMUs6Tj3aMZDVXKcV4NnGHevRk
DsfIzBS285COjGEdN6jMRLZwj+bs5AmDeMMSzpGXT+zlBZN4z1bu05YP7OIp
I3jLKq5Qko/s4TnjeMdGblOXHTymB6+ZzVEysY+XTGYbD+jAbp4xmrVcpxIT
2MxdmjGQxZwlD21Cew4ruUwJxrKBW9ShO7M4QkbaM4o1XKMiTRnAIs6Qm9YM
YwWXKE5tujGTw2SgAk3oz0JOk4ti1KIrMzhEesrTmH4s4BQ5KUpNujCdg6Qj
B0WoQWemcYC0pCE1waQiJSlITjKSkoTEJCIhCYhPPOISh9jEIoiYxCA60YhK
FCITiYhEIDzhAv/aZyA7halOCFPZH/j/J/wF1l3GmA==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[
            0.7639713333333333, 0.5021279999999999, 0.7900726666666666]], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwV0bsrBAAABvDjL/BeOVb3YEFh8AqFOsWCOLLgpE64WAwet3GDomMwGAwW
j9ucQeEsyqJMHqPV7Gf49fVtX33B+GIsURwIBIpI8qnUyyeyrDJGL62EKHDM
GuP00UaYCFEaeOaEFBP0084rZ2wyS4x3LkiT4JscGX7I80sjVTZ+cM4bG5zy
wijLHPFIC0MskOGOOqL0MEOaHJVUUEuEbqbZ5YZygoTpIs4O15TRzCDz7JOn
hhCdTLHNFaWMkOSQB5oYYI49bqlmmCUOuP//hxWyFOhgki0uKWGdL/4A1RQ3
qg==
              "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.365248, 0.427802, 0.758297]], 
            LineBox[CompressedData["
1:eJwV00NwGAAABMDUtt3Utm0ztdvUtm3btm3btt3U9vTZzWPn7n0zFxjcPahb
mICAgH+E5knm0J06lCQvYQlHeCIQkUhEJgpRiUZ0YhCTWMQmDnGJR3wSkJBE
JCYJSUlGclKQklSkJpA0pCUdp5hLD+pSinyk5zTz6Ek9SpOfq6xgMC2oSgbO
MJ9e1KcMBbjGSobQkmpk5CwL6E0DynKXDYymPQW5ziqG0orqPGQL4+lMJs6x
kD405Ck7mEw57rGRMXSgEDdYzTCCecFuplGDR2xlAh84QhdC2MdMPnOczJxn
EV/py1sO0ohn7OQHU/jIUX5Tnvts4jtjec9hftGRV+zlJzP4xDH+UJibrOEb
w3nHIVrzkj1MpyaP2cZEuvKa/cwiCxdYTD8a85xdTKUCD9jMODpRhFusZQRt
qEVWLrKE/jShIkW5zTpG0pbaoXs5RwjZ9EssZQBNqUQxsnOZZQykGZUpTg5y
kovcXGE5g2hOFUpwh/WMoh1BPGE7k+jGGw4wmy+c4C95+A9lfHsm
             "]]}, Annotation[#, "Charting`Private`Tag$18597#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.963406, 0.7292673333333333, 0.3333333333333333]], 
            LineBox[CompressedData["
1:eJwV00NwWAEUBdCf1LaZ2rZtpnabmqndprZt27Zt21x3WeN0cebOm3u3Lywi
MrxfSBAEX/jKAcdUulCb4uTmm+47P/jJL37zh78ENiGEEo3oxCAmsYhNHOIS
j/gkICGJSEwSkpKM5KQgJalIzUGm0ZU6lCAPaTjEdLpRl5Lk5QwL6U8zKpOW
w8ygO/UoRT7OsogBNKcK6TjCTHpQn9JcYSXDaUd+zrGYgbSgKuk5yix60oAy
XGUVI2hPAc6zhEG05C6bGE81brCW0XTiAVuZRAaOMZtePGYHDbnNBt4SxXP2
8IGyXGM1bxjJU3bxng7cZwvvmMhL9vGRglxgKa8ZzBN20op7bGYCL9hLdW6y
jjE8YzcRPGQbk8nIcebQm0bcYSPjKMd11jCKjhTiIssYQmtqkIkTzKUPjSlP
YS6xnKG0oSaZOck8+hJOBYoQxinm8/+BmlCRonwODYIsMivZyE4OcnKaBUTS
lEoU4zIrGEZbanGL9YylM4/YzhResZ9P5OIfMjVzPA==
             "]]}, Annotation[#, "Charting`Private`Tag$18597#2"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.7639713333333333, 0.5021279999999999, 0.7900726666666666]], 
            LineBox[CompressedData["
1:eJwVznPUFwYUBuBftpbdV21h2bZb+jKWje/LtrfstmxzuZZrC1u2O9m2nv54
znvPufec9wY1DQ0OCRMIBL5y27AybCDQnzoUIC0J2cooWlCW7Nxxv0oOoC4F
+ZFE3LW7x30e8JBHPOYJT3nGc17wkle85g1vecd7PvCRT3zmC1+/P60nDGEJ
R3giEJFIRCYKUVnNQOpRiJ9ITDTWMIj6FCYdSdjGaFpSjhxEZy2DaUAR0pOU
7YyhFeXJSQzWMYRfKUoG9jKZEKqSjB2MpTUVyEVM1jOUhhQjI/uYQijVSM7f
jKMNFTnKbHqSm4NMpzM1OMY8+hCLvxhGI06ykOIcZibdOctSfmY/U7lER06z
mGD+Zy5X6c15lnODFOxkPBdpyykWcY1f+I85XKEX51jGdfLwD39wmS6cYQk1
Oc58btGX2GxgOI0pwRFm0YNMHGAanahOSnYxgXZUIi//8iddqUUcNjKCJpQk
M6nYzUTaU5l8/MAmRtKUUmQhiLhs5jeaUZqspCYe8dnC7zSnDNlIwx4m0YEq
5OcQM+hGbU6wgH5cYAU3ScA3ByCDMw==
             "]]}, 
           Annotation[#, "Charting`Private`Tag$18597#2"]& ]}}], {}}}, {
     PlotRange -> {All, {-15, 190}}, PlotRangePadding -> {Automatic, {
         Scaled[0.03], 
         Scaled[0.1]}}, FrameLabel -> {
        FormBox["\"time (d)\"", TraditionalForm], 
        FormBox["\"number infected\"", TraditionalForm]}, PlotLabel -> 
      FormBox["\"Parameter sensitivity\"", TraditionalForm], Epilog -> {
        InsetBox[
         BoxData[
          FormBox[
           InterpretationBox[
           "\"scale factor = \\!\\(\\*FormBox[TagBox[FormBox[\\\"1\\\", \
TraditionalForm], TraditionalForm, Rule[Editable, True]], TraditionalForm]\\)\
\"", 
            StringForm["scale factor = ``", 
             TraditionalForm[1]], Editable -> False], TraditionalForm]], 
         Scaled[{0.05, 0.95}], {-1, 1}]}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 96.}, {0, 178.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    TagBox[
     GridBox[{{
        TemplateBox[{"\"observed\""}, "PointLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                
                TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                 "RGBColorSwatchTemplate"], "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
        TemplateBox[{"\"calculated\""}, "LineLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                
                TemplateBox[<|
                 "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                 "RGBColorSwatchTemplate"], "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
        TemplateBox[{"\"negative sensitivity\""}, "SwatchLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.963406, 0.7292673333333333, 0.3333333333333333], 
                    Opacity[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"Opacity", "[", 
                  RowBox[{"0.5`", ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.963406, 0.7292673333333333, 0.3333333333333333]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
        TemplateBox[{"\"positive sensitivity\""}, "SwatchLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7639713333333333, 0.5021279999999999, 
                    0.7900726666666666], 
                    Opacity[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"Opacity", "[", 
                  RowBox[{"0.5`", ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7639713333333333, 0.5021279999999999, 
                    0.7900726666666666]|>, "RGBColorSwatchTemplate"]}], "]"}],
                 "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 1}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", #2, ",", "Right", ",", 
        RowBox[{"{", "}"}]}], "]"}]& )]}, {3,"\[Lambda]"->
  TemplateBox[{
    GraphicsBox[{{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          PointBox[{{0., 4.}, {8., 9.}, {16., 13.}, {24., 17.}, {32., 23.}, {
           40., 41.}, {48., 74.}, {56., 112.}, {64., 133.}, {72., 159.}, {80.,
            164.}, {88., 166.}, {96., 178.}}]}}}, {{}, {}}}, {
       GraphicsComplexBox[CompressedData["
1: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
7069eO4YOzr271ExqdcCb+jYv7aUmo1r1jOwf614Ew72HmRg/x6/4lvrhuJH
tkKSzjtBhTyjjQtduxhQTv7DeOJnDQle1qdbeRhQFuL6xGvaGngGe7UGb9Gx
l2MlRee+a9Oxf3WzrrxJWUPH/j1w2JV6J5mO/as7x8+6NUfH/lXMcm3l0mZA
DvfI43PbqbDUmPayB42H+cm+JbcMzVeSpcAVNN6bewtStTSsITZxLHEGvQ9d
uHvzrjIU3wbcPyPf07Gfy8w67t4fcgTy5ZdKey9RICPfJzpOFXm6QNchbiWa
v7o2+1i0XzjI5i79fZUKKXNvzy2g+HGacwqXFrMG0XiRQ23ofuUlHfbfX1Fg
lXHYguc+BmykZUieolDh60RIbjOaL+9bIpfoHVQY1LzSr4quc/x8LORNTHKa
I3w//lUlngudB2JrcnlQ/ND2NueKRFGh93O8xRiKH00lsqVuFZqfB82fJvai
fKNsNHxmPxXk9qVbZaD+mR2J58/LUWH/9LOsEyh+GDyRXk05VKjctmRbNMrf
TienjE8wqdDyJdHD6b/19n+93OXOVTIX6AjUlt7AjcepYJJapvsE/d5QPJXg
302FsXTmMSt0f0PV8JigJBU2fLVYloLGU8c2LeY5hM4DLb0W+ej6Kf2xSF4z
Kuxlzdi8QG2+H/s2Lt9ChZIPgTv00fzwXLvZv3AYrQ/tVcvHUZvj5bTNCj5s
Z0fs5ZbkJZaPl3Jh76rVPk/akO6IvbvyqLWJtw0de3eu0sDp5Cs69q7tlONN
NZQvON51+LeHyxvFA8e7J3KbhS+g5wvs1Hy5aowKocKZPaEonnr4imNu+FjD
yzTu7NlFDOB6+5b7yCSKX3ZdtUc+Hfv4FJfiAd49dOzdBlii5S9Ox979t8PJ
620SHXs3TTl3P3OWjr3bklX1i4bWy97Zxas91dF+kJBZ9giNR/7ser3bJVS4
UdSd8w+N92L582WG26xhYZ/liQ6UzyNrUoh1JdZQ7DuiPYz2a46XpU3v+5r+
dIRS670vjOIo8Eszd189ymdV2eQH3iuowOXktccAxa9Undex0QQqcDeHqP7X
Ng8J/6G8yhoGxo3PXdrKgAtNBjNjLRQI+KKTNIjyWwWp9IgLQYVm/gD7/84n
qqbvFru2U+G1QhpXCYpfjpfT/z5MZaD8Enl0NspvngIS2WGBOSjeJAYurhU/
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
L5/8f9v/B4Dp1Ts=
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[0.963406, 0.7292673333333333, 0.3333333333333333]], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwl1VNwGGgQAOCktu3UxtW2ndptaiW1bdu2bdu2lRRntndzvvsyffj2n53d
2bfdPygkLDg0SkBAQCBfCuGSA94pdKIGRcjF73r+4E/+4m/+4V/+C/g8JJAo
RCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6cnAQabSmZoU
JTenmU8YjShPRg4xjS7Uohh5OMMC+tCYCmTiMNPpSm2Kk5ezLKQvTahIEEeY
QTfqUIIrrGAIrcnHORbRj6bcYxPjqMQN1jCC9mTmKDPpTl3usIExlOQqKxnK
M3bRhgdsYQIv2Ut+zrOYN/TnKTt5RzPus5kIxvOCPXygMjdZSzgjec5u3tOB
R2zjLZN4xT6ycIxZ9OAJO6jHXTYyllJcYxXDaMtDtjKRAlxgCQNoThVusY5R
hJCV48ymJ/UpzXVWM5x2FOQiSxlIC6qSjRPMoRcNKEMhLrGMQbSkGtk5yVx6
05CyfEEOTjGPUIIpR2Eus5zBtKI6t1nPaDrymO1M5jX7Az/vb87I+VbxN87w
PfM5wntCmcZuXhBMF8axmQeUoxZtGcZqblCIghQgP2WpSRuGsorr5KMMNWjN
EFZyjbw0pDNj2cR9SlOdVgxmBVfJQwM6MYaN3KMUPZjEdp5QjZns4zUtGcRy
rpCbeRzmHb2Zyi6eU5/ZHCCcjhyLvIuM5kc2cJeS/MopvmUOv3CQCLrzkeN8
xUR+YhuPqconTvINM/iZvbyiBUf5wEB+YBmXycVpvmMuh3hLL07wNVPYyTPq
MYv9vCGEUaznDiXoxgS28ogqTGcPL2nOAJZyiZz0ZDI7eEpdOjCSddymOF0Z
zxYeUplm9GcJF8lBHdozgrXcohiVaEo/FnOB7NSmHcNZw02KUpEm9GUR58lG
ESrQmD4s5BxZyUJmgshERjKQnnSkJQ2pSUVKUpCcZCQlCYlJREISEJ94xCUO
sYlFTGIQnWhEJfIfLkx5GhHGAs4Sofg/QHLsgQ==
              "]]}]}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[0.963406, 0.7292673333333333, 0.3333333333333333]], 
           GraphicsGroupBox[{
             PolygonBox[{{1, 735, 738, 737, 247}}]}]}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[
            0.7639713333333333, 0.5021279999999999, 0.7900726666666666]], 
           GraphicsGroupBox[{
             PolygonBox[{{488, 736, 735, 1}}]}]}, {
           EdgeForm[], 
           Directive[
            Opacity[0.5], 
            RGBColor[
            0.7639713333333333, 0.5021279999999999, 0.7900726666666666]], 
           GraphicsGroupBox[{
             PolygonBox[CompressedData["
1:eJwl1VOQGEgUBdCZ2LYntm2bEzuZmBPbtm3bdrKxba83dtY4U/txul5XdfXf
uzcoJDS4e7iAgIBA3jieuXxjnkModSlFPsLehScCEYlEZKIQlWhEJwYxiUVs
4hCXeMQnAQlJRGKSkJRkJCcFKUlFatIQRFrSkZ6TzKUH9ShNfjJwinn0pD5l
KMAVVjCYllQjI6eZTy8aUJaCXGUlQ2hFdTJxhgX0piHluMMGRtOBQlxjFUNp
TQ0esIXxdCEzZ1lIHxrxhB1Mpjx32cgYOlKY66xmGCE8ZzfTqMlDtjKBFxyh
K9+zj5m85jhZOMci3tKXnzhIY56ykw9M4SVH+UwF7rGJ94zlFw7ziU58x14+
MoNXHOMLRbjBGt4xnJ85RBu+ZQ/TqcUjtjGRbvzAfmaRlfMsph9NeMYuplKR
+2xmHJ0pyk3WMoK21CYbF1hCf5pSiWLcYh0jaUcdsnORpQygGZUpTg4usYyB
NKcKJchJLnKTh8ssZxAtqEpJbrOeUbQnmMdsZxLd+ZEDzOYNJ/hKXpJa3qds
4A6DWcEVGtCbBZyhCDXozHSOkIE8VCCE8ewhCYlJREISEJ/05KY8rRnHbuKR
jlyUoxVj2UVcClOdTkzjMGkJJpQ5YflETsrSkjHsJA716cV8TlOIanRkKocI
og5hwTebE+SgL4s4RxlaMJodxGYQy7lMPdZwg57cZx6nKMhj1nGL/jxgCReo
yiNWcY0O3GUKB0nDE9ZzmwE8ZCkXqc1qrtONe8ziONlZy036sJCzlGYlV2nO
KLYTi4Es4xJ16cFcTlKAfizmPFVoz2QOkJpadGUmx8hGKZoxkm3EJD+Vacck
9pOKmnRhBkfJSkmaMoKtxCAflWjLRPaRkiyUoAnD2UJ08lKRNkxgLynITHEa
M4zNRCM5mShGI4ayiahEITKRiEgEwhOOQMLK8V/9+Q9/8xd/8ge/8xu/8pUv
fOYTH/nAe97xNvD/Hn7NK17ygmT+z0hRGjKEjTznP9bH84U=
              "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.365248, 0.427802, 0.758297]], 
            LineBox[CompressedData["
1:eJwVyVOQFgAAhdE/23abbdvmZtdm27Zt27Zt27aN6bHTw5nvztygkK7BXUIF
AoG//O/T0IHAC47bs+hKLYqTG1cgDGEJR3giEJFIRCYKUYlGdGIQk1jEJg5x
iUd8EpCQRCQmCUlJRnJSkJIgUpGaNJxgNt2oTQnykJaTzKE7dShJXi6zjIE0
ozLpOMVcelCXUuTjCssZRHOqkJ7TzKMn9SjNbdYxkrbk5yorGEwLqnKfTYyl
Ixk4w3x6UZ/HbGMiZbjDekbRjgJcYyVDCOEZO5lCNR6wmXG85xCdeMkepvOJ
o2TkLAv4Qm/esJ8GPGE735nEBw7zi7LcZQPfGM07DvKT9rxgNz+YxkeO8JuC
XGcVXxnKWw7QkufsYirVecgWxtOZV+xlBpk4x0L60JCn7GAy5bjHRsbQgULc
YDXDaEUNMnOeRfSlEeUpzE3WMJzW1CQLF1hMPxpTgSJk5SJL6E8TKlKUbGQn
Bzm5xFIG0JRKFOMWaxlBG4J5xFYm0IXX7GMmnznGH3LxD/Maex4=
             "]]}, Annotation[#, "Charting`Private`Tag$18716#1"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.963406, 0.7292673333333333, 0.3333333333333333]], 
            LineBox[CompressedData["
1:eJwV00NgFgAABeB/y7axlm3b5rJrmcv2sm3btm3btXjvkvF1+C7vvesLDY8I
6xsUCAS+8JWo4EDgoGAqnalJUXLxTf+dH/zkF7/5w18CNkEEE43oxCAmsYhN
HOISj/gkICGJSEwSkpKM5KQgJalITRrSko70ZCAjh5hGF2pRjNycYQERNKYC
IRxmOl2pTXHycJaF9KMJFcnEEWbQjTqUIC/nWER/mlKJUI4yk+7UpSRXWckw
2pCP8yxmAM24z2YmUJmbrGUUHcjMMWbRg3rcZSPjKMU1VjGc5+ymLQ/ZykRe
sY/8XGAJbxnIM3bxgeY8YAvviOQle/lEFW6xjihG84I9fKQjj9nOeybzmv1k
4Tiz6clTdlKfe2xiPKW5zmpG0I5HbGMSBbjIUgbRgqrcZj1jCCcrJ5hDLxpQ
hhusYSTtKcglljGYllQjGyeZS28aUpZCXGY5Q2hFdbJzinn0oRHlKEwOTjOf
/wcMozxFuMIKhtKaGtxhA2PpxBN2MIU3HOAzOfkH/qt18A==
             "]]}, Annotation[#, "Charting`Private`Tag$18716#2"]& ], 
          TagBox[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[
             0.7639713333333333, 0.5021279999999999, 0.7900726666666666]], 
            LineBox[CompressedData["
1:eJwVzkOMHQAABNC/tW1vbds2t7Zt27Zt27Ztu+mxtv16eMkkk0wmuEXXkC5B
gUDgG8+Ep6ECgfUMoi4FSUsinutf8JJXvOYNb3nHez7wkU985gtf+cZ3fvCT
X/zmD3//H7AfRChCE4awhCM8EYjIBgZTj0KkIzGR2MgQ6lOY9CRhN+NoSVly
EplNDKUBRchAUvYwnlaUIxdR2MwwGlKUjBxmGh2pSjL2MoHWlCc3UdnCcBpR
jEwcYTqdqEZy9jGRNlTgHAvpQx5OMJtu1OQiS+hPNLYygsZcYTnFOcN8enGD
1WTmKDO4S2eusZLqXGAxD+jHLdbymBTsZxJ3aMtVVvCQipxnEffpy03W8Ii8
nGQO9+jOdVZRi0ssZQDR2cZImlCCsyygN1k4xky6UINgDjCZdlQiH6eYSw9q
E4PtjKIpJcnKcWbRlRBScpAptKcy+YnJDkbTjFJkIxWx2MkYmlOa7KQmNnGI
Szzik4BdjKUFZchBGg4xlQ5UoQCnmUdP6nCZZQzkNut4QkL+AWFSfOk=
             "]]}, 
           Annotation[#, "Charting`Private`Tag$18716#2"]& ]}}], {}}}, {
     PlotRange -> {All, {-15, 190}}, PlotRangePadding -> {Automatic, {
         Scaled[0.03], 
         Scaled[0.1]}}, FrameLabel -> {
        FormBox["\"time (d)\"", TraditionalForm], 
        FormBox["\"number infected\"", TraditionalForm]}, PlotLabel -> 
      FormBox["\"Parameter sensitivity\"", TraditionalForm], Epilog -> {
        InsetBox[
         BoxData[
          FormBox[
           InterpretationBox[
           "\"scale factor = \\!\\(\\*FormBox[TagBox[FormBox[\\\"1\\\", \
TraditionalForm], TraditionalForm, Rule[Editable, True]], TraditionalForm]\\)\
\"", 
            StringForm["scale factor = ``", 
             TraditionalForm[1]], Editable -> False], TraditionalForm]], 
         Scaled[{0.05, 0.95}], {-1, 1}]}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {{0, 96.}, {0, 178.}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    TagBox[
     GridBox[{{
        TemplateBox[{"\"observed\""}, "PointLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                
                TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                 "RGBColorSwatchTemplate"], "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
        TemplateBox[{"\"calculated\""}, "LineLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                
                TemplateBox[<|
                 "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                 "RGBColorSwatchTemplate"], "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
        TemplateBox[{"\"negative sensitivity\""}, "SwatchLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.963406, 0.7292673333333333, 0.3333333333333333], 
                    Opacity[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"Opacity", "[", 
                  RowBox[{"0.5`", ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.963406, 0.7292673333333333, 0.3333333333333333]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
        TemplateBox[{"\"positive sensitivity\""}, "SwatchLegend", 
         DisplayFunction -> (StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.7639713333333333, 0.5021279999999999, 
                    0.7900726666666666], 
                    Opacity[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False]& ), 
         InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{"Opacity", "[", 
                  RowBox[{"0.5`", ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7639713333333333, 0.5021279999999999, 
                    0.7900726666666666]|>, "RGBColorSwatchTemplate"]}], "]"}],
                 "}"}], ",", 
              RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
   "Labeled",
   DisplayFunction->(GridBox[{{
       TagBox[
        ItemBox[
         PaneBox[
          TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
          BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
        "SkipImageSizeLevel"], 
       ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
     AutoDelete -> False, 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      BaselinePosition -> {1, 1}]& ),
   InterpretationFunction->(RowBox[{"Labeled", "[", 
      RowBox[{#, ",", #2, ",", "Right", ",", 
        RowBox[{"{", "}"}]}], "]"}]& )]}}, 1]], "Output",
 CellChangeTimes->{3.8773444478240223`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"4a6ce94d-3f2c-41ac-a948-212ed3388a74"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Otimiza\[CCedilla]\[ATilde]o por data, s\[OAcute] \[Beta]", \
"Subsubsection",
 CellChangeTimes->{{3.877277093955855*^9, 3.877277107510462*^9}, {
  3.877277190776156*^9, 
  3.8772771945815277`*^9}},ExpressionUUID->"8dc20b6a-5eed-4dc0-92da-\
8e7cc2f5da05"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsActualEquations3", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"modelSEIQR2", "[", "\"\<Equations\>\"", "]"}], "//.", 
      RowBox[{"KeyDrop", "[", 
       RowBox[{
        RowBox[{"modelSEIQR2", "[", "\"\<RateRules\>\"", "]"}], ",", 
        RowBox[{"{", "\[Beta]", "}"}]}], "]"}]}], ",", 
     RowBox[{"modelSEIQR2", "[", "\"\<InitialConditions\>\"", "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "[", 
  RowBox[{"List", " ", "/@", " ", "lsActualEquations3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"asol3", " ", "=", " ", 
   RowBox[{"ParametricNDSolve", "[", 
    RowBox[{"lsActualEquations3", ",", 
     RowBox[{"{", 
      RowBox[{"SP", ",", "EP", ",", "IP", ",", "QP", ",", " ", "RP"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "120"}], "}"}], ",", 
     RowBox[{"{", "\[Beta]", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.877122592716318*^9, 3.877122638431533*^9}, {
   3.877123036547823*^9, 3.8771230367517567`*^9}, 3.877123077692333*^9, {
   3.877123250327853*^9, 3.877123263565493*^9}, {3.8771233937911053`*^9, 
   3.8771234703145037`*^9}, {3.877123533724237*^9, 3.877123599721464*^9}, 
   3.877123783973798*^9, {3.877123926145467*^9, 3.877124021184037*^9}, {
   3.8771243634831457`*^9, 3.877124382281187*^9}, {3.8771244853565063`*^9, 
   3.87712448652693*^9}, {3.877127410103035*^9, 3.877127487870296*^9}, {
   3.8771275320180817`*^9, 3.877127652734055*^9}, {3.877127685243339*^9, 
   3.877127689499802*^9}, {3.877127763177825*^9, 3.877127763300035*^9}, {
   3.877205223114539*^9, 3.877205240670251*^9}, {3.877209245919945*^9, 
   3.8772092523715487`*^9}, {3.877270225370902*^9, 3.877270228883936*^9}, {
   3.877270363251059*^9, 3.8772703646336*^9}, 3.877275907504127*^9, {
   3.877277037856642*^9, 3.877277038172871*^9}, {3.87727715056645*^9, 
   3.877277156216812*^9}, {3.877277200047798*^9, 3.8772772196358852`*^9}, 
   3.877281256891391*^9, {3.877281654640579*^9, 3.877281654881942*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"7b7f9dc4-1e5a-402b-8023-87d55366fa25"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{
      RowBox[{
       SuperscriptBox["SP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"0.2`", " ", 
        RowBox[{"QP", "[", "t", "]"}]}], "-", 
       RowBox[{"0.00043506934624898484`", " ", "\[Beta]", " ", 
        RowBox[{"IP", "[", "t", "]"}], " ", 
        RowBox[{"SP", "[", "t", "]"}]}]}]}]},
    {"2", 
     RowBox[{
      RowBox[{
       SuperscriptBox["EP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", 
          RowBox[{"EP", "[", "t", "]"}]}], "13"]}], "+", 
       RowBox[{"0.00043506934624898484`", " ", "\[Beta]", " ", 
        RowBox[{"IP", "[", "t", "]"}], " ", 
        RowBox[{"SP", "[", "t", "]"}]}]}]}]},
    {"3", 
     RowBox[{
      RowBox[{
       SuperscriptBox["IP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"EP", "[", "t", "]"}], "13"], "-", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"IP", "[", "t", "]"}]}], "31"]}]}]},
    {"4", 
     RowBox[{
      RowBox[{
       SuperscriptBox["QP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"EP", "[", "t", "]"}], "13"], "-", 
       RowBox[{"0.32903225806451614`", " ", 
        RowBox[{"QP", "[", "t", "]"}]}]}]}]},
    {"5", 
     RowBox[{
      RowBox[{
       SuperscriptBox["RP", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"IP", "[", "t", "]"}]}], "31"], "+", 
       FractionBox[
        RowBox[{"4", " ", 
         RowBox[{"QP", "[", "t", "]"}]}], "31"]}]}]},
    {"6", 
     RowBox[{
      RowBox[{"SP", "[", "0", "]"}], "\[Equal]", "2286.4841580351476`"}]},
    {"7", 
     RowBox[{
      RowBox[{"EP", "[", "0", "]"}], "\[Equal]", "2"}]},
    {"8", 
     RowBox[{
      RowBox[{"IP", "[", "0", "]"}], "\[Equal]", "2"}]},
    {"9", 
     RowBox[{
      RowBox[{"QP", "[", "0", "]"}], "\[Equal]", "8"}]},
    {"10", 
     RowBox[{
      RowBox[{"RP", "[", "0", "]"}], "\[Equal]", "0"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 3 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8773444480779676`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"2b6601b9-3d7d-4b36-95ba-b06afb5405fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalInfectedOptimized2", " ", "=", " ", 
   RowBox[{
    RowBox[{"SmoothPeriod", "[", 
     RowBox[{
      RowBox[{"Accumulate", "[", 
       RowBox[{"TimeSeries", "[", 
        RowBox[{"confirmadosJoined", ",", " ", 
         RowBox[{"TemporalRegularity", "\[Rule]", "True"}]}], "]"}], "]"}], 
      ",", "maxInfectiousPeriod"}], "]"}], " ", "//", " ", "Normal"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"totalSusceptibleOptimized", " ", "=", " ", 
    RowBox[{
     RowBox[{"SmoothPeriod", "[", 
      RowBox[{
       RowBox[{"Accumulate", "[", 
        RowBox[{"TimeSeries", "[", 
         RowBox[{"expostosJoined", ",", " ", 
          RowBox[{"TemporalRegularity", "\[Rule]", "True"}]}], "]"}], "]"}], 
       ",", "maxInfectiousPeriod"}], "]"}], " ", "//", " ", "Normal"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"firstDateInfected2", " ", "=", " ", 
  RowBox[{"First", " ", "@", " ", 
   RowBox[{"First", "@", 
    RowBox[{"Normal", "[", "totalInfectedOptimized2", "]"}]}]}]}], "\n", 
 RowBox[{"lastDateInfected2", " ", "=", " ", 
  RowBox[{"First", " ", "@", "  ", 
   RowBox[{"Last", "@", " ", 
    RowBox[{
    "Normal", "[", "totalInfectedOptimized2", 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitInfectedData2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"toModelTime", "[", 
         RowBox[{"firstDateInfected2", ",", " ", "#1"}], "]"}], ",", " ", 
        "#2"}], "}"}], "&"}], " ", "@@@", " ", 
     RowBox[{"Normal", "[", "totalInfectedOptimized2", "]"}]}], " ", "//", 
    RowBox[{
     RowBox[{"Echo", "[", 
      RowBox[{"#", ",", " ", "\"\<\>\"", ",", " ", "Multicolumn"}], "]"}], 
     "&"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.8772772644257717`*^9, {3.8772799480476513`*^9, 3.877279978952421*^9}, {
   3.8772800165756903`*^9, 3.8772800344989643`*^9}, {3.877280682219274*^9, 
   3.8772806930515957`*^9}, {3.877280765233696*^9, 3.877280766674012*^9}, {
   3.877280826980981*^9, 3.877280827244809*^9}, {3.877280958151846*^9, 
   3.877280958503487*^9}, 3.8772814902743263`*^9, {3.877281611518664*^9, 
   3.877281614307255*^9}, {3.877281757776779*^9, 3.877281766169977*^9}, {
   3.877282653607985*^9, 3.877282660296579*^9}, {3.8772827111700563`*^9, 
   3.877282712087365*^9}, {3.8772828051134768`*^9, 3.877282811685254*^9}, {
   3.877285055696789*^9, 3.877285056560639*^9}, {3.8772861486212893`*^9, 
   3.877286171716298*^9}, {3.877286240337359*^9, 3.877286243966853*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"62fd9950-dd97-44d6-a196-5f1ee68f990a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 11 Aug 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "8", ",", "11", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 1 Sep 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "9", ",", "1", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 22 Sep 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "9", ",", "22", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "77"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 13 Oct 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "10", ",", "13", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "147"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 3 Nov 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "11", ",", "3", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "171"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877344448104247*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"4769b7ea-228d-48bf-9d94-5940b1e102c6"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 11 Aug 2022 00:00:00\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "8", ",", "11", ",", "0", ",", "0", ",", "0.`"}], 
         "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "3.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8773444481139727`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"862ca6d2-f1fe-4fec-8dcd-fb1bb7d67190"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Thu 3 Nov 2022 00:00:00\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2022", ",", "11", ",", "3", ",", "0", ",", "0", ",", "0.`"}], 
         "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
       RowBox[{"-", "3.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.8773444481187162`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"538adff9-a515-40f8-b1a9-063cb8c6a8d4"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"\"\>",
   "EchoLabel"], "  ", 
  TagBox[GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "8"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"42", ",", "77"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"84", ",", "171"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"21", ",", "23"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"63", ",", "147"}], "}"}], ""}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]}]], "Echo",
 CellChangeTimes->{
  3.877344448136714*^9},ExpressionUUID->"1b686964-0e50-4e09-aaad-\
e55311d42f7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"solution", " ", ":=", " ", 
   RowBox[{"ParametricNDSolve", "[", 
    RowBox[{"lsActualEquations3", ",", 
     RowBox[{"{", 
      RowBox[{"SP", ",", "EP", ",", "IP", ",", "QP", ",", " ", "RP"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"First", "@", 
        RowBox[{"First", "@", "fitInfectedData2"}]}], ",", 
       RowBox[{"First", "@", 
        RowBox[{"Last", "@", "fitInfectedData2"}]}]}], "}"}], ",", 
     RowBox[{"{", "\[Beta]", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"susceptible", ",", "infectedSol2"}], "}"}], "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SP", "[", "\[Beta]", "]"}], ",", 
      RowBox[{"IP", "[", "\[Beta]", "]"}]}], "}"}], " ", "/.", "solution"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"current", " ", "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{"totalInfectedOptimized2", ",", "5"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fitInfected2", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"toModelTime", "[", 
          RowBox[{
           RowBox[{"First", "@", 
            RowBox[{"First", "@", 
             RowBox[{"Normal", "[", "current", "]"}]}]}], ",", " ", "#1"}], 
          "]"}], ",", " ", "#2"}], "}"}], "&"}], " ", "@@@", " ", 
      RowBox[{"Normal", "[", "current", "]"}]}], ",", 
     RowBox[{"infectedSol2", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", "1"}], "}"}], "}"}], ",", "t", ",", " ", 
     RowBox[{"Method", "->", "\"\<QuasiNewton\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"fitInfected2", "[", "\"\<ParameterTable\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitInfected2", "[", "\"\<RSquared\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitInfected2", "[", "\"\<AdjustedRSquared\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitInfected2", "[", "\"\<BestFitParameters\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"fitWithDataPlot", "[", 
  RowBox[{"fitInfected2", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", "@", 
      RowBox[{"First", "@", 
       RowBox[{"Normal", "[", "current", "]"}]}]}], ",", 
     RowBox[{"First", "@", 
      RowBox[{"Last", "@", 
       RowBox[{"Normal", "[", "current", "]"}]}]}]}], "}"}]}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"residualsPlot", "[", "fitInfected2", "]"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", 
   RowBox[{"modelSensitivityPlot", "[", " ", 
    RowBox[{"infectedSol2", ",", "fitInfected2", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{"First", "@", "fitInfectedData2"}]}], ",", 
         RowBox[{"First", "@", 
          RowBox[{"Last", "@", "fitInfectedData2"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "15"}], ",", "180"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", "0.1", "}"}]}], "]"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"susceptible", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"SP", "[", 
     RowBox[{"N", "[", 
      RowBox[{"First", "@", 
       RowBox[{"Values", "[", 
        RowBox[{"fitInfected2", "[", "\"\<BestFitParameters\>\"", "]"}], 
        "]"}]}], "]"}], "]"}], "[", "105", "]"}], " ", "/.", 
   "solution"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.877280120063119*^9, 3.877280219997302*^9}, {
   3.877280450661528*^9, 3.8772804653679113`*^9}, {3.8772805022364283`*^9, 
   3.8772805096473627`*^9}, {3.877280562750038*^9, 3.877280569212263*^9}, {
   3.877280600521138*^9, 3.877280643514702*^9}, 3.87728079044492*^9, {
   3.8772810181952763`*^9, 3.877281030107567*^9}, {3.877281069680476*^9, 
   3.87728111094841*^9}, 3.8772811608764143`*^9, {3.877281194965629*^9, 
   3.877281215226529*^9}, {3.877281277540387*^9, 3.877281333006197*^9}, {
   3.877281497556361*^9, 3.8772815620587397`*^9}, {3.877282080558989*^9, 
   3.877282082429076*^9}, 3.877282749957728*^9, {3.8772827819479647`*^9, 
   3.877282785101429*^9}, {3.8772831562563257`*^9, 3.877283176088822*^9}, {
   3.877283759065111*^9, 3.8772838364864483`*^9}, {3.877283870631671*^9, 
   3.877283988474972*^9}, {3.877284022927299*^9, 3.877284042050109*^9}, 
   3.877284084457395*^9, {3.87728412557121*^9, 3.877284169903338*^9}, {
   3.8772842067820387`*^9, 3.877284228304268*^9}, {3.877284277649097*^9, 
   3.8772844864653254`*^9}, {3.877284526078319*^9, 3.87728453954685*^9}, {
   3.8772846457634687`*^9, 3.877284701411067*^9}, {3.877284745787464*^9, 
   3.877284753902651*^9}, {3.877284790068816*^9, 3.8772848024013777`*^9}, {
   3.877284838247696*^9, 3.8772848690108957`*^9}, {3.877284931941675*^9, 
   3.877284939851822*^9}, {3.877284976829702*^9, 3.877284983680586*^9}, {
   3.877285100183857*^9, 3.8772851003989763`*^9}, 3.8772854237814207`*^9, {
   3.877285999575379*^9, 3.877286029191778*^9}, 3.8772860779778643`*^9, {
   3.877286274963915*^9, 3.8772863564419518`*^9}, {3.877286387703965*^9, 
   3.87728643556627*^9}, {3.877286494428657*^9, 3.877286560782769*^9}, {
   3.8772867856530657`*^9, 3.8772868062889423`*^9}, {3.8772875308707848`*^9, 
   3.877287537229871*^9}, {3.8772876691720543`*^9, 3.877287688121462*^9}, {
   3.877287762651608*^9, 3.87728776323111*^9}, {3.877287888685925*^9, 
   3.877287901447564*^9}, {3.877288036461487*^9, 3.877288088921579*^9}, 
   3.877288130064123*^9, {3.877288237948928*^9, 3.877288313905249*^9}, {
   3.8772884237556963`*^9, 3.877288465175226*^9}, {3.877288507835643*^9, 
   3.877288522578973*^9}, {3.877288567519676*^9, 3.8772886030303097`*^9}, {
   3.877288651193512*^9, 3.877288805749464*^9}, {3.877288853694487*^9, 
   3.8772889818594837`*^9}, {3.8772890808090763`*^9, 3.877289081134226*^9}, {
   3.8772893734842587`*^9, 3.877289411915493*^9}, {3.877289470392968*^9, 
   3.877289537347624*^9}, {3.877289660968542*^9, 3.877289711435389*^9}, {
   3.877294658164549*^9, 3.877294720983747*^9}, 3.87729567302977*^9, {
   3.8772963512307873`*^9, 3.877296363093501*^9}, {3.877301231859166*^9, 
   3.8773012565776463`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"c8c6f027-7a94-4a35-817f-ebe8510b54ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 11 Aug 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "8", ",", "11", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 1 Sep 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "9", ",", "1", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 22 Sep 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "9", ",", "22", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "77"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 13 Oct 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "10", ",", "13", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "147"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{"\"Thu 3 Nov 2022 00:00:00\"", 
         StyleBox[
          RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
            StyleBox[
             RowBox[{"-", "3"}], NumberMarks -> False, StripOnInput -> 
             False]}], FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2022", ",", "11", ",", "3", ",", "0", ",", "0", ",", 
               "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", ",", 
           
           RowBox[{"-", "3.`"}]}], "]"}]},
      "DateObject",
      Editable->False], ",", "171"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877344448239367*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"dd0c68dc-40f2-4e94-a351-cc5f7adf3e1b"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit", "lstol", 
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the norm of the residual. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"", 2, 109, 7, 25422775249527722208, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877344448392023*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"f1336fe6-66e9-4dfe-95f9-6b88a60666e8"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", "\<\"t\
\[Hyphen]Statistic\"\>", "\<\"P\[Hyphen]Value\"\>"},
     {"\[Beta]", "0.6832281884249906`", "0.02124466624286065`", 
      "32.15998691693224`", "5.573058410051854`*^-6"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.877344448407022*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"571e8aed-dc73-452c-b60d-3692b29b8410"],

Cell[BoxData["0.9772620649874896`"], "Output",
 CellChangeTimes->{3.877344448412586*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"15585d20-5ee2-4d7d-b61d-c28a8afb4bb3"],

Cell[BoxData["0.971577581234362`"], "Output",
 CellChangeTimes->{3.877344448417626*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"f8c5087f-3bfd-4556-89ef-73ddbcbbafe2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Beta]", "\[Rule]", "0.6832281884249906`"}], "}"}]], "Output",
 CellChangeTimes->{3.877344448425521*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"6d05f258-310c-42d1-b3c5-36430437b710"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         PointBox[{{3.8691648*^9, 8.}, {3.8709792*^9, 23.}, {3.8727936*^9, 
          77.}, {3.874608*^9, 147.}, {3.8764224*^9, 171.}}]}}}, {{}, {}}}, {
      GraphicsComplexBox[CompressedData["
1:eJxFm3k81N/3x1VSyJZdIpKPpBCyFHPtTCFLkiUzZGbIGGUpWZOKoiJJK0mI
lDbtGlLZWrSoELK1kEq2KPM783h87/391eP1uHfu+5z7Pufc+352qAVw3IJm
CggI/JslIMD/1/uBYP7714OWmWdFXvJ4PMprOVVdlTeDli+/CHGCp6cpJ6sl
coNB18j8FP8RKICYy67NqABtb7VaL0V1JirWfSA8CjqH/m88L1oQrdp7doDy
dtAyPeF2YEnBHNR4Qv/5XtBPonLiBXRF0RXeyQPNoM/7fGKwKyWQkAC7b0HL
oKXR7kfx7dHzUeDDn4gO+l/7+TnBjrJI/CU1+hLoqfnawlveKqCHeZ6XhkHf
3doyt7FUGfUINyYZvxu0fHv71QmthEXI87GsbjLoL4tVA8v1F6MXlPkdT0H7
5EhfVlHURDmifQzp94OWe3gf95jeWYqaty065Afam+FwRvrtciR1XKyyALRa
ScaYjrI+yhdrvvUddP4t8/x3bwyQkbXdXYMPg5ZRTS6LhO6tQooNmTmJoLcr
/xAXcjFD4QO2Ug2gR5wVpY66WKBnjWXpEq2DlsOy2obi1pZo57/Pn7xB9yYq
rg54Y42WDr01Pgc6T3Po+/I9dsgpRkenH/TNljlWr0IdEXfDpkm9tkHLjO8B
3Kav65DpL+P6aNBjheuErpqvRzM6BrfVgL66bFbpQi83tCZI5M689kFL0XtH
FlzJ8kBxZR8E3EBnXYkXWVTviUStE9XPgPbY/HzM02UTyj/RYtMD2mathuzl
ah9UciBnttZHsK9nrc4Ko82I16STvx307mTvwIXbaMj3eeTq26C3NdUzGy7R
0Ry1oxWzOgYtO0eynmeNB6DbKwM1qaCNLw5KtiptQe0dp8wOg26eXRtzVC0I
ubSXarWCXsfz3OitwkB1uVvlF3UOWvolmrBy+hnoSNHMrq2gG3a0xt4/ykSN
zjPtK0GvVU552irGQvMqr1+eAj1LYjfX0Z2FToWt/mnXBfG5Psj4MZuF9Poj
V2aAlp28W1K9iYVMJuSkX4HO52a6eqiw0GGfw8+UPw1a3k612n7tBhMNxt9J
DQAdU95mEKrLREVWU/4VoPsbD6pv2MlAct8ymVOQH9vF8w5XK/Aoq0KP91hD
vHdnhSukHOdRksa6mtJBeyf+HPHRnoH2l9/a+wp0+rMehwiTWSistXyXEsT7
BXr2lrkTs1GSxJf2ANAVJ9JP2nkKo3Qz0UX/YD+Gr1Q+k97PQJdUb03Zgn8t
fVfbVKyZ6PKuZOlM0KIH0kq6W5godGbb5HvQhZQZSX+NWMgja4eLGvgnSfM9
9pbBQgxtL6kQ0J/7jkjPC2Yhwx+PC66A5v0bOP0MsVDvUvfwcdDirs5Vp4eY
qCpUo4wC/r5WlT86FcVEjjTvyDTQSy7E6s97z0C33RtnfQP/i6vT0+I4PEqK
pY+wPvhXOesTb9iIRxHz3bkyFrTMglPWX7gCaMfgDetq0PdOBrmtKJ6JRPYa
1cwBf/9FSDZorZyNfKjWW1xB14ZcMenfMReFifoUDoD/R3+hkLfuDGTmmyls
AP7ll7BM18sxUd6RmpgE0NLLZjk3VzLR6ZKh/Kegqy1bMm0Xw/sulE0UB3+e
FLsevbCZhZKa6pO8QNvJO8k8DGWhayFnQs6CttV0k0hwZiFxqZvVvaDTI1b+
fTqHhTR7N61ZAf4WGORFeucwkdKPtOko0Pn/zu16LchEkUlejfPAn33uf6x4
I9OULzmvH3iC9qIbJnpLCKCRI47Ms6ANl+Wdi8ybgUqD750SB/us3zEMBW8z
kEpP+3cv0E889H2GQ5no/har8vOgx1VrpL/8ZqI1vk89voG2ibwnMG3LQjuT
Pqgagn2tz4Q0O7ay0NrU/nOxoMfqDyXeCGChyoihVi7oB98LS+/psdBdq18q
ImDv50C/gt5XTLSzWfvbadDyEVvldS8yUNrcL66f4P05B1oOzqvgUXR0zE//
B/ZybG8Hn5XhUd6I2wRtB23jk+P07IgA+nHwesFt0F2eyX9UA2YiL+8/QdOg
J5aETsu/FkR1n38WO8D7G/yxq1Fj3lzU8Tu5vxve37WpQ16bTRlo966EI0vB
n8kHHsUvphko91S3ThTo5F0C94ouMNGN2InfVaCftvbt6VdgIZXyXrnZ4M9L
g3AvP8jXQ2eSb7uATspuXJML+bxNK+35MdDvbK8vCfNgofOCjJA20EqK7QsC
pVmoNW8kZQk/XwvtN9bB+nsqz1mH8uPXqmQlU4mJbI2iFAXB/j5K/s0eAR7l
8O6b651A96ZdW1ncwqPctZY9eQy0qXI/KzFwBlrg1vNxNtg3tUyhviWPgYJm
NES6gF6ZXvWD5cVENzkBtJOg02S+rH/ax0Qeus3Fn0DHixdOultA/qWV3NIG
+1z0Z+6ogvzz2pT3YTvoslu71xpCfkbpt1rcBh0jnSInacpCLqsKngqAvciI
qiH1iYm6cq10j4L2pLJednAZ6PPZyzeH4f1dmRbdu8mcR/noGRNtBvYqWFwb
fUyHfHzb6/SSb8+FV0XjOixkdcruszysr6nX1KweyEIRU5KOdNAC2+5UmEE8
/b50VaiY/3zaruphexYqbFwdL8s/70OSIgIgvi0v/dKmgQ4M/ayVZyyANNIe
zPgN68/W7zs8uY6FDuwQSTWH35+VqNtmBO/H4tbykBTQf4y72zMg/yREpC8U
gf3PnnL+E8hkoOGAsYl2sP9CruJvYdjvJLXLfeqw/tfLCetl5/Ioxl8uTrNB
z+M8ODQSI4DK2la63QD9n6LYj2Q0EwnYtt36A1qu/Gh+aqEgSqx86mgD8RcS
IrBU5d0cJPclZ38HxJ+j/JGX35cxUKHw6GsNsHehz8HJ+mEGkjm3fV846G3X
f8XWn2YiFBR/5i4/HwMWrIqG+Dmm3xQgAPbrxv39F+rJQjJC/h5rQUd3Hneq
Bf/Wz0lMyuTvH/v3oWUbWSgsoaqqBfQFrzy5XxC/N/5ZLlUDfy9mzZ52Kmci
k5PLGUzQ9Zly96Y0oH4f3sPlgf9bLS2e2IvyKN3RmicdwJ+ZsYk/ft7kURYu
jDXI5NcTsfkKWXYzkIfdeMIMsG/1geH2/UcZKPUIuk0FXRfJ/tjmxEQro4bv
HAP9aJFqKLsD4kXB0/UjaG76wW/mZiz0UezILE1+/e+9bhLIYqHO6tioMNAr
8/OtbjLhvJB8+fM6aE+4l80wZyGliskFf0GfSR03GPjMRNlxz10P8c9D0Wf/
9jYx0Po/932HwH6mZ/BgmQePorfu20Mj/vtrHV6ZQ+VRJB8Gjzfy4//ZMMVQ
i4XuqK4wkObvT4TLwX80FpoM/N7rC3pf+SvT+VCPXx0svl3Az9/IpDtr18J5
rglxD+sZrGqNdPs9Tck+FxDpA/qI8e/ACXUBVLHdqmwI1tcufTKa6chCM/7+
em0Cv49/o9dYAOvVqooIJYEeiPEZvQnPq/1+9uk5sP+o4EqP/84w0KLLH0r7
wP41mm9XfsngUd6vanLTgfUHHD7o/FjMoxRr/WsQht8nL8tvU/JloTlGRcoe
oO+1jqlawvtvb2VsnwvzPb3m1sT/mab8EKzeqgvjwY9EWZ9DwJ+fNeY7QE91
BLunbWGhBJt88XF4Xn3axdPBS3mUA/S5yyn8fN2Q5hIey6M0yvmfUob5Ac2c
GNkgFhrMMiwPAl1naHDCBNZbs215iyLMT/UJ0l8wMU2Z/1t9jRWMNzPvGeWA
Pd6a+5PLwL+TdNronRQG0jwS39QKz7PQPFKx5xuPon2acWAR/P5PL8ezeyaP
8uWNb+NW0OddJBe/CxNAaXuGl14DnbdPtPSH7kzkYdZEGweduYAWmpghiFoX
XleygvwSGzqp13x/DlrZvcirnX8/+cpgay1hoFWuFVHq8D6ijrG/3hxkoFfn
zQzCQKfLMH455DKRUCtl+23QRjbTn8olWejl74dzp0EXZfnc/wT128vMSd0R
/Jn+NG9pA/jDHYvZdBi0mop9aqwXC7nf+8Z6A/pFIlOyZAELFVxiTamAvwkF
uwIErzLR/PSI8S2gP32ITzTRZqLu+yLZ/8D/4e452/OleJT0Xx0Wdvzza/sl
engRj/JceIXAYdDmf3t++ZvMQOFotwsP/OmLLYlyy2AgpfdTmxzAPvaJSs89
Dkz0c8ddxlHQZedSNC63wn0wQ0GzjV9f65n56iYspPByz8XFYN+M819uFEA+
qY8FW4eCfjisPxwE+VbLa6i/yq/37AtRg3Ae8AY1n/wBnSEYKO44wERhYTI9
B8H+ktj55k6vGChF00ZvEOwXPxlQXgD1vPVJwRYDsNdF9k3HLwqP0mKg01QP
z/+svsa1ZgkLjXxS+yAJ69WfTu1/589C5rlt17z59fdD/zQb8sEqtiAzH/Rr
dsi9r1CvkXvzuDisJ1rVMfEC8stCeYHiJtBqj4R/zlEUQNGfBZMGYf1DJq8Z
z+A8WFPVF7MKfu+uOP+uHaw312PidTzoSO8PYXfpLHS2s9crD+y/QbFeqnue
gTzaaAk9YH+kjNTu3Wd5lOSrKeNLYX0rl5ElPxZAvfv2M3wO/F7G3TCyxpuF
qMHZ31xBdwitEN8O719y7pCtEMxfWrKR9ervNEX76Q2p5TDOOZ9uvAnyQXbJ
VdEo0MqHLMW2QL5c2/Zf9wg8L/Z63q+xlTyKYTu3eQ38ftPuk/3rwngUoQ9u
lkowP3SW/U51yEe9p+qxgaAPvOWOVMF64WdvXJSH+dJRrN/fRqcpzjfluikw
/r1rgXgo2GOo8Ez6Iv88Zjd96TrAQC1Fo2gJzF8h6J/DE+NRmpvD9znB/D2a
gSXXYf6ugL+DM/jPf2i+/8ZsHqVg7Wk/LRj3uK+xWB7Of+Umo7SfYK9E+fPr
2Q48SqUuT84fxvc2ydWXwXn8fqJmvTT/PuKmuygF3s8T0+nlq2G88Eqp7zC/
vgncdvYE/UWbFzUbnldS3nlWBOZ/KqKPdo9NU25YPXusD+MRlk9Fg2E9qrzi
6j/wvE32bLPLi3iUuTZFM5VhfqJ1YdPPyWlKi55ujg3M78mqG+Tbn2Ro+asc
/BVrqt10MIGBuJqWlR/g93uPT+ipjfIoCR9qfFXh986+JyIOwf3Jcm3l1RDQ
4m0KQb7BAmjnxleyV0E/HzT+eeO/mWj6ho3RGOhv4R92iiQLotRmrVmWUE86
JXxtb1+Zg1BnEGqD/HNwXrKzRo2BeCMZdmoQfyJDFjnFXxlI/8JZYTbo4cWX
DAThPs6SOed7C/SgXVi5rQQLDb250/YXtEpm0wZ5qCe7PGyEHcCfipj5IvXg
z86wcdtDoHcLD75Whfvkkw8CFq9BD2eeTOUpQ/4KxvUuBH/vikRFtV9jIl6K
HDcQdGwSJ+61DhPFuT+P/wv+55qWVcvL8iifVqyWsuXfjy16sz9DfP+XtL8/
A/RQjouWl/4MlGD+xHga/DlfYeVoCPHSE/tB2x7ss11he/yVLRO5xKiYZ4H+
yfs4WP+eiYTrYiRbQZdajX+TNGahVVfj49TBvsd93NvmUE9sJOnaW0GfXjzs
cRfqSdwOh8oKfv4wyk07KCy0XdT81ATo9joznZFBJvJl3io7APZH7gmuXv4W
vjcezFEaAPu7lPv+bWfxKLqCvFUrwV7dzt6TH814FNOwjMo6/n1BMWPtXg0W
mv9owSUJWC+K/toNQT3ZfO3ViU2gzZVedh6H+JscVk3I439f9UYtuOkE9+2v
2Z/E+N+7NYzVrnBfPLppx8BG0LnHB+q1ZATQBzVGyACsvzzimvhnOziv8jrX
GcHvy5POCsjAetphP+7Gge56dqbWBL5nDr7fr3YW7D/2+e9CvSIGGtqmweoG
+41+hd3QKuZR3g111WvB+hv3XbuhB9/fAk3frIX4+dAyEicF9SR0z8Hm9fz7
9sPi+H3w/kvPXtWdzf++qT647tH0NMWh5HLvMhi/5hIfLAb5v4pSMhwBehlP
Je4Z1JN1cwcaf8Pz9nVKbhYz4VFSFRcWrobfnwjVfjDK5FE07q6TUYT5mSqt
poVwn3b7pBgQwI+v/35qTsN6IkY7j8rB/FNen7OloJ6E5kjetIDxuPwGZzew
R10qvL0Y/KswT0r8BefNsl5XaQ2YL2vvVvlbhEcZHmCy18H8iTKe+wOYL/Pn
YYsAjKPYDReD4H7M1cnR+w/GX8X85FZBPFQG/Nn+A+z9myB5PMUZ7jOOY//8
+N+HLhc9uyD/tx/eZzYffl/tapqxAepJr9KEgBn/vtVTvrgJ9r9f6YrRBtBf
r60s0IDnWdmcTxWG+Q4XhJwU4b7xavHTXD0Y58Y6NS6F9XrL2zUm4Hke01qf
fmlAfWsNHlSC+TrFM2K2wX1oRGppsDX//rV0fl4RrMde3nvnEvjb4Pfi1Pnd
DPR2s8htNZh/c1vBgy1QH1ct8lxNhfm+S7jZdTDfQdO+dBrWj3DZZOEjzqMU
3RcTl4T5Uws+/hcL9qt8HCgy5sd7RoNbNNiv5XJmljvo360NQ97w++ht2r5z
YH7YlU3lklNQ3+b8eqgAuj1H0XII6qPeG2UJSz4fEkcVyTC/4lZMnjPop9+W
ry3mf78E8BgyMD8jQuHjR3heiZegzxp+POkdiZaFcXF55ZuifN5prrulFd5v
WHm3wkLQimfyPuXCeXXbxeiRLcw/1BWgWgXzj64+q3UF/C/tfKW3LZaBMF89
8x81Y1DKgYv5qlBcqOMfRQcu5qtF81mql0UduJiv1hg6hY79sOdivrrnzzx2
aoM9F/NV2z6nVS+P23MxX513I8dA0d+ei/mq7wU59yo5ey7mq7flEpRiHtlx
MV89TrF0Cg+242K+Sv96xDZ8wpaL+Wo12/xCYoItF/PVApVJ4eBRGy7mq1+v
eFv7Um24mK/m/LUVlzlqzcV89VeF+9c1V6y4mK/uPFT4JuSyJRfz1ffD++58
OYO4mK/WMPLLZc5YcDFfbYxif3P4sJqL+WrJjUp2aYwJF/NVlZcCF0e5hlzM
VyP9ckwM+vS4mK/Gqb+zPnFQi4v5asVzqdcjaipczFe7QjTE07pmcTFflTxq
kOlzUJTwVS/TWXeMG9QJX10kGmvEWqdH+OqRmHU5JvuNCV/N7zXpyimzIHwV
taKNI1utCV812e+0IiHMnvBVpMv2m5O2lvDVvQtHFE7IrCd8NVw79VaVkxvh
q2eCt7O0azwIX1321n14lsRGwldrx5BTnf0mwlcXvHIbmcj1IXzVtHHQQuGM
H+GrCiuNBf8c8Sd8NVUr2toih0b46gVl5v0KbTrhq8LpOY5XsumEr57553hP
/CGd8FXveSYa26/SCV99/DvKeDqITvjqE9ee/uffaISv7hu48ddqOY3w1cip
sURNyAfMVzsr7h3Xk3XgYr5qMG383Z5nz8V81blfVSC4w56L+equIV+vqGv2
XMxXH7ZJp52Os+dinprUFyc7kbeZ8FT9xNBHHYY0wlNDT5gqaPfTCE+9ZLA/
0ZxJJzxV13RA/GsFnfDUQDl2njz4j3nqo+d/GMyjdMJTKcEWr4NW0AlPtdf5
s98ui0Z46tJTacXhcg5czFPNznYImys4cDFPlVsU+qJjtgMX81TZ68kxcZ/t
uZinbjbL2NZcZc/FPHWy8rhp4gF7LuanNS/H5p9atJnwUxmD8p9jPH/CTw9W
bXtx9CGN8NMVkxLez6l0wk/he0P8QCGd8FNdes6GBi6d8FPLLsF/dBjH/FRr
46qaqrV0wk+dncwu6nFphJ+e/dKYbaPkwMX8NNdEy3Bc0oGL+Wnprfdvxsbt
uZiPJuvNWTKDSSN89EHgf1X9wnTCRy2eVun0JdIJHzX8Nmt9zR064aPxEdHZ
E6AxHzVMOG2dnUBHG0aHFF1Bl9OsHs4TpxNe6tQkZ2FOpxFeKrYyWCNUxoGL
eWkYTbLYHuIT89JGp8veXXMduJiXbvXvm/lswJ6LeWltveOl6lp7LualL8dp
r0wz7bmYjx7yHLXZ1OlH+OjMyaHlSvX+hI/GaR5DlDIa4aMVK4vKDVbTCR81
EvkVLHqGTvjoj+LmDd7wfjAflfd958EqoxM+KlV2apn1Jjrho9KWR6cH3tII
H60RLuP0gX+Yj77W7jpkLO3AxXw0MubOwM0pey7mn9zEOz5UZxrhn7dPJZgE
TdAI/7xc/fWOaCSd8E+tqN9fntykE/5ZfN+aOXqfTvjn6G2v8zvS6EjkalqA
A+g/D9sKjqvQCQ8dXXF4UH0XjfBQl38fHs6AfME8dCxZIa4D8gnzzwIfQ994
8BfzT+3pJbeWwn5g/nlY9+OtzbBfMQsFFYf4fK+4Y4J2mk54qLJ7ZbwjxCvm
oaLLNs2IEHfgYv45EJqj//QAnfBP0xVLIlrBn/GbM3fU83nOiHGbWiWd8NDH
D9qcTtnTCA9Vua+/Zg3sL+ahr8u7B8tg/zEPfTkd2uIk4sDFPNS5rquk/7s9
F/NQt0YVVPrUnot5aH7x4P60bHsu5p8X7D/M9qryI/yT0bwlQ7/cn/BP4cdv
FN7k0wj//MdIFZIwoBP+Genxdmgil07455vOf39eQL3D/DN/X8jX9Mt0wj/X
Jb0UuetPJ/wz4d3A251dNMI/L+QUOGeBf5h/Vrw+bGIO+YX556vnUhdS/tlz
Md8s3jLYVWpJI3xzp+ZIyeYfNMI33cxShB+x6YRvUsffrY68Tid8c4tjY6da
FZ3wzd0J3MWHDkG9Fn8nZAP2mdXJpuZo0gnvXHfyt5fTPhrhnTdvJevYyztw
Me8MaOgfOQ4a801BO+Zeazc64Zvjf5TejxbTCd80nzb/cwXiy+a4L/srP/5F
YyuS8umEdy7pc//rCvGFead2vxH9gYQDF/PNLvsVdlF76YRvirwefxNyj45a
sie0HoNO3TzF0LpNJ7zz+rLY8D0eNMI7f6YbU+Ph/MS8k+IQrvEM8gXzzayQ
+Xv7wZ4sx6PKJ/nfF1USDeVg7/sDYnJdoNfO3HpGsIRO+Gex3GjeIrAX8063
rLaJrlt0lOPWm36ff/+1iLHPAvsw/9TNplLOwfMw/7yXY6srBfkp8/yeRxmf
//w7ldMC8YR5Z0Qx884yWP+Ws+vzVBi/qTtfSQren8K7eY+fga66FyvRB+8X
888b3U+y9prRCP/U+msbljvfgYv5p5jRlj1vId4w/3y/LPkCD/IJ888H9Et1
P4bsuZh/diDhQqV6ey7mnxuOFvOW58B9+3+88/LS9x0Py/0I71w98+NK1Tx/
wjtFM57GHTpFI7xzTutn8c9w/mPe+dVNbLo1h05454HGHauiwX/MO/PavaPm
wP0C884l94TjuwPohHfuvnevurSPRnjntIhkmj/4h3mnycaFpncgnzDvzCkz
u8uctudinvlNKsqPuppGeGaku79SA9zHMM9UEXn/YX8InfDMb7kR142u0QnP
TPmv6vh5eB+YZzoOym2fmUlHzQ/+vbcE+/x2l/6XAvdFzDdXvD2+eH06jfBN
i5Jt0Z3w/jHf/Oy2WPY75BPmmYYbe92PONMJzzyp8O67XRGd8MyAmzaCtRCf
S9+kyn/m16NeL62YAjrhm/mX8iWcIX4w3/Q4eCHAF+4XmGeaialO3kimE56p
0mt8+cxdOrJL+T3jEd+f+65r5eG+gPlmSOLF5f3eNMI3+2sfJU7A/mK+eX9u
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
unDJchWH8NC+7KKM/p0cwkPb++o+P4f9wjw0Ml2/jM3gEB6al7VKQVeNQ3jo
qb6Qk3tqwgjvnKUy3dq8kE14pzVTPZwlRkWYd0Zfbjc9LUpFmHfu3NP5bmoh
lfSPshkvrAPWUEn/aIfDiwNyQVTSP+pWWC4Qd4KKqv22bfUB/3wo+Y4ZQ6HI
9Kzq2DnQSiG3Kl++Z5P+0ufXPm0pzg0j/aWdXzZ8dVPmED56+v6VxcVsDuGj
47VmHuP7OISPbt5wtCluO4fw0Quim5VGDDmEj/oMiNXrt4cR/jlcLrwu2pFN
+GdL/FRqNtRDzD9rasVTuudTSf+o5Jl5wX3LoH5ezxiNB3sFyuX+ajPZaFj5
P/ZT0ILZD8e8LcNIf2lIPbrzsTOM9JfuXPhaLHodh/SXhkrEz3yRxCH8tDHF
xVo2mUP4afQbZ9V3GzmEn96+qHilSJRDeOgnRe7PRb9CCQ+1dFj+O1SCijAP
re0ty8iEeMY81ECRLjipRCX9o/alsjOlTKikfzTFWf6Shj+V9I8+3/Bya1UW
Fa1x+FbnBv6d7Rq/dP15KDpQ5ZebC9qkWDRz53026S/NWmTj05ISRvpLy1+u
uDQsxiH8dNZOYX8uxCfmp/MPr3qaAe8P89Ofhmaz9u/gEH7aqFIkscSCQ/jp
w57s0d1fwggfNbZ+wOjezCZ8lCs2u+w3vD/MR7e5i84skKQizEf/rml5v0SL
ipzPCrlHgb29frXpYlQ2sjEPkqgCvSsfvT+sFUb6S600suTtXoSR/tLkAJOY
V5Yc0l/qdlHOziaeQ/iq1e76+1YpHMJXf+YrGW7z5xC+umJS4vI5OQ7hpbeC
LG+cnMMmvNT0gbbXO8g3zEvfF0W0Tc6jot/mhclr+PHRGkOpWcpBRXsLnuzn
8+lxR+HrERyE+0t556k1lbCfmK+WCm6xrwvlEF5at2mo8DDsD+alxxWi+xmy
VPSu9gcjgF+P/caUVnhyUO0m9clLoDkC80rS9nBIf6nHiosZjokcwkvfNs+a
EdQaSnhpyYbAttOw35iXVud+s1wO8Yd56bVLNqx0RSrpH92+tUZo3IhK+kdH
kL7Hal8q6R8dujHPiX2YinY9KNrhDO+nQ+LArf1Voej687ivR/n9zOKbzP6U
s0l/6Ra19R35u8JIfylrvvYwU4hD+KrutJ7+ZACH8NU9AgHuCrBfmK/SM8NH
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
fRKK/g98Qon4
       "], {{{}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.576832, 0.6185346666666667, 0.8388646666666667], 
           Opacity[0.5]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1lW4VVUUBlAuKSIlSCPd3d2l0o2BAoJiUYKJinQoId1dKm2BIigpikgY
YBBKSIOClOCY8jC+f655Hu5ea82zz83TpWerHokTJUqUwAJFe0VLmZqf1Kt5
UV2Om+opPKMuxEX1SNmQb9RvyGokZyxNGKHfSeZgMseth8v6fKHuLysznSSM
oTHzWOzz3rIEU7li/Za8jznssR4oazKTlLxDM+bTweetZBomst96qKzLGvVL
sjy31FN5Vl2Yv9Q7GaCuTgpGWneWOTmh/pIl9LEuyVX1Xh6ktXVaDqg/YBqj
6KJ3L3+qN7GUh2ijl46f1R8yPfbJw7TVT88v6o+Ywds8Qjv9u/lV/TEzGU1H
HuWxOPt47vjbPE5XuvEET9Kdp3g67jXOgOfoQU96xR3EPnmevvTjhZiLOENe
5hVejfvkNV6PeaC958vAb+pPmMWYOFs66GfkoHotsxkbz6mXi5PqzbzLm3G2
evdwSL2OOYyLPenl5pR6C+/FXMTZ6mXisPpT5sberIvwt/pb3onzsM7DafVW
3o+9Wpfimnofg+I+rDNzRP1Z7FtdIb48Ma9xZrIol9S7GB/nbJ2XM+ptcTbq
KiRlWZynLM31uFd5P9/H35O1uJPxNGdw3LvMwiR+tx4m6zGL9XEPsiLTSGA0
DzA3vhNxp7IYU7gccykbMZvv4pxlDWZwB+NoyoSYF5mPs+oRsgHb465lVZKx
POZDluGG+gcGq2uTiiExnzIrf6g/j7lRVyIxC2LmZHH+Ue9mYsypdX7Oqb9i
BUNjzvWycVS9gYVMipnWK8B59Q5WxlnFd0IvO8fUG1nE5Jh/vYJcUH/Nqphx
67L8q/6RIeo63BXnQYvEt9+Zw31W1hi0kwk0jPmwvkileE65nD8oEs8sX2Ee
P5FTr65sRQ8m8Q3p9cvIOrTkOSbyNel8Vlp25GXm8iM59GvLFjzLBHaQVr+U
fISXmMMPZNevJQewhN/Ip9dcPsN4viKNXkk5hGX8TuH4TsgPOUXpeCfI2XxP
Nuuaci3nKB/vBHmFGurF8lfyqpvJ69RWr5ZN5AlZIu4m9iP/llXiOyvvk9tl
allCtk24/SPWIL7ryubygqwY8xdnK6/JWvH9lo3lEVko3hPyX+qqP5AnKRX3
Ly9TLd5bch9Z1TXkJ5ylXMy/XMQv5LFuKldxnOIxi3Ic27jLurgcxHscpmC8
22Q/ZrKXLHrV5Wss5Gdy6zWR3RnLVlLpFZMd6MsM9pBZv1rskycZwxbu1C8q
2/M809lNJv2q8gGeYDSbSalfRLajD9P4jnv0q8j76cbbbOIO/cJxrrEvCpA/
ZiruOc4n9kEu7iUnOWIOY17ifGPv8fzxTPF3yEgG7iY96UgbMxn3H2ca5xB7
i+eNZyAFlWNO6MpbfBl9z5dcVqIRjzOKL0jus2QxMzSkCyPZSDKfJY05ozdT
2RXPpl9BNqAzI9hAUv0kciDvcijOQq+N7MUUvo196ZWXH3OGstb95QIOxDlZ
15crOUYx607yr9ifenjsI96jMknC/z9FidrIW7K+XCebyfOyQrzfZUt5VdaU
S+PO5cG4J9latpY3ZB25RjaVf8qS8fshL1E13ptx/3Jn3I0sJ29ST/2RPE2Z
eL/Lf6iuni/3x92r68kVHKVovJvlMNaTOOH2/6T/Aby9OI8=
             "]]}]}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.576832, 0.6185346666666667, 0.8388646666666667], 
           Opacity[0.5]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1mfcjmUYwGHeJKPsSkQoM5SdHRkNZJO2qMgqe1REU9ntkL333ntTZJVd
yN57peOsD0f/6z7v5+m57tH7K3vj1rVbJSRKlCgxUxL+b4J/LNJPeZV8jg/H
eZ4iq+M/dARlrK9oVwpZn9TZ8Tnrf7QI6aw36TP6rZbSS9qagtbHtLrO0Ap6
U+toHX1E9+uzOk7L6TWtpT20mJ7VGjpfK+ltratxXXfoYq2qn+kTekFf41Hr
v3VqfI+HHO/SkXSjsONTOoeipHf8i35Hm/gNcpod0PF8FL9HErMl+jmvUzn2
SQbzX/V73qVefJY7zZfqFzSmCsVjTlLnlmlv3ojroETMucu55folTXg6ri/m
JCM5KUjJ3dxDKlKThrTxbOK6Ym/cy33cT0YeIBOZeZAs8ezjPpGN7OTg4XhO
cS/IRW7yxB7sb4V+RdN4/pSM3zHfrD/wHvXJG/s1X6l9eDOeebwrsSfzLfoj
bWlAvrg281Xal7d4jtKxf/Pf9Cfa0TCeddwH89Xaj7epFtdhtltH8T5l4trN
tupg2vNCXJfZnzqBnuSPe2q2RvvTLGaOj+g0qsf9cbxHR/MBRRyf1rmUjfvr
eJsOiX1bX9YOPGZ9XGdS0fqWNor7av1XXKdO1PJ6XWtrr3hn9Jw+rwu0cvzH
TD0KxPPXtfGe6IB4FnpRa2pzLaBH477odH1Sb2iNeM7We3VM7N36qn5IUesz
Oo9y8b443q5D6cjjjk/oLF6M98LxQZ3ExxSMd9JsnQ7kndh/vFNm+3Qs3eNa
4z0026E/04mX4l6R2ny9DqJFXE/snQfNd+owOvNy7Ic05hv0a1pSiwoUIq1z
G/UbWsW9jWdAFvPfdThdeIW8Zod0Mp9QwvF5XUgV68TUp7DjHf4Y3fLHYQyn
eJ3v2Ec+avM5v5JAVqrwPiv42/cvk866FO8yh+1m29jKYS6R1rwkbZjNb/F3
XbNQmW4s55D5RdJYP0FrZrHlvz+c7h+V6MoyDpo/otXoyToumDXQPmwjNSVo
xUw2O/+afste8lKLz/iF28430v7sJDM/8RdP0YWlcexzI/U4L3OJQeziYa4y
JK6J5zjHR6zlvO9e12EcoX7sm6/YSiqu8AMHKM4ZWjIjnonvj9aTvMo37CEP
P8ezoSafsol/fP4F7ccOMlGRzizhT+dz6LP0YE3s16yefhnPi3soRgumx71y
Prc+zyds5JbZA1qBTiyO/Ztl12fozmrOmt2tRXmHabFPs5tktH6Sjixiv9kZ
UloXoTlT4/fMbnC/dXk6sJB9ZqdJYV2YZkxhQ9xz7rMuR3sWxDtgdork1oV4
m8msN1vHWtawmlWsZAXLWcZSlrCYRSxkAfOZx1zmMJtZzGQG05nG1IT//z9n
MpOYyAT2cJJk9vI4bzGJ8Wa7OcFdjh/jTSYyzmwXx0nquCBNmcBYs2vca12W
dsznD7Nj3GldgCbxG4wxy6U1+DjuX7zTZhm0DG2Zx+9mL+nA+HeRjaf5kFUc
db6u9mYLSfg+niv5Oc0bsXdGxzugozjBK1zma3aTk2sM5TDVOU+veF5ciXdC
h8fv0pCL9GU76fkx3ndKx3vIe8xlp++O0GO8yIC4Nh5iMAepyges5IjP19Ev
2MwdPErjuNdxDc7/C+smXMM=
             "]]}]}, {}, {}}, {{}, {}, {}, 
         TagBox[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0.365248, 0.427802, 0.758297]], 
           LineBox[CompressedData["
1:eJwl1Hl8z3UcwPEZiYRNdNmUyrVYzhbNpGxdtmyMkshQVDbKHaG7UNF9UFEq
5ZYKuYqUq6LT0eGqHEWOitLz/fDHc6/P5/2bx+/zPaxmUUlBcamEhISOfkQT
/fhQH6IbafY7dCZXUMP+O51CpvURvZtG1nt0fvye9X/ahCrWa/VqfVZb6CEt
Id36V83Vudpaj2l7ba8X6A96jb6lWfq35utobaZ/aJ4u0DZ6XDtoopbWxXql
PqyX6J96Mxda79RZ8e84x/57fY3hNLbfq+/RlNPs1+lz9IvvoJbZjzqNe+P7
KGO2RB+hO9lxTqqar9fn6U9h/C4nmS/VRykih4tjTlmfLdMx9IjrICPmnOyz
5TqWnlwV1xdzylGeU6jAqVSkEpVJIjmeTVxXnI1qnM4ZnMlZnE11UkiNZx/3
iXOpyXmcH88p7gW1qUPdOIPzfaTj6BXPn+bxPeaf6wvcGe8d9eK85h/rY9wS
zzzelTiT+Rf6InfRibS4NvMV+ji3ci2XxvnNv9SXGMD18azjPpiv1CfoTdu4
DrNN+jojyIxrN9ugExnIDXFdZj/p29xH/binZp/oePrEzH6XziY37o/9Zp3K
PTSx36fv0zLur/1GnRTntj6sg7jI+jedx+XW/2rnuK/WP8d16jvaSv/RAr0/
3hndr9fpQs2O/8wU0iCev66K90QnxLPQg9pOb9MG+kvcF52jl+lRzYvnbL1F
34izW/+lI2lq/bt+QFa8L/Zf6csMpqH9bn2XG+O9sN+m03mA9HgnzT7VJ7k9
zh/vlNlWfZNRca3xHpp9ra8whC5xr6hs/pk+xR1xPXF2Usy/0VcZyk1xHpLM
V+vT9CWf1jQi2Wdr9BmK497GMyDV/FudzDC6Us9su87gQTLsD+gicuJvaakT
f1Mb2/8PszaQfw==
            "]]}, Annotation[#, "Charting`Private`Tag$19370#1"]& ], 
         TagBox[{}, 
          Annotation[#, "Charting`Private`Tag$19370#2"]& ]}}], {}}}, {
    PlotRange -> All, PlotRangePadding -> {Automatic, {
        Scaled[0.03], 
        Scaled[0.1]}}, FrameLabel -> {
       FormBox["\"time (d)\"", TraditionalForm], 
       FormBox["\"number infected\"", TraditionalForm]}, PlotLabel -> 
     FormBox[
       InterpretationBox[
       "\"Estimated variance = \\!\\(\\*FormBox[\\\"326.13020188443716`\\\", \
TraditionalForm]\\)\"", 
        StringForm["Estimated variance = ``", 326.13020188443716`], Editable -> 
        False], TraditionalForm], ImageSize -> 360, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.8691648*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.8691648*^9, 3.8764224*^9}, {0, 171.}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   TagBox[
    GridBox[{{
       TemplateBox[{"\"observed\""}, "PointLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9, 0.36, 0.054]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               
               TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                "RGBColorSwatchTemplate"], "}"}], ",", 
             RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
       TemplateBox[{"\"calculated\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.365248, 0.427802, 0.758297]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               
               TemplateBox[<|
                "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                "RGBColorSwatchTemplate"], "}"}], ",", 
             RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}, {
       TemplateBox[{"\"95% prediction band\""}, "SwatchLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.576832, 0.6185346666666667, 0.8388646666666667], 
                    Opacity[0.5]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False]& ), InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Opacity", "[", 
                 RowBox[{"0.5`", ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.576832, 0.6185346666666667, 0.8388646666666667]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}]}], "]"}]& ), Editable -> True]}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Right", ",", 
       RowBox[{"{", "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8773444485814466`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"54e0e7ed-14c7-486a-9ecb-a7f022d11d1f"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{0., 6.}, {21., 14.357611361430664`}, {42., 
        29.06595631070536}, {63., -11.866154084922812`}, {
        84., -8.760386664348943}, {0., 0.}, {21., 0.}, {42., 0.}, {63., 0.}, {
        84., 0.}, {0., 6.}, {21., 14.357611361430664`}, {42., 
        29.06595631070536}, {63., -11.866154084922812`}, {
        84., -8.760386664348943}}, {{{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
           LineBox[{9, 4}], LineBox[{10, 5}]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
           LineBox[{6, 1}], LineBox[{7, 2}], LineBox[{8, 3}]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          PointBox[{11, 12, 13, 14, 15}]}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{
         FormBox[
          TagBox["\"FitResiduals\"", HoldForm], TraditionalForm], None}, {
         FormBox[
          TagBox["\"time (d)\"", HoldForm], TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{14.561224489795919`, 1.4999999999999432`}, {1.5, 
       1.5482980464365568`}},
      ImageSize->288,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 84.}, {-11.866154084922812`, 29.06595631070536}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {148.8, -91.22181673948447}, 
     ImageScaled[{0.5, 0.5}], {288, 177.9937887599697}], InsetBox[
     GraphicsBox[{{}, 
       GraphicsComplexBox[{{2., 6.}, {8.642388638569336, 
        14.357611361430664`}, {47.93404368929464, 29.06595631070536}, {
        158.8661540849228, -11.866154084922812`}, {
        179.76038666434894`, -8.760386664348943}, {2., 0.}, {
        8.642388638569336, 0.}, {47.93404368929464, 0.}, {158.8661540849228, 
        0.}, {179.76038666434894`, 0.}, {2., 6.}, {8.642388638569336, 
        14.357611361430664`}, {47.93404368929464, 29.06595631070536}, {
        158.8661540849228, -11.866154084922812`}, {
        179.76038666434894`, -8.760386664348943}}, {{{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
           LineBox[{9, 4}], LineBox[{10, 5}]}, 
          {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
           LineBox[{6, 1}], LineBox[{7, 2}], LineBox[{8, 3}]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.012833333333333334`], AbsoluteThickness[1.6], 
          PointBox[{11, 12, 13, 14, 15}]}}], {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{
         FormBox[
          TagBox["\"FitResiduals\"", HoldForm], TraditionalForm], None}, {
         FormBox[
          TagBox["\"PredictedResponse\"", HoldForm], TraditionalForm], None}},
      
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{14.561224489795919`, 1.5}, {1.5, 1.5482980464365568`}},
      ImageSize->288,
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotRange->{{0, 179.76038666434894`}, {-11.866154084922812`, 
        29.06595631070536}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {446.4000000000001, -91.22181673948447},
      ImageScaled[{0.5, 0.5}], {288, 177.9937887599697}]}, {}},
  ImageSize->{
    UpTo[576], 
    UpTo[178]},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.877344448995482*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"acb186c4-8938-40af-8c39-ac10d931cc17"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"105\\\", \\\"}\\\"}]\\) \
lies outside the range of data in the interpolating function. Extrapolation \
will be used.\"", 2, 116, 8, 25422775249527722208, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.877344449051661*^9},
 CellLabel->
  "During evaluation of \
In[106]:=",ExpressionUUID->"c80f5ccf-af32-42b1-ac79-164790ea645b"],

Cell[BoxData["360.12642265110077`"], "Output",
 CellChangeTimes->{3.877344449069578*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"23338fc3-050a-493a-a66e-2fc864e1aeb3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1572, 911},
WindowMargins->{{Automatic, 116}, {Automatic, 33}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"13.1 for Mac OS X x86 (64-bit) (June 21, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"78d2fd7a-3eff-4382-b225-2573ed98914e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 1117, 28, 188, "Input",ExpressionUUID->"07916207-4e49-4eeb-b9e1-a3e103a11b85"],
Cell[1703, 52, 236, 6, 25, "Echo",ExpressionUUID->"32f77566-70a7-4d98-8d92-f946e5491d7f"],
Cell[1942, 60, 726, 14, 28, "Message",ExpressionUUID->"b2d773a9-f39c-41db-8d79-76bb7b86956a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2705, 79, 746, 17, 145, "Input",ExpressionUUID->"33328eae-4935-4828-88c5-da089a1871ec"],
Cell[3454, 98, 26168, 697, 434, "Output",ExpressionUUID->"bc3dc7d0-483f-4a13-8463-2346a51c49be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29659, 800, 86, 0, 67, "Section",ExpressionUUID->"e2a2a5d8-d287-4e59-ac76-6006567a8389"],
Cell[29748, 802, 2450, 58, 308, "Input",ExpressionUUID->"69e6325d-778c-4b8e-b387-eb5593eeccc2"],
Cell[CellGroupData[{
Cell[32223, 864, 108, 0, 45, "Subsubsection",ExpressionUUID->"d08d26a5-2bdc-41be-aeaf-fcf936fac7f0"],
Cell[32334, 866, 2710, 76, 283, "Input",ExpressionUUID->"3f0352b0-1549-4025-ac34-76f26a91d6c0"],
Cell[CellGroupData[{
Cell[35069, 946, 365, 8, 30, "Input",ExpressionUUID->"5904d9b7-cd79-451c-b72b-99c000b1dc9d"],
Cell[35437, 956, 169, 2, 34, "Output",ExpressionUUID->"d04848ab-b3c3-4ace-aec5-0f3ac78c06bb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35655, 964, 91, 0, 45, "Subsubsection",ExpressionUUID->"e123596b-5e5e-4544-8431-58a6a8d76039"],
Cell[CellGroupData[{
Cell[35771, 968, 4516, 114, 611, "Input",ExpressionUUID->"1be0878b-8297-40db-911e-04cbfbe0c60e"],
Cell[40290, 1084, 10812, 354, 133, "Output",ExpressionUUID->"e41e00b5-180d-4a8a-878d-73f4f2af2623"],
Cell[51105, 1440, 18707, 444, 254, "Output",ExpressionUUID->"b897491f-51a7-4c08-9e09-d3e06824007c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69861, 1890, 97, 0, 45, "Subsubsection",ExpressionUUID->"a99c18d3-9ca2-4d23-b801-1ce9fbfc019b"],
Cell[69961, 1892, 2018, 50, 410, "Input",ExpressionUUID->"c22c65f0-7dd9-45ef-b78a-f317d4c13df5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72016, 1947, 89, 0, 45, "Subsubsection",ExpressionUUID->"868d8111-8676-45c2-92a7-117d82b933e7"],
Cell[CellGroupData[{
Cell[72130, 1951, 2221, 55, 433, "Input",ExpressionUUID->"57c2e49d-ac79-4b05-9a00-a1620eb35449"],
Cell[74354, 2008, 17312, 412, 251, "Output",ExpressionUUID->"eba9fa4f-8c9d-461c-b15e-f0a6a07f7208"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91715, 2426, 164, 3, 45, "Subsubsection",ExpressionUUID->"4ccda2fe-aaf0-437c-ab86-fd46ff76219f"],
Cell[CellGroupData[{
Cell[91904, 2433, 3263, 85, 395, "Input",ExpressionUUID->"c8d1f69f-017c-45dd-9487-116b1a84cec0"],
Cell[95170, 2520, 22923, 545, 244, "Output",ExpressionUUID->"79385bd1-9c5e-4a0a-b1b3-bb541667d450"],
Cell[118096, 3067, 386, 9, 28, "Message",ExpressionUUID->"e9dd4f98-7f3d-48ff-a028-76a5c6cc96a0"],
Cell[118485, 3078, 113364, 2820, 267, "Output",ExpressionUUID->"a8ca4779-35d2-4273-8d6b-ac0fd19ed198"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[231910, 5905, 99, 3, 105, "Section",ExpressionUUID->"9b8f38ee-1a91-42d0-9c05-d145c7e4f44a"],
Cell[232012, 5910, 192, 3, 35, "Text",ExpressionUUID->"44b4dbed-ac12-4cac-800a-b0afc8b8be5f"],
Cell[CellGroupData[{
Cell[232229, 5917, 118, 0, 45, "Subsubsection",ExpressionUUID->"c6ba42a5-2f66-4f8c-92be-6436db209979"],
Cell[CellGroupData[{
Cell[232372, 5921, 377, 9, 103, "Input",ExpressionUUID->"0b918e69-3583-4116-a27c-66d900c0fc62"],
Cell[232752, 5932, 150, 2, 34, "Output",ExpressionUUID->"11a6df28-e177-449c-a717-9b0918398a45"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232951, 5940, 129, 0, 45, "Subsubsection",ExpressionUUID->"971e3967-2510-45f1-85e6-808b19d2f52e"],
Cell[CellGroupData[{
Cell[233105, 5944, 1089, 26, 188, "Input",ExpressionUUID->"3cf13c27-c437-4666-811b-03999502a6d8"],
Cell[234197, 5972, 169, 3, 49, "Output",ExpressionUUID->"8a5cfba5-a4fb-4bfb-8ca4-83a90fb607a5"],
Cell[234369, 5977, 150, 2, 34, "Output",ExpressionUUID->"feeeab56-0598-4a25-a099-af2fd4a3d059"],
Cell[234522, 5981, 387, 7, 34, "Output",ExpressionUUID->"33aad43a-25da-4c1e-bf3b-2d2094153cdf"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234958, 5994, 128, 0, 45, "Subsubsection",ExpressionUUID->"1f1ce28b-f573-4431-be13-7fabd2e88cee"],
Cell[235089, 5996, 211, 3, 35, "Text",ExpressionUUID->"b96fb89b-0924-437e-b92e-8f7c017a5efd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[235349, 6005, 81, 0, 67, "Section",ExpressionUUID->"61aa2ff2-998d-4a5a-8713-68066ee2c391"],
Cell[CellGroupData[{
Cell[235455, 6009, 1934, 50, 283, "Input",ExpressionUUID->"32f0c8f5-51a1-4abc-94c0-7acbe784c2c8"],
Cell[237392, 6061, 149, 2, 34, "Output",ExpressionUUID->"3602fdc7-7634-4c6a-bfdc-1604933b88f4"],
Cell[237544, 6065, 151, 2, 34, "Output",ExpressionUUID->"0c02beec-48ff-4c92-a147-be6635a8a6cf"],
Cell[237698, 6069, 149, 2, 34, "Output",ExpressionUUID->"f9314f76-5120-4de7-a88b-dfdcf66acbc3"],
Cell[237850, 6073, 485, 10, 37, "Output",ExpressionUUID->"6badc0cc-5d0d-4544-a78b-5309a662426a"],
Cell[238338, 6085, 466, 9, 37, "Output",ExpressionUUID->"a9699e90-6739-4318-b009-66691b3f188a"],
Cell[238807, 6096, 474, 9, 37, "Output",ExpressionUUID->"88a58d42-58b3-4bed-92f0-0074bb941245"],
Cell[239284, 6107, 1065, 23, 60, "Output",ExpressionUUID->"1acb4ad3-097a-4b4f-b794-90aed8a34efa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240386, 6135, 2224, 54, 305, "Input",ExpressionUUID->"3706d53d-5265-4c2c-ae5d-eb17c73061d1"],
Cell[242613, 6191, 3696, 113, 263, "Output",ExpressionUUID->"06881cbb-4538-4ff4-91df-e4fe7dfdef8f"]
}, Open  ]],
Cell[246324, 6307, 654, 15, 116, "Input",ExpressionUUID->"fba94ddf-c837-4814-91eb-2ca17cbb52e7"],
Cell[CellGroupData[{
Cell[247003, 6326, 5594, 134, 851, "Input",ExpressionUUID->"9241722f-3f6d-485a-b600-9d691603b690"],
Cell[252600, 6462, 4708, 88, 575, "Output",ExpressionUUID->"850b194f-515c-4547-ab04-3cefa4addef3"]
}, Open  ]],
Cell[257323, 6553, 1027, 28, 152, "Input",ExpressionUUID->"ddaf280b-7768-4144-a8b1-c27978fd943d"],
Cell[CellGroupData[{
Cell[258375, 6585, 8481, 195, 994, "Input",ExpressionUUID->"2a618d72-09cd-44eb-a00e-2d71e1be0794"],
Cell[266859, 6782, 5956, 113, 593, "Output",ExpressionUUID->"6e461b26-66e3-4cac-8f75-5bb273827175"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272852, 6900, 117, 0, 54, "Subsection",ExpressionUUID->"50624ebc-032c-415b-8909-67f94cfd9674"],
Cell[272972, 6902, 840, 22, 173, "Input",ExpressionUUID->"f509e683-193a-48a0-8156-99d3705a5895"],
Cell[273815, 6926, 5564, 130, 1051, "Input",ExpressionUUID->"55ec7e9d-4a6f-476c-b876-67a065a2c6c3"],
Cell[279382, 7058, 7593, 184, 497, "Input",ExpressionUUID->"e0ce8111-e7fd-475a-b74b-c71e9fb92d98"],
Cell[286978, 7244, 1900, 47, 188, "Input",ExpressionUUID->"6d035827-8a56-488c-a62f-8789538f2648"],
Cell[288881, 7293, 1611, 36, 80, "Input",ExpressionUUID->"58548405-6508-445a-9d17-dbca1ac4d688"],
Cell[290495, 7331, 1335, 32, 88, "Input",ExpressionUUID->"d20d5d5a-dec3-40ea-9fd0-d57f6863e52e"],
Cell[CellGroupData[{
Cell[291855, 7367, 1186, 27, 145, "Input",ExpressionUUID->"1cd69a2e-2ddf-412c-ac01-7366d63a35e6"],
Cell[293044, 7396, 698, 18, 42, "Output",ExpressionUUID->"2499af67-f7b9-431d-bf8a-2524759b7bf1"],
Cell[293745, 7416, 697, 18, 42, "Output",ExpressionUUID->"e4027ede-16e4-4e21-9bfb-328c2414aa70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294479, 7439, 3803, 80, 299, "Input",ExpressionUUID->"9955a83d-c92d-4de0-b16d-1a3229f2d8ca"],
Cell[298285, 7521, 3698, 113, 261, "Output",ExpressionUUID->"7dac4871-0600-454b-ab64-58a17a0e4cf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302020, 7639, 276, 5, 45, "Subsubsection",ExpressionUUID->"b26d0ab3-ffa1-4a85-a41f-00697dbbabf9"],
Cell[CellGroupData[{
Cell[302321, 7648, 1590, 39, 67, "Input",ExpressionUUID->"dd4fe955-58a8-4241-b7ad-a5ffccad3832"],
Cell[303914, 7689, 1237, 42, 74, "Echo",ExpressionUUID->"88081f39-0dc0-4706-9027-89de347b6125"]
}, Open  ]],
Cell[305166, 7734, 834, 19, 52, "Input",ExpressionUUID->"14c57675-8f79-4579-b517-834c2c6ad14a"],
Cell[CellGroupData[{
Cell[306025, 7757, 4658, 89, 235, "Input",ExpressionUUID->"f65220bd-5445-40d4-8647-d4ea714f6cb8"],
Cell[310686, 7848, 561, 12, 28, "Message",ExpressionUUID->"31e7a993-cf4a-469f-b1dc-515c840c08e4"],
Cell[311250, 7862, 1092, 23, 77, "Output",ExpressionUUID->"c7b9cd07-5a1d-4c18-bdce-70d77819570d"],
Cell[312345, 7887, 167, 2, 34, "Output",ExpressionUUID->"bd5781a0-67af-4aed-aca5-3aa28a2c3ace"],
Cell[312515, 7891, 167, 2, 34, "Output",ExpressionUUID->"c34e80e1-fee1-4435-a547-87a032c91e52"],
Cell[312685, 7895, 369, 8, 34, "Output",ExpressionUUID->"e5e4c583-e8eb-4d32-8159-6b275761109a"],
Cell[313057, 7905, 564, 12, 28, "Message",ExpressionUUID->"177557d5-95d8-4b0f-9762-622123f254c9"],
Cell[313624, 7919, 26546, 501, 270, "Output",ExpressionUUID->"128f21c9-7230-4282-8e6d-04d0508a7643"],
Cell[340173, 8422, 5347, 123, 195, "Output",ExpressionUUID->"82a7bb7c-7fec-41f4-8111-0d495aaa8eb8"],
Cell[345523, 8547, 106097, 2019, 293, "Output",ExpressionUUID->"4a6ce94d-3f2c-41ac-a948-212ed3388a74"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[451669, 10572, 261, 5, 45, "Subsubsection",ExpressionUUID->"8dc20b6a-5eed-4dc0-92da-8e7cc2f5da05"],
Cell[CellGroupData[{
Cell[451955, 10581, 2188, 42, 116, "Input",ExpressionUUID->"7b7f9dc4-1e5a-402b-8023-87d55366fa25"],
Cell[454146, 10625, 3658, 114, 253, "Output",ExpressionUUID->"2b6601b9-3d7d-4b36-95ba-b06afb5405fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457841, 10744, 2625, 60, 173, "Input",ExpressionUUID->"62fd9950-dd97-44d6-a196-5f1ee68f990a"],
Cell[460469, 10806, 3622, 100, 44, "Output",ExpressionUUID->"4769b7ea-228d-48bf-9d94-5940b1e102c6"],
Cell[464094, 10908, 704, 19, 42, "Output",ExpressionUUID->"862ca6d2-f1fe-4fec-8dcd-fb1bb7d67190"],
Cell[464801, 10929, 703, 19, 42, "Output",ExpressionUUID->"538adff9-a515-40f8-b1a9-063cb8c6a8d4"],
Cell[465507, 10950, 717, 24, 40, "Echo",ExpressionUUID->"1b686964-0e50-4e09-aaad-e55311d42f7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466261, 10979, 6302, 136, 379, "Input",ExpressionUUID->"c8c6f027-7a94-4a35-817f-ebe8510b54ec"],
Cell[472566, 11117, 3622, 100, 44, "Output",ExpressionUUID->"dd0c68dc-40f2-4e94-a351-cc5f7adf3e1b"],
Cell[476191, 11219, 613, 12, 46, "Message",ExpressionUUID->"f1336fe6-66e9-4dfe-95f9-6b88a60666e8"],
Cell[476807, 11233, 861, 20, 53, "Output",ExpressionUUID->"571e8aed-dc73-452c-b60d-3692b29b8410"],
Cell[477671, 11255, 171, 3, 34, "Output",ExpressionUUID->"15585d20-5ee2-4d7d-b61d-c28a8afb4bb3"],
Cell[477845, 11260, 170, 3, 34, "Output",ExpressionUUID->"f8c5087f-3bfd-4556-89ef-73ddbcbbafe2"],
Cell[478018, 11265, 228, 5, 34, "Output",ExpressionUUID->"6d05f258-310c-42d1-b3c5-36430437b710"],
Cell[478249, 11272, 32633, 607, 270, "Output",ExpressionUUID->"54e0e7ed-14c7-486a-9ecb-a7f022d11d1f"],
Cell[510885, 11881, 5050, 116, 195, "Output",ExpressionUUID->"acb186c4-8938-40af-8c39-ac10d931cc17"],
Cell[515938, 11999, 469, 10, 28, "Message",ExpressionUUID->"c80f5ccf-af32-42b1-ac79-164790ea645b"],
Cell[516410, 12011, 171, 3, 34, "Output",ExpressionUUID->"23338fc3-050a-493a-a66e-2fc864e1aeb3"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

